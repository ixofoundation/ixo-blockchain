syntax = "proto3";
package entity;

import "gogoproto/gogo.proto";
import "iid/iid.proto";
import "iid/tx.proto";
import "entity/entity.proto";
import "google/protobuf/timestamp.proto";


option go_package = "github.com/ixofoundation/ixo-blockchain/x/entity/types";

// Msg defines the project Msg service.
service Msg {

   // CreateProject defines a method for creating a project.
  rpc CreateEntity(MsgCreateEntity) returns (MsgCreateEntityResponse);

  // // UpdateEntityStatus defines a method for updating a entity's current status.
  rpc UpdateEntityStatus(MsgUpdateEntityStatus) returns (MsgUpdateEntityStatusResponse);

  rpc UpdateEntityConfig(MsgUpdateEntityConfig) returns (MsgUpdateEntityConfigResponse);

  // // UpdateProjectDoc defines a method for updating a project's data.
  // rpc UpdateProjectDoc(MsgUpdateProjectDoc) returns (MsgUpdateProjectDocResponse);
}

// MsgCreateProject defines a message for creating a project.
message MsgCreateEntity {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  // string                id            = 1; // the did
  string   entityType       = 1 [(gogoproto.jsontag) = "entity_type", (gogoproto.moretags) = "yaml:\"entity_type\""]; // address of the account signing the message
  int32 entityStatus        = 2 [(gogoproto.jsontag) = "entity_status", (gogoproto.moretags) = "yaml:\"entity_status\""]; // address of the account signing the message
  repeated string       controllers   = 3; // the list of controller DIDs
  repeated iid.Context      context        = 4;
  repeated iid.Verification verifications = 5; // the list of verification methods and relationships
  repeated iid.Service      services      = 6;
  repeated iid.AccordedRight accordedRight = 7;
  repeated iid.LinkedResource linkedResource = 8;

  // string versionId = 8;
  bool deactivated = 9;
  google.protobuf.Timestamp startDate = 10 [(gogoproto.stdtime) = true, (gogoproto.jsontag) = "start_date", (gogoproto.moretags) = "yaml:\"start_date\""]; // address of the account signing the message
  google.protobuf.Timestamp endDate = 11 [(gogoproto.stdtime) = true, (gogoproto.jsontag) = "end_date", (gogoproto.moretags) = "yaml:\"end_date\""]; // address of the account signing the message
  string stage = 12;
  string relayerNode = 13 [(gogoproto.jsontag) = "relayer_node", (gogoproto.moretags) = "yaml:\"relayer_node\""];
  string verifiableCredential = 14 [(gogoproto.jsontag) = "verifiable_credential", (gogoproto.moretags) = "yaml:\"verifiable_credential\""];
  repeated string credentials = 15;
  string   signer        = 16; // address of the account signing the message
}

// MsgCreateProjectResponse defines the Msg/CreateProject response type.
message MsgCreateEntityResponse {}

// MsgUpdateEntityStatus defines a message for updating a entity's current status.
message MsgUpdateEntityStatus {
  int64 status = 1;
}

// MsgUpdateProjectStatusResponse defines the Msg/UpdateEntityStatus response type.
message MsgUpdateEntityStatusResponse{}

message MsgUpdateEntityConfig {
  option (gogoproto.equal)      = false;

  string nft_contract_address   = 1 [(gogoproto.jsontag) = "nftContractAddress", (gogoproto.moretags) = "yaml:\"nftContractAddress\""];
  string signer                 = 2 [(gogoproto.jsontag) = "signer", (gogoproto.moretags) = "yaml:\"signer\""];
}

// MsgUpdateProjectStatusResponse defines the Msg/UpdateEntityStatus response type.
message MsgUpdateEntityConfigResponse{}

// // MsgCreateAgent defines a message for creating an agent on a project.
// message MsgCreateAgent {
//   option (gogoproto.goproto_stringer) = false;

//   string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
//   string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
//   CreateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgCreateAgentResponse defines the Msg/CreateAgent response type.
// message MsgCreateAgentResponse {}

// // MsgUpdateAgent defines a message for updating an agent on a project.
// message MsgUpdateAgent {
//   option (gogoproto.goproto_stringer) = false;

//   string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
//   string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
//   UpdateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgUpdateAgentResponse defines the Msg/UpdateAgent response type.
// message MsgUpdateAgentResponse {}

// // MsgCreateClaim defines a message for creating a claim on a project.
// message MsgCreateClaim {
//   option (gogoproto.goproto_stringer) = false;

//   string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
//   string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
//   CreateClaimDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgCreateClaimResponse defines the Msg/CreateClaim response type.
// message MsgCreateClaimResponse {}

// // MsgCreateEvaluation defines a message for creating an evaluation for a specific claim on a project.
// message MsgCreateEvaluation {
//   option (gogoproto.goproto_stringer) = false;

//   string tx_hash           = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
//   string sender_did        = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   string project_did       = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
//   CreateEvaluationDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgCreateEvaluationResponse defines the Msg/CreateEvaluation response type.
// message MsgCreateEvaluationResponse {}

// // MsgWithdrawFunds defines a message for project agents to withdraw their funds from a project.
// message MsgWithdrawFunds {
//   option (gogoproto.goproto_stringer) = false;

//   string sender_did     = 1 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   WithdrawFundsDoc data = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgWithdrawFundsResponse defines the Msg/WithdrawFunds response type.
// message MsgWithdrawFundsResponse {}

// // MsgUpdateProjectDoc defines a message for updating a project's data.
// message MsgUpdateProjectDoc {
//   string tx_hash     = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
//   string sender_did  = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
//   string project_did = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
//   bytes data         = 4 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"data\""];
// }

// // MsgUpdateProjectDocResponse defines the Msg/UpdateProjectDoc response type.
// message MsgUpdateProjectDocResponse {}
