syntax = "proto3";
package ixo.iid.v1beta1;

import "gogoproto/gogo.proto";
import "ixo/iid/v1beta1/iid.proto";
import "google/api/annotations.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/iid/types";

// Msg defines the identity Msg service.
service Msg {
  // CreateDidDocument defines a method for creating a new identity.
  rpc CreateIidDocument(MsgCreateIidDocument) returns (MsgCreateIidDocumentResponse);
  // UpdateDidDocument defines a method for updating an identity.
  rpc UpdateIidDocument(MsgUpdateIidDocument) returns (MsgUpdateIidDocumentResponse);

  // AddVerificationMethod adds a new verification method 
  rpc AddVerification(MsgAddVerification) returns (MsgAddVerificationResponse);
  // RevokeVerification remove the verification method and all associated verification Relations
  rpc RevokeVerification(MsgRevokeVerification) returns (MsgRevokeVerificationResponse);
  // SetVerificationRelationships overwrite current verification relationships
  rpc SetVerificationRelationships(MsgSetVerificationRelationships) returns (MsgSetVerificationRelationshipsResponse);

  // AddService add a new service
  rpc AddService(MsgAddService) returns (MsgAddServiceResponse);
  // DeleteService delete an existing service
  rpc DeleteService(MsgDeleteService) returns (MsgDeleteServiceResponse);

  // AddService add a new service
  rpc AddController(MsgAddController) returns (MsgAddControllerResponse);
  // DeleteService delete an existing service
  rpc DeleteController(MsgDeleteController) returns (MsgDeleteControllerResponse);
  //Add / Delete Linked Resource
  rpc AddLinkedResource(MsgAddLinkedResource) returns(MsgAddLinkedResourceResponse);
  rpc DeleteLinkedResource(MsgDeleteLinkedResource) returns(MsgDeleteLinkedResourceResponse);
  //Add / Delete Linked Entity
  rpc AddLinkedEntity(MsgAddLinkedEntity) returns(MsgAddLinkedEntityResponse);
  rpc DeleteLinkedEntity(MsgDeleteLinkedEntity) returns(MsgDeleteLinkedEntityResponse);
  //Add / Delete Accorded Right
  rpc AddAccordedRight(MsgAddAccordedRight) returns(MsgAddAccordedRightResponse);
  rpc DeleteAccordedRight(MsgDeleteAccordedRight) returns(MsgDeleteAccordedRightResponse);
  //Add / Delete Context
  rpc AddIidContext(MsgAddIidContext) returns(MsgAddIidContextResponse);
  rpc DeactivateIID(MsgDeactivateIID) returns(MsgDeactivateIIDResponse);
  rpc DeleteIidContext(MsgDeleteIidContext) returns(MsgDeleteIidContextResponse);
  //Update META
  rpc UpdateMetaData(MsgUpdateIidMeta) returns(MsgUpdateIidMetaResponse);
}

// Verification is a message that allows to assign a verification method
// to one or more verification relationships
message Verification {
  // verificationRelationships defines which relationships
  // are allowed to use the verification method
  repeated string    relationships = 1; // relationships that the method is allowed into.
  VerificationMethod method        = 2; // public key associated with the did document.
  repeated string    context       = 3; // additional contexts (json ld schemas)
}

// -------------------------------
// DID
// -------------------------------

// MsgCreateDidDocument defines a SDK message for creating a new did.
message MsgCreateIidDocument {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string                id            = 1; // the did
  repeated string       controllers   = 2; // the list of controller DIDs
  repeated Context      context        = 3;
  repeated Verification verifications = 4; // the list of verification methods and relationships
  repeated Service      services      = 5;
  repeated AccordedRight accordedRight = 6;
  repeated LinkedResource linkedResource = 7;
  repeated LinkedEntity linkedEntity = 8;
  string   signer        = 9; // address of the account signing the message
}

message MsgCreateIidDocumentResponse {}

// MsgUpdateDidDocument replace an existing did document with a new version
message MsgUpdateIidDocument {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  IidDocument     doc        = 1; // the did document to replace
  string          signer     = 5; // address of the account signing the message
}

message MsgUpdateIidDocumentResponse {}

// -------------------------------
// Verification methods / relations
// -------------------------------

message MsgAddVerification {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string       id           = 1; // the did
  Verification verification = 2; // the verification to add
  string       signer       = 3; // address of the account signing the message
}

message MsgAddVerificationResponse {}

message MsgSetVerificationRelationships {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string          id            = 1; // the did
  string          method_id     = 2; // the verification method id
  repeated string relationships = 3; // the list of relationships to set
  string          signer        = 4; // address of the account signing the message
}

message MsgSetVerificationRelationshipsResponse {}

message MsgRevokeVerification {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id        = 1; // the did
  string method_id = 2; // the verification method id
  string signer    = 3; // address of the account signing the message
}

message MsgRevokeVerificationResponse {}

// -------------------------------
// Services
// -------------------------------

message MsgAddService {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string  id           = 1; // the did
  Service service_data = 2; // the service data to add
  string  signer       = 3; // address of the account signing the message 
}

message MsgAddServiceResponse {}

message MsgDeleteService {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the did
  string service_id = 2; // the service id
  string signer     = 3; // address of the account signing the message 
}

message MsgDeleteServiceResponse {}


// -------------------------------
// Controllers
// -------------------------------

message MsgAddController {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id             = 1; // the did of the document
  string controller_did = 2; // the did to add as a controller of the did document
  string signer         = 3; // address of the account signing the message
}

message MsgAddControllerResponse {}

message MsgDeleteController {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id             = 1; // the did of the document
  string controller_did = 2; // the did to remove from the list of controllers of the did document
  string signer         = 3; // address of the account signing the message
}

message MsgDeleteControllerResponse {}

// -------------------------------
// IID Extension
// -------------------------------

message MsgAddLinkedResource {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string       id           = 1; // the did
  LinkedResource linkedResource = 2; // the verification to add
  string       signer       = 3; // address of the account signing the message
}

message MsgDeleteLinkedResource {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the did
  string resource_id = 2; // the service id
  string signer     = 3; // address of the account signing the message
}

message MsgAddLinkedEntity {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string       id           = 1; // the iid
  LinkedEntity linkedEntity = 2; // the entity to add
  string       signer       = 3; // address of the account signing the message
}

message MsgDeleteLinkedEntity {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the iid
  string entity_id = 2; // the entity id
  string signer     = 3; // address of the account signing the message
}

message MsgAddAccordedRight {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  string       id           = 1; // the did
  AccordedRight accordedRight = 2; // the Accorded right to add
  string       signer       = 3; // address of the account signing the message
}

message MsgDeleteAccordedRight {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the did
  string right_id = 2; // the service id
  string signer     = 3; // address of the account signing the message
}

message MsgAddIidContext {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  string      id           = 1; // the did
  Context     context = 2; // the context to add
  string      signer       = 3; // address of the account signing the message
}

message MsgDeactivateIID {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  string      id           = 1; // the did
  bool        state        = 2;
  string      signer       = 3; // address of the account signing the message
}

message MsgDeleteIidContext {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string id         = 1; // the did
  string contextKey = 2; // the context key
  string signer     = 3; // address of the account signing the message
}

message MsgUpdateIidMeta {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;
  string      id           = 1; // the did
  IidMetadata     meta = 2; // the context to add
  string      signer       = 3; // address of the account signing the message
}

message MsgAddLinkedResourceResponse {}
message MsgDeleteLinkedResourceResponse {}
message MsgAddLinkedEntityResponse {}
message MsgDeleteLinkedEntityResponse {}
message MsgAddAccordedRightResponse {}
message MsgDeleteAccordedRightResponse {}
message MsgAddIidContextResponse {}
message MsgDeleteIidContextResponse {}
message MsgUpdateIidMetaResponse {}
message MsgDeactivateIIDResponse {}
