syntax = "proto3";
package ixo.token.v1beta1;

import "gogoproto/gogo.proto";
import "ixo/iid/v1beta1/iid.proto";
import "ixo/token/v1beta1/token.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/token/types";

message MintAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  // address of minter
  string minter = 1;
  repeated MintConstraints constraints = 2;
}

message MintConstraints {
  string contract_address = 1;
  string amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint",
    (gogoproto.nullable) = false
  ];
  // name is the token name, which must be unique (namespace), will be verified
  // against Token name provided on msgCreateToken
  string name = 3;
  // index is the unique identifier hexstring that identifies the token
  string index = 4;
  // did of collection (eg Supamoto Malawi)
  string collection = 5;
  // tokenData is the linkedResources added to tokenMetadata when queried eg
  // (credential link ***.ipfs)
  repeated TokenData tokenData = 6;
}
