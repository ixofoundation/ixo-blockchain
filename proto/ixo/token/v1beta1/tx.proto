syntax = "proto3";
package ixo.token.v1beta1;

import "gogoproto/gogo.proto";
import "ixo/iid/v1beta1/iid.proto";
import "ixo/iid/v1beta1/tx.proto";
import "ixo/token/v1beta1/token.proto";
import "google/protobuf/timestamp.proto";


option go_package = "github.com/ixofoundation/ixo-blockchain/x/token/types";

// Msg defines the project Msg service.
service Msg {

   // CreateProject defines a method for creating a project.
  rpc SetupMinter(MsgSetupMinter) returns (MsgSetupMinterResponse);

  // rpc DelegateMintCapability() returns ();
  
  rpc MintToken(MsgMint) returns (MsgMintResponse);
  
  // Transfers an token and its nft to the recipient
  rpc TransferToken(MsgTransferToken) returns (MsgTransferTokenResponse);
}

// MsgCreateToken defines a message for creating a project.
// message MsgSetupMinter {
//   option (gogoproto.equal)            = false;
//   option (gogoproto.goproto_getters)  = false;

//   // An Token Type as defined by the implementer
//   string minterDid        = 1 [(gogoproto.casttype) = "github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment", (gogoproto.jsontag) = "minter_did", (gogoproto.moretags) = "yaml:\"minter_did\""]; // Owner of the Token NFT | The ownersdid used to sign this transaction.
//   string minterAddress    = 2 [(gogoproto.jsontag) = "minter_address", (gogoproto.moretags) = "yaml:\"minter_address\""]; // Owner of the Token NFT | The ownersdid used to sign this transaction.

// }



// MsgCreateProjectResponse defines the Msg/CreateProject response type.
message MsgCreateTokenResponse {}

message MsgTransferToken {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.equal)      = false;

  string tokenDid          = 1 [(gogoproto.jsontag) = "token_did", (gogoproto.moretags) = "yaml:\"token_did\""];
  string ownerDid      = 2 [(gogoproto.jsontag) = "owner_did", (gogoproto.moretags) = "yaml:\"owner_did\""]; // The ownersdid used to sign this transaction.
  string ownerAddress  = 3 [(gogoproto.jsontag) = "owner_address", (gogoproto.moretags) = "yaml:\"owner_address\""]; // The ownersdid used to sign this transaction.
  string recipientDid       = 4 [(gogoproto.jsontag) = "recipient_did", (gogoproto.moretags) = "yaml:\"recipient_did\""];
}

// MsgUpdateProjectStatusResponse defines the Msg/UpdateTokenStatus response type.
message MsgTransferTokenResponse{}

message Cw20Coin {
  string address = 1[(gogoproto.jsontag) = "address", (gogoproto.moretags) = "yaml:\"address\""]; 
  uint64 amount = 2[(gogoproto.jsontag) = "amount", (gogoproto.moretags) = "yaml:\"amount\""]; 
}

message SetupCw20 {
  string symbol = 1 [(gogoproto.jsontag) = "symbol", (gogoproto.moretags) = "yaml:\"symbol\""];
  uint32 decimals = 2 [(gogoproto.jsontag) = "decimals", (gogoproto.moretags) = "yaml:\"decimals\""];
  uint64 cap = 3 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "cap", (gogoproto.moretags) = "yaml:\"cap\""];
  repeated Cw20Coin instialBalances = 4 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "instial_balances", (gogoproto.moretags) = "yaml:\"instial_balances\""];
}

message SetupCw721 {
  string symbol = 1 [(gogoproto.jsontag) = "symbol", (gogoproto.moretags) = "yaml:\"symbol\""];
}

message SetupCw1155 {}


message MsgSetupMinter {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  string minterDid = 1 [(gogoproto.casttype) = "github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment", (gogoproto.jsontag) = "minter_did", (gogoproto.moretags) = "yaml:\"minter_did\""];
  string minterAddress = 2 [(gogoproto.jsontag) = "minter_address", (gogoproto.moretags) = "yaml:\"minter_address\""];
  string name = 4 [(gogoproto.jsontag) = "name", (gogoproto.moretags) = "yaml:\"name\""];
  string description = 5 [(gogoproto.jsontag) = "description", (gogoproto.moretags) = "yaml:\"description\""];
  oneof contract_info {
    SetupCw20 cw20 = 6 [(gogoproto.jsontag) = "cw20", (gogoproto.moretags) = "yaml:\"cw20\""];
    SetupCw721 cw721 = 7 [(gogoproto.jsontag) = "cw721", (gogoproto.moretags) = "yaml:\"cw721\""];
    SetupCw1155 cw1155 = 8 [(gogoproto.jsontag) = "cw1155", (gogoproto.moretags) = "yaml:\"cw1155\""];
  }
}
message MsgSetupMinterResponse {}


message MintCw20 {
  uint64 amount = 1;
}

message MintCw721 {
  string id = 1; //An IID that identifies the asset that this token represents
  oneof token_uri {
    string image = 2; //A URI pointing to a resource with media type image/* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
    string uri = 3; //Uri
  }
  bytes properties = 4 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"data\""]; //"Arbitrary properties. Values may be strings, numbers, object or arrays."];
}

message MintCw1155 {
  string id = 1; //An IID that identifies the asset that this token represents
  oneof token_uri {
    string image = 2; //A URI pointing to a resource with media type image/* representing the asset to which this token represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.
    string uri = 3; //Uri
  }
  uint64 value = 4;
}

message MsgMint {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_getters)  = false;

  

  string minterDid = 1 [(gogoproto.casttype) = "github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment", (gogoproto.jsontag) = "minter_did", (gogoproto.moretags) = "yaml:\"minter_did\""];
  string minterAddress = 2 [(gogoproto.jsontag) = "minter_address", (gogoproto.moretags) = "yaml:\"minter_address\""];
  string contractAddress = 3 [(gogoproto.jsontag) = "contract_address", (gogoproto.moretags) = "yaml:\"contract_address\""];
  string ownerDid = 4 [(gogoproto.casttype) = "github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment", (gogoproto.jsontag) = "minter_did", (gogoproto.moretags) = "yaml:\"minter_did\""];

  oneof mint_contract {
    MintCw20 cw20 = 5 [(gogoproto.jsontag) = "cw20", (gogoproto.moretags) = "yaml:\"cw20\""];
    MintCw721 cw721 = 6 [(gogoproto.jsontag) = "cw721", (gogoproto.moretags) = "yaml:\"cw721\""];
    MintCw1155 cw1155 = 7 [(gogoproto.jsontag) = "cw1155", (gogoproto.moretags) = "yaml:\"cw1155\""];
  }
}

message MsgMintResponse {}
