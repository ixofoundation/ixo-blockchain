syntax = "proto3";
package ixo.liquidstake.v1beta1;

import "google/api/annotations.proto";
import "ixo/liquidstake/v1beta1/liquidstake.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/v3/x/liquidstake/types";

// Query defines the gRPC query service for the liquidstake module.
service Query {
  // Params returns parameters of the liquidstake module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ixo/liquidstake/v1beta1/params";
  }

  // LiquidValidators returns liquid validators with states of the liquidstake
  // module.
  rpc LiquidValidators(QueryLiquidValidatorsRequest)
      returns (QueryLiquidValidatorsResponse) {
    option (google.api.http).get = "/ixo/liquidstake/v1beta1/validators";
  }

  // States returns states of the liquidstake module.
  rpc States(QueryStatesRequest) returns (QueryStatesResponse) {
    option (google.api.http).get = "/ixo/liquidstake/v1beta1/states";
  }
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryLiquidValidatorsRequest {}

message QueryLiquidValidatorsResponse {
  repeated LiquidValidatorState liquid_validators = 1
      [ (gogoproto.nullable) = false ];
}

message QueryStatesRequest {}

message QueryStatesResponse {
  NetAmountState net_amount_state = 1 [ (gogoproto.nullable) = false ];
}
