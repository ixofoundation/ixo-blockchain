syntax = "proto3";
package ixo.claims.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/claims/types";

message SubmitClaimAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  // address of admin
  string admin = 1;
  repeated SubmitClaimConstraints constraints = 2;
}

message SubmitClaimConstraints {
  // collection_id indicates to which Collection this claim belongs
  string collection_id = 1;
  uint64 agent_quota = 2;
}

message EvaluateClaimAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  // address of admin
  string admin = 1;
  repeated EvaluateClaimConstraints constraints = 2;
}

message EvaluateClaimConstraints {
  // collection_id indicates to which Collection this claim belongs
  string collection_id = 1;
  // either collection_id or claim_ids is needed
  repeated string claim_ids = 2;
  uint64 agent_quota = 3;
  // if zero then no before_date validation done
  google.protobuf.Timestamp before_date = 4 [ (gogoproto.stdtime) = true ];
  // max custom amount evaluator can change, if empty list must use amount
  // defined in Token payments
  repeated cosmos.base.v1beta1.Coin max_custom_amount = 10 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message WithdrawAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  // address of admin
  string admin = 1;
  repeated WithdrawConstraints constraints = 2;
}

message WithdrawConstraints {}
