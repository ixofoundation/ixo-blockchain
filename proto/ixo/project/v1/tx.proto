syntax = "proto3";
package ixo.project.v1;

import "gogoproto/gogo.proto";
import "ixo/project/v1/project.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/project/types";

// Msg defines the project Msg service.
service Msg {

   // CreateProject defines a method for creating a project.
  rpc CreateProject(MsgCreateProject) returns (MsgCreateProjectResponse);

  // UpdateProjectStatus defines a method for updating a project's current status.
  rpc UpdateProjectStatus(MsgUpdateProjectStatus) returns (MsgUpdateProjectStatusResponse);

  // CreateAgent defines a method for creating an agent on a project.
  rpc CreateAgent(MsgCreateAgent) returns (MsgCreateAgentResponse);

  // UpdateAgent defines a method for updating an agent on a project.
  rpc UpdateAgent(MsgUpdateAgent) returns (MsgUpdateAgentResponse);

  // CreateClaim defines a method for creating a claim on a project.
  rpc CreateClaim(MsgCreateClaim) returns (MsgCreateClaimResponse);

  // CreateEvaluation defines a method for creating an evaluation for a specific claim on a project.
  rpc CreateEvaluation(MsgCreateEvaluation) returns (MsgCreateEvaluationResponse);

  // WithdrawFunds defines a method for project agents to withdraw their funds from a project.
  rpc WithdrawFunds(MsgWithdrawFunds) returns (MsgWithdrawFundsResponse);

  // UpdateProjectDoc defines a method for updating a project's data.
  rpc UpdateProjectDoc(MsgUpdateProjectDoc) returns (MsgUpdateProjectDocResponse);
}

// MsgCreateProject defines a message for creating a project.
message MsgCreateProject {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash     = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did  = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  string pub_key     = 4 [(gogoproto.jsontag) = "pubKey", (gogoproto.moretags) = "yaml:\"pubKey\""];
  bytes data         = 5 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 6 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgCreateProjectResponse defines the Msg/CreateProject response type.
message MsgCreateProjectResponse {}

// MsgUpdateProjectStatus defines a message for updating a project's current status.
message MsgUpdateProjectStatus {
  string tx_hash              = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did           = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did          = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  UpdateProjectStatusDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 5 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgUpdateProjectStatusResponse defines the Msg/UpdateProjectStatus response type.
message MsgUpdateProjectStatusResponse{}

// MsgCreateAgent defines a message for creating an agent on a project.
message MsgCreateAgent {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 5 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgCreateAgentResponse defines the Msg/CreateAgent response type.
message MsgCreateAgentResponse {}

// MsgUpdateAgent defines a message for updating an agent on a project.
message MsgUpdateAgent {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  UpdateAgentDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 5 [(gogoproto.jsontag) = "sender_address", (gogoproto.moretags) = "yaml:\"sender_address\""];
}

// MsgUpdateAgentResponse defines the Msg/UpdateAgent response type.
message MsgUpdateAgentResponse {}

// MsgCreateClaim defines a message for creating a claim on a project.
message MsgCreateClaim {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash      = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did   = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did  = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateClaimDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 5 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgCreateClaimResponse defines the Msg/CreateClaim response type.
message MsgCreateClaimResponse {}

// MsgCreateEvaluation defines a message for creating an evaluation for a specific claim on a project.
message MsgCreateEvaluation {
  option (gogoproto.goproto_stringer) = false;

  string tx_hash           = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did        = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did       = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  CreateEvaluationDoc data = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address    = 5 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgCreateEvaluationResponse defines the Msg/CreateEvaluation response type.
message MsgCreateEvaluationResponse {}

// MsgWithdrawFunds defines a message for project agents to withdraw their funds from a project.
message MsgWithdrawFunds {
  option (gogoproto.goproto_stringer) = false;

  string sender_did     = 1 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  WithdrawFundsDoc data = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"iid\""];
  string sender_address = 5 [(gogoproto.jsontag) = "sender_address", (gogoproto.moretags) = "yaml:\"sender_address\""];
}

// MsgWithdrawFundsResponse defines the Msg/WithdrawFunds response type.
message MsgWithdrawFundsResponse {}

// MsgUpdateProjectDoc defines a message for updating a project's data.
message MsgUpdateProjectDoc {
  string tx_hash     = 1 [(gogoproto.jsontag) = "txHash", (gogoproto.moretags) = "yaml:\"txHash\""];
  string sender_did  = 2 [(gogoproto.jsontag) = "senderDid", (gogoproto.moretags) = "yaml:\"senderDid\""];
  string project_did = 3 [(gogoproto.jsontag) = "projectDid", (gogoproto.moretags) = "yaml:\"projectDid\""];
  bytes data         = 4 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.moretags) = "yaml:\"iid\""];
  string project_address  = 5 [(gogoproto.jsontag) = "project_address", (gogoproto.moretags) = "yaml:\"project_address\""];
}

// MsgUpdateProjectDocResponse defines the Msg/UpdateProjectDoc response type.
message MsgUpdateProjectDocResponse {}
