{
  "files": [
    {
      "name": "ixo/bonds/v1beta1/bonds.proto",
      "description": "",
      "package": "ixo.bonds.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BaseOrder",
          "longName": "BaseOrder",
          "fullName": "ixo.bonds.v1beta1.BaseOrder",
          "description": "BaseOrder defines a base order type. It contains all the necessary fields for\nspecifying the general details about a buy, sell, or swap order.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cancelled",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cancel_reason",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Batch",
          "longName": "Batch",
          "fullName": "ixo.bonds.v1beta1.Batch",
          "description": "Batch holds a collection of outstanding buy, sell, and swap orders on a\nparticular bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "blocks_remaining",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_public_alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_buy_amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_sell_amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buy_prices",
              "description": "",
              "label": "repeated",
              "type": "DecCoin",
              "longType": "cosmos.base.v1beta1.DecCoin",
              "fullType": "cosmos.base.v1beta1.DecCoin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sell_prices",
              "description": "",
              "label": "repeated",
              "type": "DecCoin",
              "longType": "cosmos.base.v1beta1.DecCoin",
              "fullType": "cosmos.base.v1beta1.DecCoin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buys",
              "description": "",
              "label": "repeated",
              "type": "BuyOrder",
              "longType": "BuyOrder",
              "fullType": "ixo.bonds.v1beta1.BuyOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sells",
              "description": "",
              "label": "repeated",
              "type": "SellOrder",
              "longType": "SellOrder",
              "fullType": "ixo.bonds.v1beta1.SellOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "swaps",
              "description": "",
              "label": "repeated",
              "type": "SwapOrder",
              "longType": "SwapOrder",
              "fullType": "ixo.bonds.v1beta1.SwapOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Bond",
          "longName": "Bond",
          "fullName": "ixo.bonds.v1beta1.Bond",
          "description": "Bond defines a token bonding curve type with all of its parameters.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creator_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function_parameters",
              "description": "",
              "label": "repeated",
              "type": "FunctionParam",
              "longType": "FunctionParam",
              "fullType": "ixo.bonds.v1beta1.FunctionParam",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve_tokens",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exit_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve_withdrawal_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_quantity_limits",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_rate",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_margin_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "available_reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_outcome_payment_reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allow_sells",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allow_reserve_withdrawals",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alpha_bond",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_blocks",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "outcome_payment",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondDetails",
          "longName": "BondDetails",
          "fullName": "ixo.bonds.v1beta1.BondDetails",
          "description": "BondDetails contains details about the current state of a given bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "spot_price",
              "description": "",
              "label": "repeated",
              "type": "DecCoin",
              "longType": "cosmos.base.v1beta1.DecCoin",
              "fullType": "cosmos.base.v1beta1.DecCoin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BuyOrder",
          "longName": "BuyOrder",
          "fullName": "ixo.bonds.v1beta1.BuyOrder",
          "description": "BuyOrder defines a type for submitting a buy order on a bond, together with\nthe maximum amount of reserve tokens the buyer is willing to pay.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_order",
              "description": "",
              "label": "",
              "type": "BaseOrder",
              "longType": "BaseOrder",
              "fullType": "ixo.bonds.v1beta1.BaseOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_prices",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FunctionParam",
          "longName": "FunctionParam",
          "fullName": "ixo.bonds.v1beta1.FunctionParam",
          "description": "FunctionParam is a key-value pair used for specifying a specific bond\nparameter.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "param",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.bonds.v1beta1.Params",
          "description": "Params defines the parameters for the bonds module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "reserved_bond_tokens",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SellOrder",
          "longName": "SellOrder",
          "fullName": "ixo.bonds.v1beta1.SellOrder",
          "description": "SellOrder defines a type for submitting a sell order on a bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_order",
              "description": "",
              "label": "",
              "type": "BaseOrder",
              "longType": "BaseOrder",
              "fullType": "ixo.bonds.v1beta1.BaseOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SwapOrder",
          "longName": "SwapOrder",
          "fullName": "ixo.bonds.v1beta1.SwapOrder",
          "description": "SwapOrder defines a type for submitting a swap order between two tokens on a\nbond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_order",
              "description": "",
              "label": "",
              "type": "BaseOrder",
              "longType": "BaseOrder",
              "fullType": "ixo.bonds.v1beta1.BaseOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/bonds/v1beta1/event.proto",
      "description": "",
      "package": "ixo.bonds.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "BondBuyOrderCancelledEvent",
          "longName": "BondBuyOrderCancelledEvent",
          "fullName": "ixo.bonds.v1beta1.BondBuyOrderCancelledEvent",
          "description": "BondBuyOrderCancelledEvent is an event triggered on a Bond buy order\ncancellation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "BuyOrder",
              "longType": "BuyOrder",
              "fullType": "ixo.bonds.v1beta1.BuyOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondBuyOrderEvent",
          "longName": "BondBuyOrderEvent",
          "fullName": "ixo.bonds.v1beta1.BondBuyOrderEvent",
          "description": "BondBuyOrderEvent is an event triggered on a Bond buy order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "BuyOrder",
              "longType": "BuyOrder",
              "fullType": "ixo.bonds.v1beta1.BuyOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondBuyOrderFulfilledEvent",
          "longName": "BondBuyOrderFulfilledEvent",
          "fullName": "ixo.bonds.v1beta1.BondBuyOrderFulfilledEvent",
          "description": "BondBuyOrderFulfilledEvent is an event triggered on a Bond buy order\nfullfillment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "BuyOrder",
              "longType": "BuyOrder",
              "fullType": "ixo.bonds.v1beta1.BuyOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_prices",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returned_to_address",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_bond_token_balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_prices_of_which_reserve",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_prices_of_which_funding",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondCreatedEvent",
          "longName": "BondCreatedEvent",
          "fullName": "ixo.bonds.v1beta1.BondCreatedEvent",
          "description": "BondCreatedEvent is an event triggered on a Bond creation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond",
              "description": "",
              "label": "",
              "type": "Bond",
              "longType": "Bond",
              "fullType": "ixo.bonds.v1beta1.Bond",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondEditAlphaFailedEvent",
          "longName": "BondEditAlphaFailedEvent",
          "fullName": "ixo.bonds.v1beta1.BondEditAlphaFailedEvent",
          "description": "BondEditAlphaFailedEvent is an event triggered on a failed attempt to edit of\nBond alpha value",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cancel_reason",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondEditAlphaSuccessEvent",
          "longName": "BondEditAlphaSuccessEvent",
          "fullName": "ixo.bonds.v1beta1.BondEditAlphaSuccessEvent",
          "description": "BondEditAlphaSuccessEvent is an event triggered on a successful edit of Bond\nalpha value",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "public_alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "system_alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondMakeOutcomePaymentEvent",
          "longName": "BondMakeOutcomePaymentEvent",
          "fullName": "ixo.bonds.v1beta1.BondMakeOutcomePaymentEvent",
          "description": "BondMakeOutcomePaymentEvent is an event triggered on a Bond make outcome\npayment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "outcome_payment",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sender_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sender_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondSellOrderEvent",
          "longName": "BondSellOrderEvent",
          "fullName": "ixo.bonds.v1beta1.BondSellOrderEvent",
          "description": "BondSellOrderEvent is an event triggered on a Bond sell order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "SellOrder",
              "longType": "SellOrder",
              "fullType": "ixo.bonds.v1beta1.SellOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondSellOrderFulfilledEvent",
          "longName": "BondSellOrderFulfilledEvent",
          "fullName": "ixo.bonds.v1beta1.BondSellOrderFulfilledEvent",
          "description": "BondSellOrderFulfilledEvent is an event triggered on a Bond sell order\nfullfillment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "SellOrder",
              "longType": "SellOrder",
              "fullType": "ixo.bonds.v1beta1.SellOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returned_to_address",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_bond_token_balance",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondSetNextAlphaEvent",
          "longName": "BondSetNextAlphaEvent",
          "fullName": "ixo.bonds.v1beta1.BondSetNextAlphaEvent",
          "description": "BondSetNextAlphaEvent is an event triggered when next batch alpha is set",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondSwapOrderEvent",
          "longName": "BondSwapOrderEvent",
          "fullName": "ixo.bonds.v1beta1.BondSwapOrderEvent",
          "description": "BondSwapOrderEvent is an event triggered on a Bond swap order",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "SwapOrder",
              "longType": "SwapOrder",
              "fullType": "ixo.bonds.v1beta1.SwapOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondSwapOrderFulfilledEvent",
          "longName": "BondSwapOrderFulfilledEvent",
          "fullName": "ixo.bonds.v1beta1.BondSwapOrderFulfilledEvent",
          "description": "BondSwapOrderFulfilledEvent is an event triggered on a Bond swap order\nfullfillment",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order",
              "description": "",
              "label": "",
              "type": "SwapOrder",
              "longType": "SwapOrder",
              "fullType": "ixo.bonds.v1beta1.SwapOrder",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "charged_fee",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returned_to_address",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens_swapped",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondUpdatedEvent",
          "longName": "BondUpdatedEvent",
          "fullName": "ixo.bonds.v1beta1.BondUpdatedEvent",
          "description": "BondUpdatedEvent is an event triggered on a Bond update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond",
              "description": "",
              "label": "",
              "type": "Bond",
              "longType": "Bond",
              "fullType": "ixo.bonds.v1beta1.Bond",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondWithdrawReserveEvent",
          "longName": "BondWithdrawReserveEvent",
          "fullName": "ixo.bonds.v1beta1.BondWithdrawReserveEvent",
          "description": "BondWithdrawReserveEvent is an event triggered on a Bond reserve withdrawal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_amount",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawer_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawer_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve_withdrawal_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "BondWithdrawShareEvent",
          "longName": "BondWithdrawShareEvent",
          "fullName": "ixo.bonds.v1beta1.BondWithdrawShareEvent",
          "description": "BondWithdrawShareEvent is an event triggered on a Bond share withdrawal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdraw_payment",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/bonds/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.bonds.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.bonds.v1beta1.GenesisState",
          "description": "GenesisState defines the bonds module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bonds",
              "description": "",
              "label": "repeated",
              "type": "Bond",
              "longType": "Bond",
              "fullType": "ixo.bonds.v1beta1.Bond",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batches",
              "description": "",
              "label": "repeated",
              "type": "Batch",
              "longType": "Batch",
              "fullType": "ixo.bonds.v1beta1.Batch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.bonds.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/bonds/v1beta1/query.proto",
      "description": "",
      "package": "ixo.bonds.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryAlphaMaximumsRequest",
          "longName": "QueryAlphaMaximumsRequest",
          "fullName": "ixo.bonds.v1beta1.QueryAlphaMaximumsRequest",
          "description": "QueryAlphaMaximumsRequest is the request type for the Query/AlphaMaximums RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryAlphaMaximumsResponse",
          "longName": "QueryAlphaMaximumsResponse",
          "fullName": "ixo.bonds.v1beta1.QueryAlphaMaximumsResponse",
          "description": "QueryAlphaMaximumsResponse is the response type for the Query/AlphaMaximums\nRPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_system_alpha_increase",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_system_alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryAvailableReserveRequest",
          "longName": "QueryAvailableReserveRequest",
          "fullName": "ixo.bonds.v1beta1.QueryAvailableReserveRequest",
          "description": "QueryAvailableReserveRequest is the request type for the\nQuery/AvailableReserve RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryAvailableReserveResponse",
          "longName": "QueryAvailableReserveResponse",
          "fullName": "ixo.bonds.v1beta1.QueryAvailableReserveResponse",
          "description": "QueryAvailableReserveResponse is the response type for the\nQuery/AvailableReserve RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "available_reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBatchRequest",
          "longName": "QueryBatchRequest",
          "fullName": "ixo.bonds.v1beta1.QueryBatchRequest",
          "description": "QueryBatchRequest is the request type for the Query/Batch RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBatchResponse",
          "longName": "QueryBatchResponse",
          "fullName": "ixo.bonds.v1beta1.QueryBatchResponse",
          "description": "QueryBatchResponse is the response type for the Query/Batch RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "batch",
              "description": "",
              "label": "",
              "type": "Batch",
              "longType": "Batch",
              "fullType": "ixo.bonds.v1beta1.Batch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBondRequest",
          "longName": "QueryBondRequest",
          "fullName": "ixo.bonds.v1beta1.QueryBondRequest",
          "description": "QueryBondRequest is the request type for the Query/Bond RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBondResponse",
          "longName": "QueryBondResponse",
          "fullName": "ixo.bonds.v1beta1.QueryBondResponse",
          "description": "QueryBondResponse is the response type for the Query/Bond RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond",
              "description": "",
              "label": "",
              "type": "Bond",
              "longType": "Bond",
              "fullType": "ixo.bonds.v1beta1.Bond",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBondsDetailedRequest",
          "longName": "QueryBondsDetailedRequest",
          "fullName": "ixo.bonds.v1beta1.QueryBondsDetailedRequest",
          "description": "QueryBondsDetailedRequest is the request type for the Query/BondsDetailed RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryBondsDetailedResponse",
          "longName": "QueryBondsDetailedResponse",
          "fullName": "ixo.bonds.v1beta1.QueryBondsDetailedResponse",
          "description": "QueryBondsDetailedResponse is the response type for the Query/BondsDetailed\nRPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bonds_detailed",
              "description": "",
              "label": "repeated",
              "type": "BondDetails",
              "longType": "BondDetails",
              "fullType": "ixo.bonds.v1beta1.BondDetails",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBondsRequest",
          "longName": "QueryBondsRequest",
          "fullName": "ixo.bonds.v1beta1.QueryBondsRequest",
          "description": "QueryBondsRequest is the request type for the Query/Bonds RPC method.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryBondsResponse",
          "longName": "QueryBondsResponse",
          "fullName": "ixo.bonds.v1beta1.QueryBondsResponse",
          "description": "QueryBondsResponse is the response type for the Query/Bonds RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bonds",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBuyPriceRequest",
          "longName": "QueryBuyPriceRequest",
          "fullName": "ixo.bonds.v1beta1.QueryBuyPriceRequest",
          "description": "QueryCustomPriceRequest is the request type for the Query/BuyPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryBuyPriceResponse",
          "longName": "QueryBuyPriceResponse",
          "fullName": "ixo.bonds.v1beta1.QueryBuyPriceResponse",
          "description": "QueryCustomPriceResponse is the response type for the Query/BuyPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "adjusted_supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "prices",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_prices",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCurrentPriceRequest",
          "longName": "QueryCurrentPriceRequest",
          "fullName": "ixo.bonds.v1beta1.QueryCurrentPriceRequest",
          "description": "QueryCurrentPriceRequest is the request type for the Query/CurrentPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCurrentPriceResponse",
          "longName": "QueryCurrentPriceResponse",
          "fullName": "ixo.bonds.v1beta1.QueryCurrentPriceResponse",
          "description": "QueryCurrentPriceResponse is the response type for the Query/CurrentPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_price",
              "description": "",
              "label": "repeated",
              "type": "DecCoin",
              "longType": "cosmos.base.v1beta1.DecCoin",
              "fullType": "cosmos.base.v1beta1.DecCoin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCurrentReserveRequest",
          "longName": "QueryCurrentReserveRequest",
          "fullName": "ixo.bonds.v1beta1.QueryCurrentReserveRequest",
          "description": "QueryCurrentReserveRequest is the request type for the Query/CurrentReserve\nRPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCurrentReserveResponse",
          "longName": "QueryCurrentReserveResponse",
          "fullName": "ixo.bonds.v1beta1.QueryCurrentReserveResponse",
          "description": "QueryCurrentReserveResponse is the response type for the Query/CurrentReserve\nRPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_reserve",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCustomPriceRequest",
          "longName": "QueryCustomPriceRequest",
          "fullName": "ixo.bonds.v1beta1.QueryCustomPriceRequest",
          "description": "QueryCustomPriceRequest is the request type for the Query/CustomPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCustomPriceResponse",
          "longName": "QueryCustomPriceResponse",
          "fullName": "ixo.bonds.v1beta1.QueryCustomPriceResponse",
          "description": "QueryCustomPriceResponse is the response type for the Query/CustomPrice RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "price",
              "description": "",
              "label": "repeated",
              "type": "DecCoin",
              "longType": "cosmos.base.v1beta1.DecCoin",
              "fullType": "cosmos.base.v1beta1.DecCoin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryLastBatchRequest",
          "longName": "QueryLastBatchRequest",
          "fullName": "ixo.bonds.v1beta1.QueryLastBatchRequest",
          "description": "QueryLastBatchRequest is the request type for the Query/LastBatch RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryLastBatchResponse",
          "longName": "QueryLastBatchResponse",
          "fullName": "ixo.bonds.v1beta1.QueryLastBatchResponse",
          "description": "QueryLastBatchResponse is the response type for the Query/LastBatch RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "last_batch",
              "description": "",
              "label": "",
              "type": "Batch",
              "longType": "Batch",
              "fullType": "ixo.bonds.v1beta1.Batch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.bonds.v1beta1.QueryParamsRequest",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.bonds.v1beta1.QueryParamsResponse",
          "description": "QueryParamsResponse is the response type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.bonds.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuerySellReturnRequest",
          "longName": "QuerySellReturnRequest",
          "fullName": "ixo.bonds.v1beta1.QuerySellReturnRequest",
          "description": "QuerySellReturnRequest is the request type for the Query/SellReturn RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuerySellReturnResponse",
          "longName": "QuerySellReturnResponse",
          "fullName": "ixo.bonds.v1beta1.QuerySellReturnResponse",
          "description": "QuerySellReturnResponse is the response type for the Query/SellReturn RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "adjusted_supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "returns",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exit_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_returns",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuerySwapReturnRequest",
          "longName": "QuerySwapReturnRequest",
          "fullName": "ixo.bonds.v1beta1.QuerySwapReturnRequest",
          "description": "QuerySwapReturnRequest is the request type for the Query/SwapReturn RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_token_with_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QuerySwapReturnResponse",
          "longName": "QuerySwapReturnResponse",
          "fullName": "ixo.bonds.v1beta1.QuerySwapReturnResponse",
          "description": "QuerySwapReturnResponse is the response type for the Query/SwapReturn RPC\nmethod.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "total_returns",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_fees",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.bonds.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "Bonds",
              "description": "Bonds returns all existing bonds.",
              "requestType": "QueryBondsRequest",
              "requestLongType": "QueryBondsRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryBondsRequest",
              "requestStreaming": false,
              "responseType": "QueryBondsResponse",
              "responseLongType": "QueryBondsResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryBondsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/bonds"
                    }
                  ]
                }
              }
            },
            {
              "name": "BondsDetailed",
              "description": "BondsDetailed returns a list of all existing bonds with some details about\ntheir current state.",
              "requestType": "QueryBondsDetailedRequest",
              "requestLongType": "QueryBondsDetailedRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryBondsDetailedRequest",
              "requestStreaming": false,
              "responseType": "QueryBondsDetailedResponse",
              "responseLongType": "QueryBondsDetailedResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryBondsDetailedResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/bonds_detailed"
                    }
                  ]
                }
              }
            },
            {
              "name": "Params",
              "description": "Params queries the parameters of x/bonds module.",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "Bond",
              "description": "Bond queries info of a specific bond.",
              "requestType": "QueryBondRequest",
              "requestLongType": "QueryBondRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryBondRequest",
              "requestStreaming": false,
              "responseType": "QueryBondResponse",
              "responseLongType": "QueryBondResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryBondResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}"
                    }
                  ]
                }
              }
            },
            {
              "name": "Batch",
              "description": "Batch queries info of a specific bond's current batch.",
              "requestType": "QueryBatchRequest",
              "requestLongType": "QueryBatchRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryBatchRequest",
              "requestStreaming": false,
              "responseType": "QueryBatchResponse",
              "responseLongType": "QueryBatchResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryBatchResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/batch"
                    }
                  ]
                }
              }
            },
            {
              "name": "LastBatch",
              "description": "LastBatch queries info of a specific bond's last batch.",
              "requestType": "QueryLastBatchRequest",
              "requestLongType": "QueryLastBatchRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryLastBatchRequest",
              "requestStreaming": false,
              "responseType": "QueryLastBatchResponse",
              "responseLongType": "QueryLastBatchResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryLastBatchResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/last_batch"
                    }
                  ]
                }
              }
            },
            {
              "name": "CurrentPrice",
              "description": "CurrentPrice queries the current price/s of a specific bond.",
              "requestType": "QueryCurrentPriceRequest",
              "requestLongType": "QueryCurrentPriceRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryCurrentPriceRequest",
              "requestStreaming": false,
              "responseType": "QueryCurrentPriceResponse",
              "responseLongType": "QueryCurrentPriceResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryCurrentPriceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/current_price"
                    }
                  ]
                }
              }
            },
            {
              "name": "CurrentReserve",
              "description": "CurrentReserve queries the current balance/s of the reserve pool for a\nspecific bond.",
              "requestType": "QueryCurrentReserveRequest",
              "requestLongType": "QueryCurrentReserveRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryCurrentReserveRequest",
              "requestStreaming": false,
              "responseType": "QueryCurrentReserveResponse",
              "responseLongType": "QueryCurrentReserveResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryCurrentReserveResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/current_reserve"
                    }
                  ]
                }
              }
            },
            {
              "name": "AvailableReserve",
              "description": "AvailableReserve queries current available balance/s of the reserve pool\nfor a specific bond.",
              "requestType": "QueryAvailableReserveRequest",
              "requestLongType": "QueryAvailableReserveRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryAvailableReserveRequest",
              "requestStreaming": false,
              "responseType": "QueryAvailableReserveResponse",
              "responseLongType": "QueryAvailableReserveResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryAvailableReserveResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/available_reserve"
                    }
                  ]
                }
              }
            },
            {
              "name": "CustomPrice",
              "description": "CustomPrice queries price/s of a specific bond at a specific supply.",
              "requestType": "QueryCustomPriceRequest",
              "requestLongType": "QueryCustomPriceRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryCustomPriceRequest",
              "requestStreaming": false,
              "responseType": "QueryCustomPriceResponse",
              "responseLongType": "QueryCustomPriceResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryCustomPriceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/price/{bond_amount}"
                    }
                  ]
                }
              }
            },
            {
              "name": "BuyPrice",
              "description": "BuyPrice queries price/s of buying an amount of tokens from a specific\nbond.",
              "requestType": "QueryBuyPriceRequest",
              "requestLongType": "QueryBuyPriceRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryBuyPriceRequest",
              "requestStreaming": false,
              "responseType": "QueryBuyPriceResponse",
              "responseLongType": "QueryBuyPriceResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryBuyPriceResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/buy_price/{bond_amount}"
                    }
                  ]
                }
              }
            },
            {
              "name": "SellReturn",
              "description": "SellReturn queries return/s on selling an amount of tokens of a specific\nbond.",
              "requestType": "QuerySellReturnRequest",
              "requestLongType": "QuerySellReturnRequest",
              "requestFullType": "ixo.bonds.v1beta1.QuerySellReturnRequest",
              "requestStreaming": false,
              "responseType": "QuerySellReturnResponse",
              "responseLongType": "QuerySellReturnResponse",
              "responseFullType": "ixo.bonds.v1beta1.QuerySellReturnResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/sell_return/{bond_amount}"
                    }
                  ]
                }
              }
            },
            {
              "name": "SwapReturn",
              "description": "SwapReturn queries return/s on swapping an amount of tokens to another\ntoken of a specific bond.",
              "requestType": "QuerySwapReturnRequest",
              "requestLongType": "QuerySwapReturnRequest",
              "requestFullType": "ixo.bonds.v1beta1.QuerySwapReturnRequest",
              "requestStreaming": false,
              "responseType": "QuerySwapReturnResponse",
              "responseLongType": "QuerySwapReturnResponse",
              "responseFullType": "ixo.bonds.v1beta1.QuerySwapReturnResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/swap_return/{from_token_with_amount}/{to_token}"
                    }
                  ]
                }
              }
            },
            {
              "name": "AlphaMaximums",
              "description": "AlphaMaximums queries alpha maximums for a specific augmented bonding\ncurve.",
              "requestType": "QueryAlphaMaximumsRequest",
              "requestLongType": "QueryAlphaMaximumsRequest",
              "requestFullType": "ixo.bonds.v1beta1.QueryAlphaMaximumsRequest",
              "requestStreaming": false,
              "responseType": "QueryAlphaMaximumsResponse",
              "responseLongType": "QueryAlphaMaximumsResponse",
              "responseFullType": "ixo.bonds.v1beta1.QueryAlphaMaximumsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/bonds/{bond_did}/alpha_maximums"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/bonds/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.bonds.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgBuy",
          "longName": "MsgBuy",
          "fullName": "ixo.bonds.v1beta1.MsgBuy",
          "description": "MsgBuy defines a message for buying from a bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "buyer_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_prices",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "buyer_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgBuyResponse",
          "longName": "MsgBuyResponse",
          "fullName": "ixo.bonds.v1beta1.MsgBuyResponse",
          "description": "MsgBuyResponse defines the Msg/Buy response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgCreateBond",
          "longName": "MsgCreateBond",
          "fullName": "ixo.bonds.v1beta1.MsgCreateBond",
          "description": "MsgCreateBond defines a message for creating a new bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "function_parameters",
              "description": "",
              "label": "repeated",
              "type": "FunctionParam",
              "longType": "FunctionParam",
              "fullType": "ixo.bonds.v1beta1.FunctionParam",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creator_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve_tokens",
              "description": "",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tx_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exit_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reserve_withdrawal_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_supply",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_quantity_limits",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_rate",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_margin_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allow_sells",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allow_reserve_withdrawals",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alpha_bond",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "batch_blocks",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "outcome_payment",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creator_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateBondResponse",
          "longName": "MsgCreateBondResponse",
          "fullName": "ixo.bonds.v1beta1.MsgCreateBondResponse",
          "description": "MsgCreateBondResponse defines the Msg/CreateBond response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgEditBond",
          "longName": "MsgEditBond",
          "fullName": "ixo.bonds.v1beta1.MsgEditBond",
          "description": "MsgEditBond defines a message for editing an existing bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "order_quantity_limits",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_rate",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sanity_margin_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "editor_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "editor_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgEditBondResponse",
          "longName": "MsgEditBondResponse",
          "fullName": "ixo.bonds.v1beta1.MsgEditBondResponse",
          "description": "MsgEditBondResponse defines the Msg/EditBond response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgMakeOutcomePayment",
          "longName": "MsgMakeOutcomePayment",
          "fullName": "ixo.bonds.v1beta1.MsgMakeOutcomePayment",
          "description": "MsgMakeOutcomePayment defines a message for making an outcome payment to a\nbond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "sender_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgMakeOutcomePaymentResponse",
          "longName": "MsgMakeOutcomePaymentResponse",
          "fullName": "ixo.bonds.v1beta1.MsgMakeOutcomePaymentResponse",
          "description": "MsgMakeOutcomePaymentResponse defines the Msg/MakeOutcomePayment response\ntype.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgSell",
          "longName": "MsgSell",
          "fullName": "ixo.bonds.v1beta1.MsgSell",
          "description": "MsgSell defines a message for selling from a bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "seller_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "seller_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSellResponse",
          "longName": "MsgSellResponse",
          "fullName": "ixo.bonds.v1beta1.MsgSellResponse",
          "description": "MsgSellResponse defines the Msg/Sell response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgSetNextAlpha",
          "longName": "MsgSetNextAlpha",
          "fullName": "ixo.bonds.v1beta1.MsgSetNextAlpha",
          "description": "MsgSetNextAlpha defines a message for editing a bond's alpha parameter.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alpha",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "delta",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetNextAlphaResponse",
          "longName": "MsgSetNextAlphaResponse",
          "fullName": "ixo.bonds.v1beta1.MsgSetNextAlphaResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgSwap",
          "longName": "MsgSwap",
          "fullName": "ixo.bonds.v1beta1.MsgSwap",
          "description": "MsgSwap defines a message for swapping from one reserve bond token to\nanother.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "swapper_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to_token",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "swapper_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSwapResponse",
          "longName": "MsgSwapResponse",
          "fullName": "ixo.bonds.v1beta1.MsgSwapResponse",
          "description": "MsgSwapResponse defines the Msg/Swap response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateBondState",
          "longName": "MsgUpdateBondState",
          "fullName": "ixo.bonds.v1beta1.MsgUpdateBondState",
          "description": "MsgUpdateBondState defines a message for updating a bond's current state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "editor_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "editor_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateBondStateResponse",
          "longName": "MsgUpdateBondStateResponse",
          "fullName": "ixo.bonds.v1beta1.MsgUpdateBondStateResponse",
          "description": "MsgUpdateBondStateResponse defines the Msg/UpdateBondState response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgWithdrawReserve",
          "longName": "MsgWithdrawReserve",
          "fullName": "ixo.bonds.v1beta1.MsgWithdrawReserve",
          "description": "MsgWithdrawReserve defines a message for withdrawing reserve from a bond.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdrawer_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "withdrawer_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgWithdrawReserveResponse",
          "longName": "MsgWithdrawReserveResponse",
          "fullName": "ixo.bonds.v1beta1.MsgWithdrawReserveResponse",
          "description": "MsgWithdrawReserveResponse defines the Msg/WithdrawReserve response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgWithdrawShare",
          "longName": "MsgWithdrawShare",
          "fullName": "ixo.bonds.v1beta1.MsgWithdrawShare",
          "description": "MsgWithdrawShare defines a message for withdrawing a share from a bond that\nis in the SETTLE stage.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "recipient_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bond_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgWithdrawShareResponse",
          "longName": "MsgWithdrawShareResponse",
          "fullName": "ixo.bonds.v1beta1.MsgWithdrawShareResponse",
          "description": "MsgWithdrawShareResponse defines the Msg/WithdrawShare response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.bonds.v1beta1.Msg",
          "description": "Msg defines the bonds Msg service.",
          "methods": [
            {
              "name": "CreateBond",
              "description": "CreateBond defines a method for creating a bond.",
              "requestType": "MsgCreateBond",
              "requestLongType": "MsgCreateBond",
              "requestFullType": "ixo.bonds.v1beta1.MsgCreateBond",
              "requestStreaming": false,
              "responseType": "MsgCreateBondResponse",
              "responseLongType": "MsgCreateBondResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgCreateBondResponse",
              "responseStreaming": false
            },
            {
              "name": "EditBond",
              "description": "EditBond defines a method for editing a bond.",
              "requestType": "MsgEditBond",
              "requestLongType": "MsgEditBond",
              "requestFullType": "ixo.bonds.v1beta1.MsgEditBond",
              "requestStreaming": false,
              "responseType": "MsgEditBondResponse",
              "responseLongType": "MsgEditBondResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgEditBondResponse",
              "responseStreaming": false
            },
            {
              "name": "SetNextAlpha",
              "description": "SetNextAlpha defines a method for editing a bond's alpha parameter.",
              "requestType": "MsgSetNextAlpha",
              "requestLongType": "MsgSetNextAlpha",
              "requestFullType": "ixo.bonds.v1beta1.MsgSetNextAlpha",
              "requestStreaming": false,
              "responseType": "MsgSetNextAlphaResponse",
              "responseLongType": "MsgSetNextAlphaResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgSetNextAlphaResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateBondState",
              "description": "UpdateBondState defines a method for updating a bond's current state.",
              "requestType": "MsgUpdateBondState",
              "requestLongType": "MsgUpdateBondState",
              "requestFullType": "ixo.bonds.v1beta1.MsgUpdateBondState",
              "requestStreaming": false,
              "responseType": "MsgUpdateBondStateResponse",
              "responseLongType": "MsgUpdateBondStateResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgUpdateBondStateResponse",
              "responseStreaming": false
            },
            {
              "name": "Buy",
              "description": "Buy defines a method for buying from a bond.",
              "requestType": "MsgBuy",
              "requestLongType": "MsgBuy",
              "requestFullType": "ixo.bonds.v1beta1.MsgBuy",
              "requestStreaming": false,
              "responseType": "MsgBuyResponse",
              "responseLongType": "MsgBuyResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgBuyResponse",
              "responseStreaming": false
            },
            {
              "name": "Sell",
              "description": "Sell defines a method for selling from a bond.",
              "requestType": "MsgSell",
              "requestLongType": "MsgSell",
              "requestFullType": "ixo.bonds.v1beta1.MsgSell",
              "requestStreaming": false,
              "responseType": "MsgSellResponse",
              "responseLongType": "MsgSellResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgSellResponse",
              "responseStreaming": false
            },
            {
              "name": "Swap",
              "description": "Swap defines a method for swapping from one reserve bond token to another.",
              "requestType": "MsgSwap",
              "requestLongType": "MsgSwap",
              "requestFullType": "ixo.bonds.v1beta1.MsgSwap",
              "requestStreaming": false,
              "responseType": "MsgSwapResponse",
              "responseLongType": "MsgSwapResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgSwapResponse",
              "responseStreaming": false
            },
            {
              "name": "MakeOutcomePayment",
              "description": "MakeOutcomePayment defines a method for making an outcome payment to a\nbond.",
              "requestType": "MsgMakeOutcomePayment",
              "requestLongType": "MsgMakeOutcomePayment",
              "requestFullType": "ixo.bonds.v1beta1.MsgMakeOutcomePayment",
              "requestStreaming": false,
              "responseType": "MsgMakeOutcomePaymentResponse",
              "responseLongType": "MsgMakeOutcomePaymentResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgMakeOutcomePaymentResponse",
              "responseStreaming": false
            },
            {
              "name": "WithdrawShare",
              "description": "WithdrawShare defines a method for withdrawing a share from a bond that is\nin the SETTLE stage.",
              "requestType": "MsgWithdrawShare",
              "requestLongType": "MsgWithdrawShare",
              "requestFullType": "ixo.bonds.v1beta1.MsgWithdrawShare",
              "requestStreaming": false,
              "responseType": "MsgWithdrawShareResponse",
              "responseLongType": "MsgWithdrawShareResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgWithdrawShareResponse",
              "responseStreaming": false
            },
            {
              "name": "WithdrawReserve",
              "description": "WithdrawReserve defines a method for withdrawing reserve from a bond.",
              "requestType": "MsgWithdrawReserve",
              "requestLongType": "MsgWithdrawReserve",
              "requestFullType": "ixo.bonds.v1beta1.MsgWithdrawReserve",
              "requestStreaming": false,
              "responseType": "MsgWithdrawReserveResponse",
              "responseLongType": "MsgWithdrawReserveResponse",
              "responseFullType": "ixo.bonds.v1beta1.MsgWithdrawReserveResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/claims/v1beta1/claims.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "CollectionIntentOptions",
          "longName": "CollectionIntentOptions",
          "fullName": "ixo.claims.v1beta1.CollectionIntentOptions",
          "description": "",
          "values": [
            {
              "name": "ALLOW",
              "number": "0",
              "description": "Allow: Intents can be made for claims, but claims can also be made without\nintents."
            },
            {
              "name": "DENY",
              "number": "1",
              "description": "Deny: Intents cannot be made for claims for the collection."
            },
            {
              "name": "REQUIRED",
              "number": "2",
              "description": "Required: Claims cannot be made without an associated intent. An intent is\nmandatory before a claim can be submitted."
            }
          ]
        },
        {
          "name": "CollectionState",
          "longName": "CollectionState",
          "fullName": "ixo.claims.v1beta1.CollectionState",
          "description": "",
          "values": [
            {
              "name": "OPEN",
              "number": "0",
              "description": ""
            },
            {
              "name": "PAUSED",
              "number": "1",
              "description": ""
            },
            {
              "name": "CLOSED",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "EvaluationStatus",
          "longName": "EvaluationStatus",
          "fullName": "ixo.claims.v1beta1.EvaluationStatus",
          "description": "",
          "values": [
            {
              "name": "PENDING",
              "number": "0",
              "description": ""
            },
            {
              "name": "APPROVED",
              "number": "1",
              "description": ""
            },
            {
              "name": "REJECTED",
              "number": "2",
              "description": ""
            },
            {
              "name": "DISPUTED",
              "number": "3",
              "description": ""
            },
            {
              "name": "INVALIDATED",
              "number": "4",
              "description": ""
            }
          ]
        },
        {
          "name": "IntentStatus",
          "longName": "IntentStatus",
          "fullName": "ixo.claims.v1beta1.IntentStatus",
          "description": "",
          "values": [
            {
              "name": "ACTIVE",
              "number": "0",
              "description": "Active: Intent is created and active, payments have been transferred to\nescrow if there is any"
            },
            {
              "name": "FULFILLED",
              "number": "1",
              "description": "Fulfilled: Intent is fulfilled, was used to create a claim and funds will\nbe released on claim APPROVAL, or funds will be reverted on claim REJECTION\nor DISPUTE"
            },
            {
              "name": "EXPIRED",
              "number": "2",
              "description": "Expired: Intent has expired, payments have been transferred back out of\nescrow"
            }
          ]
        },
        {
          "name": "PaymentStatus",
          "longName": "PaymentStatus",
          "fullName": "ixo.claims.v1beta1.PaymentStatus",
          "description": "",
          "values": [
            {
              "name": "NO_PAYMENT",
              "number": "0",
              "description": ""
            },
            {
              "name": "PROMISED",
              "number": "1",
              "description": "Promised: Agent is contracted to receive payment"
            },
            {
              "name": "AUTHORIZED",
              "number": "2",
              "description": "Authorized: Authz set up, no guarantee"
            },
            {
              "name": "GUARANTEED",
              "number": "3",
              "description": "Guaranteed: Escrow set up with funds blocked"
            },
            {
              "name": "PAID",
              "number": "4",
              "description": "Paid: Funds have been paid"
            },
            {
              "name": "FAILED",
              "number": "5",
              "description": "Failed: Payment failed, most probably due to insufficient funds"
            },
            {
              "name": "DISPUTED_PAYMENT",
              "number": "6",
              "description": "DisputedPayment: Payment disputed"
            }
          ]
        },
        {
          "name": "PaymentType",
          "longName": "PaymentType",
          "fullName": "ixo.claims.v1beta1.PaymentType",
          "description": "",
          "values": [
            {
              "name": "SUBMISSION",
              "number": "0",
              "description": ""
            },
            {
              "name": "APPROVAL",
              "number": "1",
              "description": ""
            },
            {
              "name": "EVALUATION",
              "number": "2",
              "description": ""
            },
            {
              "name": "REJECTION",
              "number": "3",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CW20Output",
          "longName": "CW20Output",
          "fullName": "ixo.claims.v1beta1.CW20Output",
          "description": "CW20Output represents a CW20 token output for split payments",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "address is the address of the recipient",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "contract_address is the address of the contract",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "amount is the amount of the token to transfer\nchose uint64 for now as amounts should be small enough to fit in a\nuint64(max 18446744073709551615)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CW20Payment",
          "longName": "CW20Payment",
          "fullName": "ixo.claims.v1beta1.CW20Payment",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "chose uint64 for now as amounts should be small enough to fit in a\nuint64(max 18446744073709551615)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Claim",
          "longName": "Claim",
          "fullName": "ixo.claims.v1beta1.Claim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection this claim belongs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "agent is the DID of the agent submitting the claim",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "submission_date",
              "description": "submissionDate is the date and time that the claim was submitted on-chain",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claim_id",
              "description": "claimID is the unique identifier of the claim in the cid hash format",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "evaluation",
              "description": "evaluation is the result of one or more claim evaluations",
              "label": "",
              "type": "Evaluation",
              "longType": "Evaluation",
              "fullType": "ixo.claims.v1beta1.Evaluation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payments_status",
              "description": "payments_status is the status of the payments for the claim",
              "label": "",
              "type": "ClaimPayments",
              "longType": "ClaimPayments",
              "fullType": "ixo.claims.v1beta1.ClaimPayments",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "use_intent",
              "description": "intent_id is the id of the intent for this claim, if any",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "custom amount specified by service agent for claim approval\nNOTE: if both amount and cw20 amount are empty then collection default is\nused",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "custom cw20 payments specified by service agent for claim\napproval\nNOTE: if both amount and cw20 amount are empty then collection default is\nused",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClaimPayments",
          "longName": "ClaimPayments",
          "fullName": "ixo.claims.v1beta1.ClaimPayments",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "submission",
              "description": "",
              "label": "",
              "type": "PaymentStatus",
              "longType": "PaymentStatus",
              "fullType": "ixo.claims.v1beta1.PaymentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "evaluation",
              "description": "",
              "label": "",
              "type": "PaymentStatus",
              "longType": "PaymentStatus",
              "fullType": "ixo.claims.v1beta1.PaymentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approval",
              "description": "",
              "label": "",
              "type": "PaymentStatus",
              "longType": "PaymentStatus",
              "fullType": "ixo.claims.v1beta1.PaymentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rejection",
              "description": "PaymentStatus penalty = 5;",
              "label": "",
              "type": "PaymentStatus",
              "longType": "PaymentStatus",
              "fullType": "ixo.claims.v1beta1.PaymentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Collection",
          "longName": "Collection",
          "fullName": "ixo.claims.v1beta1.Collection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "collection id is the incremented internal id for the collection of claims",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity",
              "description": "entity is the DID of the entity for which the claims are being created",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin",
              "description": "admin is the account address that will authorize or revoke agents and\npayments (the grantor), and can update the collection",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol",
              "description": "protocol is the DID of the claim protocol",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "startDate is the date after which claims may be submitted",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "endDate is the date after which no more claims may be submitted (no endDate\nis allowed)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quota",
              "description": "quota is the maximum number of claims that may be submitted, 0 is unlimited",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "count",
              "description": "count is the number of claims already submitted (internally calculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "evaluated",
              "description": "evaluated is the number of claims that have been evaluated (internally\ncalculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approved",
              "description": "approved is the number of claims that have been evaluated and approved\n(internally calculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rejected",
              "description": "rejected is the number of claims that have been evaluated and rejected\n(internally calculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "disputed",
              "description": "disputed is the number of claims that have disputed status (internally\ncalculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "state is the current state of this Collection (open, paused, closed)",
              "label": "",
              "type": "CollectionState",
              "longType": "CollectionState",
              "fullType": "ixo.claims.v1beta1.CollectionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payments",
              "description": "payments is the amount paid for claim submission, evaluation, approval, or\nrejection",
              "label": "",
              "type": "Payments",
              "longType": "Payments",
              "fullType": "ixo.claims.v1beta1.Payments",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "signer address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "invalidated",
              "description": "invalidated is the number of claims that have been evaluated as invalid\n(internally calculated)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "escrow_account",
              "description": "escrow_account is the escrow account address for this collection created at\ncollection creation, current purpose is to transfer payments to escrow\naccount for GUARANTEED payments through intents",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intents",
              "description": "intents is the option for intents for this collection (allow, deny,\nrequired)",
              "label": "",
              "type": "CollectionIntentOptions",
              "longType": "CollectionIntentOptions",
              "fullType": "ixo.claims.v1beta1.CollectionIntentOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Contract1155Payment",
          "longName": "Contract1155Payment",
          "fullName": "ixo.claims.v1beta1.Contract1155Payment",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Dispute",
          "longName": "Dispute",
          "fullName": "ixo.claims.v1beta1.Dispute",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "type is expressed as an integer, interpreted by the client",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "DisputeData",
              "longType": "DisputeData",
              "fullType": "ixo.claims.v1beta1.DisputeData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DisputeData",
          "longName": "DisputeData",
          "fullName": "ixo.claims.v1beta1.DisputeData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "uri",
              "description": "dispute link ***.ipfs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "encrypted",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Evaluation",
          "longName": "Evaluation",
          "fullName": "ixo.claims.v1beta1.Evaluation",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim_id",
              "description": "claim_id indicates which Claim this evaluation is for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection the claim being evaluated\nbelongs to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle",
              "description": "oracle is the DID of the Oracle entity that evaluates the claim",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "agent is the DID of the agent that submits the evaluation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "status is the evaluation status expressed as an integer (2=approved,\n3=rejected, ...)",
              "label": "",
              "type": "EvaluationStatus",
              "longType": "EvaluationStatus",
              "fullType": "ixo.claims.v1beta1.EvaluationStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "reason is the code expressed as an integer, for why the evaluation result\nwas given (codes defined by evaluator)",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verification_proof",
              "description": "verificationProof is the cid of the evaluation Verfiable Credential",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "evaluation_date",
              "description": "evaluationDate is the date and time that the claim evaluation was submitted\non-chain",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "custom amount specified by evaluator for claim approval\nNOTE: if both amount and cw20 amount are empty then collection default is\nused",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "custom cw20 payments specified by evaluator for claim approval\nNOTE: if both amount and cw20 amount are empty then collection default is\nused",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Intent",
          "longName": "Intent",
          "fullName": "ixo.claims.v1beta1.Intent",
          "description": "Intent defines the structure for a service agent's claim intent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "id is the incremented internal id for the intent",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "The service agent's DID (Decentralized Identifier).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "The service agent's address.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "The id of the collection this intent is linked to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claim_id",
              "description": "claim_id (optional, set when claim is submitted)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "The time the intent was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_at",
              "description": "Timeout period for the intent. If the claim is not submitted by this time,\nthe intent expires.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the intent (e.g., \"ACTIVE\" or \"FULFILLED\").",
              "label": "",
              "type": "IntentStatus",
              "longType": "IntentStatus",
              "fullType": "ixo.claims.v1beta1.IntentStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The payment amount the agent intends to claim, if any.",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "The CW20Payment amount the agent intends to claim, if any.",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from_address",
              "description": "the address the escrow payment came from",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "escrow_address",
              "description": "the escrow account address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.claims.v1beta1.Params",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_sequence",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "ixo_account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "network_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_fee_percentage",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intent_sequence",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Payment",
          "longName": "Payment",
          "fullName": "ixo.claims.v1beta1.Payment",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "account is the entity account address from which the payment will be made",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_1155_payment",
              "description": "if empty(nil) then no contract payment, not allowed for Evaluation Payment",
              "label": "",
              "type": "Contract1155Payment",
              "longType": "Contract1155Payment",
              "fullType": "ixo.claims.v1beta1.Contract1155Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timeout_ns",
              "description": "timeout after claim/evaluation to create authZ for payment, if 0 then\nimmediate direct payment",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "cw20 payments, can be empty or multiple",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_oracle_payment",
              "description": "boolean to indicate if the payment is for oracle payments, aka it will go\nthrough network fees split, only allowed for APPROVED payment types. NOTE:\nif true and the payment contains cw20 payments, the claim will only be\nsuccessfully if an intent exists to ensure immediate cw20 payment split,\nsince there is no WithdrawalAuthorization to manage the cw20 payment split\nfor delayed payments",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Payments",
          "longName": "Payments",
          "fullName": "ixo.claims.v1beta1.Payments",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "submission",
              "description": "",
              "label": "",
              "type": "Payment",
              "longType": "Payment",
              "fullType": "ixo.claims.v1beta1.Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "evaluation",
              "description": "",
              "label": "",
              "type": "Payment",
              "longType": "Payment",
              "fullType": "ixo.claims.v1beta1.Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "approval",
              "description": "",
              "label": "",
              "type": "Payment",
              "longType": "Payment",
              "fullType": "ixo.claims.v1beta1.Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "rejection",
              "description": "Payment penalty = 5;",
              "label": "",
              "type": "Payment",
              "longType": "Payment",
              "fullType": "ixo.claims.v1beta1.Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/claims/v1beta1/authz.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "CreateClaimAuthorizationType",
          "longName": "CreateClaimAuthorizationType",
          "fullName": "ixo.claims.v1beta1.CreateClaimAuthorizationType",
          "description": "AuthorizationType defines the types of claim authorizations that can be\ncreated",
          "values": [
            {
              "name": "ALL",
              "number": "0",
              "description": "both submit and evaluate"
            },
            {
              "name": "SUBMIT",
              "number": "1",
              "description": "submit only"
            },
            {
              "name": "EVALUATE",
              "number": "2",
              "description": "evaluate only"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "CreateClaimAuthorizationAuthorization",
          "longName": "CreateClaimAuthorizationAuthorization",
          "fullName": "ixo.claims.v1beta1.CreateClaimAuthorizationAuthorization",
          "description": "CreateClaimAuthorizationAuthorization allows a grantee to create\nSubmitClaimAuthorization and EvaluateClaimAuthorization for specific\ncollections(constraints)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "admin",
              "description": "address of admin (entity admin module account)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "constraints",
              "description": "Constraints on the authorizations that can be created",
              "label": "repeated",
              "type": "CreateClaimAuthorizationConstraints",
              "longType": "CreateClaimAuthorizationConstraints",
              "fullType": "ixo.claims.v1beta1.CreateClaimAuthorizationConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CreateClaimAuthorizationConstraints",
          "longName": "CreateClaimAuthorizationConstraints",
          "fullName": "ixo.claims.v1beta1.CreateClaimAuthorizationConstraints",
          "description": "CreateClaimAuthorizationConstraints defines the constraints for creating\nclaim authorizations",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "max_authorizations",
              "description": "Maximum number of authorizations that can be created through this\nmeta-authorization, 0 means no quota",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_agent_quota",
              "description": "Maximum quota that can be set in created authorizations\n0 means no quota maximum quota per authorization",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_amount",
              "description": "Maximum amount that can be set in created authorizations,\nif empty then any custom amount is allowed in the created authorizations\nexplicitly set to 0 to disallow any custom amount in the created\nauthorizations",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_cw20_payment",
              "description": "Maximum cw20 payment that can be set in created authorizations,\nif empty then any cw20 payment is allowed in the created authorizations\nexplicitly set to 0 to disallow any cw20 payment in the created\nauthorizations",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiration",
              "description": "Expiration of this meta-authorization(specific constraint), if not set then\nno expiration",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_ids",
              "description": "Collection IDs the grantee can create authorizations for, if empty then all\ncollections for the admin are allowed",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allowed_auth_types",
              "description": "Types of authorizations the grantee can create (submit, evaluate, or\nall(both))",
              "label": "",
              "type": "CreateClaimAuthorizationType",
              "longType": "CreateClaimAuthorizationType",
              "fullType": "ixo.claims.v1beta1.CreateClaimAuthorizationType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_intent_duration_ns",
              "description": "Maximum intent duration for the authorization allowed (for submit)",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EvaluateClaimAuthorization",
          "longName": "EvaluateClaimAuthorization",
          "fullName": "ixo.claims.v1beta1.EvaluateClaimAuthorization",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "admin",
              "description": "address of admin (entity admin module account)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "constraints",
              "description": "",
              "label": "repeated",
              "type": "EvaluateClaimConstraints",
              "longType": "EvaluateClaimConstraints",
              "fullType": "ixo.claims.v1beta1.EvaluateClaimConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EvaluateClaimConstraints",
          "longName": "EvaluateClaimConstraints",
          "fullName": "ixo.claims.v1beta1.EvaluateClaimConstraints",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection this claim belongs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claim_ids",
              "description": "either collection_id or claim_ids is needed",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_quota",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "before_date",
              "description": "if null then no before_date validation done",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_custom_amount",
              "description": "max custom amount evaluator can change, if empty then no custom amount is\nallowed, and default payments from Collection payments are used",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_custom_cw20_payment",
              "description": "max custom cw20 payment evaluator can change, if empty then no custom\namount is allowed, and default payments from Collection payments are used",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitClaimAuthorization",
          "longName": "SubmitClaimAuthorization",
          "fullName": "ixo.claims.v1beta1.SubmitClaimAuthorization",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "admin",
              "description": "address of admin (entity admin module account)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "constraints",
              "description": "",
              "label": "repeated",
              "type": "SubmitClaimConstraints",
              "longType": "SubmitClaimConstraints",
              "fullType": "ixo.claims.v1beta1.SubmitClaimConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SubmitClaimConstraints",
          "longName": "SubmitClaimConstraints",
          "fullName": "ixo.claims.v1beta1.SubmitClaimConstraints",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection this claim belongs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_quota",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_amount",
              "description": "custom max_amount allowed to be specified by service agent for claim\napproval, if empty then no custom amount is allowed, and default payments\nfrom Collection payments are used",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_cw20_payment",
              "description": "custom max_cw20_payment allowed to be specified by service agent for claim\napproval, if empty then no custom amount is allowed, and default payments\nfrom Collection payments are used",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intent_duration_ns",
              "description": "intent_duration_ns is the duration for which the intent is active, after\nwhich it will expire (in nanoseconds)",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawPaymentAuthorization",
          "longName": "WithdrawPaymentAuthorization",
          "fullName": "ixo.claims.v1beta1.WithdrawPaymentAuthorization",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "admin",
              "description": "address of admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "constraints",
              "description": "",
              "label": "repeated",
              "type": "WithdrawPaymentConstraints",
              "longType": "WithdrawPaymentConstraints",
              "fullType": "ixo.claims.v1beta1.WithdrawPaymentConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WithdrawPaymentConstraints",
          "longName": "WithdrawPaymentConstraints",
          "fullName": "ixo.claims.v1beta1.WithdrawPaymentConstraints",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim_id",
              "description": "claim_id the withdrawal is for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inputs",
              "description": "Inputs to the multisend tx to run to withdraw payment",
              "label": "repeated",
              "type": "Input",
              "longType": "cosmos.bank.v1beta1.Input",
              "fullType": "cosmos.bank.v1beta1.Input",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "outputs",
              "description": "Outputs for the multisend tx to run to withdraw payment",
              "label": "repeated",
              "type": "Output",
              "longType": "cosmos.bank.v1beta1.Output",
              "fullType": "cosmos.bank.v1beta1.Output",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payment_type",
              "description": "payment type to keep track what payment is for and mark claim payment\naccordingly",
              "label": "",
              "type": "PaymentType",
              "longType": "PaymentType",
              "fullType": "ixo.claims.v1beta1.PaymentType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_1155_payment",
              "description": "if empty(nil) then no contract payment",
              "label": "",
              "type": "Contract1155Payment",
              "longType": "Contract1155Payment",
              "fullType": "ixo.claims.v1beta1.Contract1155Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "toAddress",
              "description": "for contract payment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fromAddress",
              "description": "for contract payment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "release_date",
              "description": "date that grantee can execute authorization, calculated from created date\nplus the timeout on Collection payments, if null then none",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "cw20 payments, can be empty or multiple",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/claims/v1beta1/event.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ClaimAuthorizationCreatedEvent",
          "longName": "ClaimAuthorizationCreatedEvent",
          "fullName": "ixo.claims.v1beta1.ClaimAuthorizationCreatedEvent",
          "description": "ClaimAuthorizationCreatedEvent is an event triggered on a Claim authorization\ncreation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "creator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creator_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auth_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClaimDisputedEvent",
          "longName": "ClaimDisputedEvent",
          "fullName": "ixo.claims.v1beta1.ClaimDisputedEvent",
          "description": "ClaimDisputedEvent is an event triggered on a Claim dispute",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "dispute",
              "description": "",
              "label": "",
              "type": "Dispute",
              "longType": "Dispute",
              "fullType": "ixo.claims.v1beta1.Dispute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClaimEvaluatedEvent",
          "longName": "ClaimEvaluatedEvent",
          "fullName": "ixo.claims.v1beta1.ClaimEvaluatedEvent",
          "description": "ClaimEvaluatedEvent is an event triggered on a Claim evaluation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "evaluation",
              "description": "",
              "label": "",
              "type": "Evaluation",
              "longType": "Evaluation",
              "fullType": "ixo.claims.v1beta1.Evaluation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClaimSubmittedEvent",
          "longName": "ClaimSubmittedEvent",
          "fullName": "ixo.claims.v1beta1.ClaimSubmittedEvent",
          "description": "CollectionCreatedEvent is an event triggered on a Claim submission",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim",
              "description": "",
              "label": "",
              "type": "Claim",
              "longType": "Claim",
              "fullType": "ixo.claims.v1beta1.Claim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ClaimUpdatedEvent",
          "longName": "ClaimUpdatedEvent",
          "fullName": "ixo.claims.v1beta1.ClaimUpdatedEvent",
          "description": "ClaimUpdatedEvent is an event triggered on a Claim update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim",
              "description": "",
              "label": "",
              "type": "Claim",
              "longType": "Claim",
              "fullType": "ixo.claims.v1beta1.Claim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionCreatedEvent",
          "longName": "CollectionCreatedEvent",
          "fullName": "ixo.claims.v1beta1.CollectionCreatedEvent",
          "description": "CollectionCreatedEvent is an event triggered on a Collection creation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "Collection",
              "longType": "Collection",
              "fullType": "ixo.claims.v1beta1.Collection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CollectionUpdatedEvent",
          "longName": "CollectionUpdatedEvent",
          "fullName": "ixo.claims.v1beta1.CollectionUpdatedEvent",
          "description": "CollectionUpdatedEvent is an event triggered on a Collection update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "Collection",
              "longType": "Collection",
              "fullType": "ixo.claims.v1beta1.Collection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IntentSubmittedEvent",
          "longName": "IntentSubmittedEvent",
          "fullName": "ixo.claims.v1beta1.IntentSubmittedEvent",
          "description": "IntentSubmittedEvent is an event triggered on an Intent submission",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "intent",
              "description": "",
              "label": "",
              "type": "Intent",
              "longType": "Intent",
              "fullType": "ixo.claims.v1beta1.Intent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IntentUpdatedEvent",
          "longName": "IntentUpdatedEvent",
          "fullName": "ixo.claims.v1beta1.IntentUpdatedEvent",
          "description": "IntentUpdatedEvent is an event triggered on an Intent update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "intent",
              "description": "",
              "label": "",
              "type": "Intent",
              "longType": "Intent",
              "fullType": "ixo.claims.v1beta1.Intent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PaymentWithdrawCreatedEvent",
          "longName": "PaymentWithdrawCreatedEvent",
          "fullName": "ixo.claims.v1beta1.PaymentWithdrawCreatedEvent",
          "description": "ClaimDisputedEvent is an event triggered on a Claim dispute",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdraw",
              "description": "",
              "label": "",
              "type": "WithdrawPaymentConstraints",
              "longType": "WithdrawPaymentConstraints",
              "fullType": "ixo.claims.v1beta1.WithdrawPaymentConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PaymentWithdrawnEvent",
          "longName": "PaymentWithdrawnEvent",
          "fullName": "ixo.claims.v1beta1.PaymentWithdrawnEvent",
          "description": "ClaimDisputedEvent is an event triggered on a Claim dispute",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "withdraw",
              "description": "",
              "label": "",
              "type": "WithdrawPaymentConstraints",
              "longType": "WithdrawPaymentConstraints",
              "fullType": "ixo.claims.v1beta1.WithdrawPaymentConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_outputs",
              "description": "",
              "label": "repeated",
              "type": "CW20Output",
              "longType": "CW20Output",
              "fullType": "ixo.claims.v1beta1.CW20Output",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/claims/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.claims.v1beta1.GenesisState",
          "description": "GenesisState defines the claims module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.claims.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collections",
              "description": "",
              "label": "repeated",
              "type": "Collection",
              "longType": "Collection",
              "fullType": "ixo.claims.v1beta1.Collection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claims",
              "description": "",
              "label": "repeated",
              "type": "Claim",
              "longType": "Claim",
              "fullType": "ixo.claims.v1beta1.Claim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "disputes",
              "description": "",
              "label": "repeated",
              "type": "Dispute",
              "longType": "Dispute",
              "fullType": "ixo.claims.v1beta1.Dispute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intents",
              "description": "",
              "label": "repeated",
              "type": "Intent",
              "longType": "Intent",
              "fullType": "ixo.claims.v1beta1.Intent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/claims/v1beta1/query.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryClaimListRequest",
          "longName": "QueryClaimListRequest",
          "fullName": "ixo.claims.v1beta1.QueryClaimListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryClaimListResponse",
          "longName": "QueryClaimListResponse",
          "fullName": "ixo.claims.v1beta1.QueryClaimListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claims",
              "description": "",
              "label": "repeated",
              "type": "Claim",
              "longType": "Claim",
              "fullType": "ixo.claims.v1beta1.Claim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryClaimRequest",
          "longName": "QueryClaimRequest",
          "fullName": "ixo.claims.v1beta1.QueryClaimRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryClaimResponse",
          "longName": "QueryClaimResponse",
          "fullName": "ixo.claims.v1beta1.QueryClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim",
              "description": "",
              "label": "",
              "type": "Claim",
              "longType": "Claim",
              "fullType": "ixo.claims.v1beta1.Claim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCollectionListRequest",
          "longName": "QueryCollectionListRequest",
          "fullName": "ixo.claims.v1beta1.QueryCollectionListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCollectionListResponse",
          "longName": "QueryCollectionListResponse",
          "fullName": "ixo.claims.v1beta1.QueryCollectionListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collections",
              "description": "",
              "label": "repeated",
              "type": "Collection",
              "longType": "Collection",
              "fullType": "ixo.claims.v1beta1.Collection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCollectionRequest",
          "longName": "QueryCollectionRequest",
          "fullName": "ixo.claims.v1beta1.QueryCollectionRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCollectionResponse",
          "longName": "QueryCollectionResponse",
          "fullName": "ixo.claims.v1beta1.QueryCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "Collection",
              "longType": "Collection",
              "fullType": "ixo.claims.v1beta1.Collection",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryDisputeListRequest",
          "longName": "QueryDisputeListRequest",
          "fullName": "ixo.claims.v1beta1.QueryDisputeListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryDisputeListResponse",
          "longName": "QueryDisputeListResponse",
          "fullName": "ixo.claims.v1beta1.QueryDisputeListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "disputes",
              "description": "",
              "label": "repeated",
              "type": "Dispute",
              "longType": "Dispute",
              "fullType": "ixo.claims.v1beta1.Dispute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryDisputeRequest",
          "longName": "QueryDisputeRequest",
          "fullName": "ixo.claims.v1beta1.QueryDisputeRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "proof",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryDisputeResponse",
          "longName": "QueryDisputeResponse",
          "fullName": "ixo.claims.v1beta1.QueryDisputeResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "dispute",
              "description": "",
              "label": "",
              "type": "Dispute",
              "longType": "Dispute",
              "fullType": "ixo.claims.v1beta1.Dispute",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIntentListRequest",
          "longName": "QueryIntentListRequest",
          "fullName": "ixo.claims.v1beta1.QueryIntentListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIntentListResponse",
          "longName": "QueryIntentListResponse",
          "fullName": "ixo.claims.v1beta1.QueryIntentListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "intents",
              "description": "",
              "label": "repeated",
              "type": "Intent",
              "longType": "Intent",
              "fullType": "ixo.claims.v1beta1.Intent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIntentRequest",
          "longName": "QueryIntentRequest",
          "fullName": "ixo.claims.v1beta1.QueryIntentRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agentAddress",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collectionId",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIntentResponse",
          "longName": "QueryIntentResponse",
          "fullName": "ixo.claims.v1beta1.QueryIntentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "intent",
              "description": "",
              "label": "",
              "type": "Intent",
              "longType": "Intent",
              "fullType": "ixo.claims.v1beta1.Intent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.claims.v1beta1.QueryParamsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.claims.v1beta1.QueryParamsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params holds all the parameters of this module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.claims.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.claims.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "Params",
              "description": "Parameters queries the parameters of the module.",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "Collection",
              "description": "",
              "requestType": "QueryCollectionRequest",
              "requestLongType": "QueryCollectionRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryCollectionRequest",
              "requestStreaming": false,
              "responseType": "QueryCollectionResponse",
              "responseLongType": "QueryCollectionResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryCollectionResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/collection/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "CollectionList",
              "description": "",
              "requestType": "QueryCollectionListRequest",
              "requestLongType": "QueryCollectionListRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryCollectionListRequest",
              "requestStreaming": false,
              "responseType": "QueryCollectionListResponse",
              "responseLongType": "QueryCollectionListResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryCollectionListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/collections"
                    }
                  ]
                }
              }
            },
            {
              "name": "Claim",
              "description": "",
              "requestType": "QueryClaimRequest",
              "requestLongType": "QueryClaimRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryClaimRequest",
              "requestStreaming": false,
              "responseType": "QueryClaimResponse",
              "responseLongType": "QueryClaimResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryClaimResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/claim/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "ClaimList",
              "description": "",
              "requestType": "QueryClaimListRequest",
              "requestLongType": "QueryClaimListRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryClaimListRequest",
              "requestStreaming": false,
              "responseType": "QueryClaimListResponse",
              "responseLongType": "QueryClaimListResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryClaimListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/claims"
                    }
                  ]
                }
              }
            },
            {
              "name": "Dispute",
              "description": "",
              "requestType": "QueryDisputeRequest",
              "requestLongType": "QueryDisputeRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryDisputeRequest",
              "requestStreaming": false,
              "responseType": "QueryDisputeResponse",
              "responseLongType": "QueryDisputeResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryDisputeResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/dispute/{proof}"
                    }
                  ]
                }
              }
            },
            {
              "name": "DisputeList",
              "description": "",
              "requestType": "QueryDisputeListRequest",
              "requestLongType": "QueryDisputeListRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryDisputeListRequest",
              "requestStreaming": false,
              "responseType": "QueryDisputeListResponse",
              "responseLongType": "QueryDisputeListResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryDisputeListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/disputes"
                    }
                  ]
                }
              }
            },
            {
              "name": "Intent",
              "description": "",
              "requestType": "QueryIntentRequest",
              "requestLongType": "QueryIntentRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryIntentRequest",
              "requestStreaming": false,
              "responseType": "QueryIntentResponse",
              "responseLongType": "QueryIntentResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryIntentResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/intent/{agentAddress}/{collectionId}/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "IntentList",
              "description": "",
              "requestType": "QueryIntentListRequest",
              "requestLongType": "QueryIntentListRequest",
              "requestFullType": "ixo.claims.v1beta1.QueryIntentListRequest",
              "requestStreaming": false,
              "responseType": "QueryIntentListResponse",
              "responseLongType": "QueryIntentListResponse",
              "responseFullType": "ixo.claims.v1beta1.QueryIntentListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/claims/intents"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/claims/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.claims.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgClaimIntent",
          "longName": "MsgClaimIntent",
          "fullName": "ixo.claims.v1beta1.MsgClaimIntent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "agent_did",
              "description": "The service agent's DID (Decentralized Identifier).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "The service agent's address (who submits this message).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "The id of the collection this intent is linked to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "The desired claim amount, if any.\nNOTE: if both amount and cw20 amount are empty then default by Collection\nis used (APPROVAL payment).",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "The custom CW20 payment, if any.\nNOTE: if both amount and cw20 amount are empty then default by Collection\nis used (APPROVAL payment).",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgClaimIntentResponse",
          "longName": "MsgClaimIntentResponse",
          "fullName": "ixo.claims.v1beta1.MsgClaimIntentResponse",
          "description": "MsgClaimIntentResponse defines the response after submitting an intent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "intent_id",
              "description": "Resulting intent id.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expire_at",
              "description": "Timeout period for the intent. If the claim is not submitted by this time,\nthe intent expires.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateClaimAuthorization",
          "longName": "MsgCreateClaimAuthorization",
          "fullName": "ixo.claims.v1beta1.MsgCreateClaimAuthorization",
          "description": "MsgCreateClaimAuthorization defines a message for creating a claim\nauthorization on behalf of an entity admin account (SubmitClaimAuthorization\nor EvaluateClaimAuthorization)",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "creator_address",
              "description": "Address of the creator (user with meta-authorization)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "creator_did",
              "description": "agent is the DID of the agent submitting the claim",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee_address",
              "description": "Address of the grantee (who will receive the authorization)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "Collection ID the authorization applies to (for both submit and evaluate)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "auth_type",
              "description": "Type of authorization to create (submit or evaluate, can't create both in a\nsingle request)",
              "label": "",
              "type": "CreateClaimAuthorizationType",
              "longType": "CreateClaimAuthorizationType",
              "fullType": "ixo.claims.v1beta1.CreateClaimAuthorizationType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_quota",
              "description": "Quota for the created authorization (for both submit and evaluate)",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_amount",
              "description": "Maximum amount that can be specified in the authorization (for both submit\nand evaluate)",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_cw20_payment",
              "description": "Maximum CW20 payment that can be specified in the authorization (for both\nsubmit and evaluate)",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "expiration",
              "description": "Expiration time for the authorization, be careful with this as it is the\nexpiration of the authorization itself, not the constraints, meaning if the\nauthorization expires all constraints will be removed with the\nauthorization (standard authz behavior)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intent_duration_ns",
              "description": "Maximum intent duration for the authorization allowed (for submit)",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "before_date",
              "description": "if null then no before_date validation done (for evaluate)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateClaimAuthorizationResponse",
          "longName": "MsgCreateClaimAuthorizationResponse",
          "fullName": "ixo.claims.v1beta1.MsgCreateClaimAuthorizationResponse",
          "description": "MsgCreateClaimAuthorizationResponse defines the response for creating a claim\nauthorization",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgCreateCollection",
          "longName": "MsgCreateCollection",
          "fullName": "ixo.claims.v1beta1.MsgCreateCollection",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity",
              "description": "entity is the DID of the entity for which the claims are being created",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "signer address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "protocol",
              "description": "protocol is the DID of the claim protocol",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "startDate is the date after which claims may be submitted",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "endDate is the date after which no more claims may be submitted (no endDate\nis allowed)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "quota",
              "description": "quota is the maximum number of claims that may be submitted, 0 is unlimited",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "state is the current state of this Collection (open, paused, closed)",
              "label": "",
              "type": "CollectionState",
              "longType": "CollectionState",
              "fullType": "ixo.claims.v1beta1.CollectionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payments",
              "description": "payments is the amount paid for claim submission, evaluation, approval, or\nrejection",
              "label": "",
              "type": "Payments",
              "longType": "Payments",
              "fullType": "ixo.claims.v1beta1.Payments",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intents",
              "description": "intents is the option for intents for this collection (allow, deny,\nrequired)",
              "label": "",
              "type": "CollectionIntentOptions",
              "longType": "CollectionIntentOptions",
              "fullType": "ixo.claims.v1beta1.CollectionIntentOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateCollectionResponse",
          "longName": "MsgCreateCollectionResponse",
          "fullName": "ixo.claims.v1beta1.MsgCreateCollectionResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDisputeClaim",
          "longName": "MsgDisputeClaim",
          "fullName": "ixo.claims.v1beta1.MsgDisputeClaim",
          "description": "Agent laying dispute must be admin for Collection, or controller on\nCollection entity, or have authz cap, aka is agent",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "subject_id",
              "description": "subject_id for which this dispute is against, for now can only lay disputes\nagainst claims",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "agent is the DID of the agent disputing the claim, agent details won't be\nsaved in kvStore",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "dispute_type",
              "description": "type is expressed as an integer, interpreted by the client",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "DisputeData",
              "longType": "DisputeData",
              "fullType": "ixo.claims.v1beta1.DisputeData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDisputeClaimResponse",
          "longName": "MsgDisputeClaimResponse",
          "fullName": "ixo.claims.v1beta1.MsgDisputeClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgEvaluateClaim",
          "longName": "MsgEvaluateClaim",
          "fullName": "ixo.claims.v1beta1.MsgEvaluateClaim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim_id",
              "description": "claimID is the unique identifier of the claim to make evaluation against",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection this claim belongs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "oracle",
              "description": "oracle is the DID of the Oracle entity that evaluates the claim",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "agent is the DID of the agent that submits the evaluation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "status is the evaluation status expressed as an integer (2=approved,\n3=rejected, ...)",
              "label": "",
              "type": "EvaluationStatus",
              "longType": "EvaluationStatus",
              "fullType": "ixo.claims.v1beta1.EvaluationStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "reason is the code expressed as an integer, for why the evaluation result\nwas given (codes defined by evaluator)",
              "label": "",
              "type": "uint32",
              "longType": "uint32",
              "fullType": "uint32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verification_proof",
              "description": "verificationProof is the cid of the evaluation Verifiable Credential",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "custom amount specified by evaluator for claim approval\nNOTE: if claim is using intent, then amount and cw20 amount are ignored and\noverridden with intent amounts NOTE: if both amount and cw20 amount are\nempty then collection default is used",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "custom cw20 payments specified by evaluator for claim approval\nNOTE: if claim is using intent, then amount and cw20 amount are ignored and\noverridden with intent amounts NOTE: if both amount and cw20 amount are\nempty then collection default is used",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgEvaluateClaimResponse",
          "longName": "MsgEvaluateClaimResponse",
          "fullName": "ixo.claims.v1beta1.MsgEvaluateClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgSubmitClaim",
          "longName": "MsgSubmitClaim",
          "fullName": "ixo.claims.v1beta1.MsgSubmitClaim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates to which Collection this claim belongs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claim_id",
              "description": "claimID is the unique identifier of the claim in the cid hash format",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_did",
              "description": "agent is the DID of the agent submitting the claim",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "agent_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "use_intent",
              "description": "use_intent is the option for using intent for this claim if it exists and\nis active. NOTE: if use_intent is true then amount and cw20 amount are\nignored and overridden with intent amounts. NOTE: if use_intent is true and\nthere is no active intent then will error",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "custom amount specified by service agent for claim approval\nNOTE: if both amount and cw20_payment are empty then collection default is\nused",
              "label": "repeated",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "custom cw20 payments specified by service agent for claim approval\nNOTE: if both amount and cw20 amount are empty then collection default is\nused",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSubmitClaimResponse",
          "longName": "MsgSubmitClaimResponse",
          "fullName": "ixo.claims.v1beta1.MsgSubmitClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateCollectionDates",
          "longName": "MsgUpdateCollectionDates",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionDates",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates which Collection to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "startDate is the date after which claims may be submitted",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "endDate is the date after which no more claims may be submitted (no endDate\nis allowed)",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateCollectionDatesResponse",
          "longName": "MsgUpdateCollectionDatesResponse",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionDatesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateCollectionIntents",
          "longName": "MsgUpdateCollectionIntents",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionIntents",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates which Collection to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "intents",
              "description": "intents is the option for intents for this collection (allow, deny,\nrequired)",
              "label": "",
              "type": "CollectionIntentOptions",
              "longType": "CollectionIntentOptions",
              "fullType": "ixo.claims.v1beta1.CollectionIntentOptions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateCollectionIntentsResponse",
          "longName": "MsgUpdateCollectionIntentsResponse",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionIntentsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateCollectionPayments",
          "longName": "MsgUpdateCollectionPayments",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionPayments",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates which Collection to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payments",
              "description": "payments is the amount paid for claim submission, evaluation, approval, or\nrejection",
              "label": "",
              "type": "Payments",
              "longType": "Payments",
              "fullType": "ixo.claims.v1beta1.Payments",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateCollectionPaymentsResponse",
          "longName": "MsgUpdateCollectionPaymentsResponse",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionPaymentsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateCollectionState",
          "longName": "MsgUpdateCollectionState",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "collection_id",
              "description": "collection_id indicates which Collection to update",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "state is the state of this Collection (open, paused, closed) you want to\nupdate to",
              "label": "",
              "type": "CollectionState",
              "longType": "CollectionState",
              "fullType": "ixo.claims.v1beta1.CollectionState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateCollectionStateResponse",
          "longName": "MsgUpdateCollectionStateResponse",
          "fullName": "ixo.claims.v1beta1.MsgUpdateCollectionStateResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgWithdrawPayment",
          "longName": "MsgWithdrawPayment",
          "fullName": "ixo.claims.v1beta1.MsgWithdrawPayment",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "claim_id",
              "description": "claim_id the withdrawal is for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "inputs",
              "description": "Inputs to the multi send tx to run to withdraw payment",
              "label": "repeated",
              "type": "Input",
              "longType": "cosmos.bank.v1beta1.Input",
              "fullType": "cosmos.bank.v1beta1.Input",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "outputs",
              "description": "Outputs for the multi send tx to run to withdraw payment",
              "label": "repeated",
              "type": "Output",
              "longType": "cosmos.bank.v1beta1.Output",
              "fullType": "cosmos.bank.v1beta1.Output",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "payment_type",
              "description": "payment type to keep track what payment is for and mark claim payment\naccordingly",
              "label": "",
              "type": "PaymentType",
              "longType": "PaymentType",
              "fullType": "ixo.claims.v1beta1.PaymentType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_1155_payment",
              "description": "if empty(nil) then no contract payment",
              "label": "",
              "type": "Contract1155Payment",
              "longType": "Contract1155Payment",
              "fullType": "ixo.claims.v1beta1.Contract1155Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "toAddress",
              "description": "for contract payment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fromAddress",
              "description": "for contract payment",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "release_date",
              "description": "date that grantee can execute authorization, calculated from created date\nplus the timeout on Collection payments",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "admin_address",
              "description": "admin address used to sign this message, validated against Collection Admin",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cw20_payment",
              "description": "cw20 payments, can be empty or multiple",
              "label": "repeated",
              "type": "CW20Payment",
              "longType": "CW20Payment",
              "fullType": "ixo.claims.v1beta1.CW20Payment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgWithdrawPaymentResponse",
          "longName": "MsgWithdrawPaymentResponse",
          "fullName": "ixo.claims.v1beta1.MsgWithdrawPaymentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.claims.v1beta1.Msg",
          "description": "Msg defines the Msg service.",
          "methods": [
            {
              "name": "CreateCollection",
              "description": "",
              "requestType": "MsgCreateCollection",
              "requestLongType": "MsgCreateCollection",
              "requestFullType": "ixo.claims.v1beta1.MsgCreateCollection",
              "requestStreaming": false,
              "responseType": "MsgCreateCollectionResponse",
              "responseLongType": "MsgCreateCollectionResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgCreateCollectionResponse",
              "responseStreaming": false
            },
            {
              "name": "SubmitClaim",
              "description": "",
              "requestType": "MsgSubmitClaim",
              "requestLongType": "MsgSubmitClaim",
              "requestFullType": "ixo.claims.v1beta1.MsgSubmitClaim",
              "requestStreaming": false,
              "responseType": "MsgSubmitClaimResponse",
              "responseLongType": "MsgSubmitClaimResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgSubmitClaimResponse",
              "responseStreaming": false
            },
            {
              "name": "EvaluateClaim",
              "description": "",
              "requestType": "MsgEvaluateClaim",
              "requestLongType": "MsgEvaluateClaim",
              "requestFullType": "ixo.claims.v1beta1.MsgEvaluateClaim",
              "requestStreaming": false,
              "responseType": "MsgEvaluateClaimResponse",
              "responseLongType": "MsgEvaluateClaimResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgEvaluateClaimResponse",
              "responseStreaming": false
            },
            {
              "name": "DisputeClaim",
              "description": "",
              "requestType": "MsgDisputeClaim",
              "requestLongType": "MsgDisputeClaim",
              "requestFullType": "ixo.claims.v1beta1.MsgDisputeClaim",
              "requestStreaming": false,
              "responseType": "MsgDisputeClaimResponse",
              "responseLongType": "MsgDisputeClaimResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgDisputeClaimResponse",
              "responseStreaming": false
            },
            {
              "name": "WithdrawPayment",
              "description": "",
              "requestType": "MsgWithdrawPayment",
              "requestLongType": "MsgWithdrawPayment",
              "requestFullType": "ixo.claims.v1beta1.MsgWithdrawPayment",
              "requestStreaming": false,
              "responseType": "MsgWithdrawPaymentResponse",
              "responseLongType": "MsgWithdrawPaymentResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgWithdrawPaymentResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateCollectionState",
              "description": "",
              "requestType": "MsgUpdateCollectionState",
              "requestLongType": "MsgUpdateCollectionState",
              "requestFullType": "ixo.claims.v1beta1.MsgUpdateCollectionState",
              "requestStreaming": false,
              "responseType": "MsgUpdateCollectionStateResponse",
              "responseLongType": "MsgUpdateCollectionStateResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgUpdateCollectionStateResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateCollectionDates",
              "description": "",
              "requestType": "MsgUpdateCollectionDates",
              "requestLongType": "MsgUpdateCollectionDates",
              "requestFullType": "ixo.claims.v1beta1.MsgUpdateCollectionDates",
              "requestStreaming": false,
              "responseType": "MsgUpdateCollectionDatesResponse",
              "responseLongType": "MsgUpdateCollectionDatesResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgUpdateCollectionDatesResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateCollectionPayments",
              "description": "",
              "requestType": "MsgUpdateCollectionPayments",
              "requestLongType": "MsgUpdateCollectionPayments",
              "requestFullType": "ixo.claims.v1beta1.MsgUpdateCollectionPayments",
              "requestStreaming": false,
              "responseType": "MsgUpdateCollectionPaymentsResponse",
              "responseLongType": "MsgUpdateCollectionPaymentsResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgUpdateCollectionPaymentsResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateCollectionIntents",
              "description": "",
              "requestType": "MsgUpdateCollectionIntents",
              "requestLongType": "MsgUpdateCollectionIntents",
              "requestFullType": "ixo.claims.v1beta1.MsgUpdateCollectionIntents",
              "requestStreaming": false,
              "responseType": "MsgUpdateCollectionIntentsResponse",
              "responseLongType": "MsgUpdateCollectionIntentsResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgUpdateCollectionIntentsResponse",
              "responseStreaming": false
            },
            {
              "name": "ClaimIntent",
              "description": "",
              "requestType": "MsgClaimIntent",
              "requestLongType": "MsgClaimIntent",
              "requestFullType": "ixo.claims.v1beta1.MsgClaimIntent",
              "requestStreaming": false,
              "responseType": "MsgClaimIntentResponse",
              "responseLongType": "MsgClaimIntentResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgClaimIntentResponse",
              "responseStreaming": false
            },
            {
              "name": "CreateClaimAuthorization",
              "description": "",
              "requestType": "MsgCreateClaimAuthorization",
              "requestLongType": "MsgCreateClaimAuthorization",
              "requestFullType": "ixo.claims.v1beta1.MsgCreateClaimAuthorization",
              "requestStreaming": false,
              "responseType": "MsgCreateClaimAuthorizationResponse",
              "responseLongType": "MsgCreateClaimAuthorizationResponse",
              "responseFullType": "ixo.claims.v1beta1.MsgCreateClaimAuthorizationResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/iid/v1beta1/types.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AccordedRight",
          "longName": "AccordedRight",
          "fullName": "ixo.iid.v1beta1.AccordedRight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mechanism",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Context",
          "longName": "Context",
          "fullName": "ixo.iid.v1beta1.Context",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "val",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IidMetadata",
          "longName": "IidMetadata",
          "fullName": "ixo.iid.v1beta1.IidMetadata",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "versionId",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "deactivated",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LinkedClaim",
          "longName": "LinkedClaim",
          "fullName": "ixo.iid.v1beta1.LinkedClaim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "serviceEndpoint",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "encrypted",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "right",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LinkedEntity",
          "longName": "LinkedEntity",
          "fullName": "ixo.iid.v1beta1.LinkedEntity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relationship",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LinkedResource",
          "longName": "LinkedResource",
          "fullName": "ixo.iid.v1beta1.LinkedResource",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mediaType",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "serviceEndpoint",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "encrypted",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "right",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Service",
          "longName": "Service",
          "fullName": "ixo.iid.v1beta1.Service",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "serviceEndpoint",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VerificationMethod",
          "longName": "VerificationMethod",
          "fullName": "ixo.iid.v1beta1.VerificationMethod",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "blockchainAccountID",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "verificationMaterial",
              "defaultValue": ""
            },
            {
              "name": "publicKeyHex",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "verificationMaterial",
              "defaultValue": ""
            },
            {
              "name": "publicKeyMultibase",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "verificationMaterial",
              "defaultValue": ""
            },
            {
              "name": "publicKeyBase58",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "verificationMaterial",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/iid/v1beta1/iid.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "IidDocument",
          "longName": "IidDocument",
          "fullName": "ixo.iid.v1beta1.IidDocument",
          "description": "type entity account\nrelationship entity account",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "context",
              "description": "@context is spec for did document.",
              "label": "repeated",
              "type": "Context",
              "longType": "Context",
              "fullType": "ixo.iid.v1beta1.Context",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "id represents the id for the did document.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller",
              "description": "A DID controller is an entity that is authorized to make changes to a DID\ndocument. cfr. https://www.w3.org/TR/did-core/#did-controller",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verificationMethod",
              "description": "A DID document can express verification methods,\nsuch as cryptographic public keys, which can be used\nto authenticate or authorize interactions with the DID subject or\nassociated parties. https://www.w3.org/TR/did-core/#verification-methods",
              "label": "repeated",
              "type": "VerificationMethod",
              "longType": "VerificationMethod",
              "fullType": "ixo.iid.v1beta1.VerificationMethod",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "Services are used in DID documents to express ways of communicating\nwith the DID subject or associated entities.\nhttps://www.w3.org/TR/did-core/#services",
              "label": "repeated",
              "type": "Service",
              "longType": "Service",
              "fullType": "ixo.iid.v1beta1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authentication",
              "description": "NOTE: below this line there are the relationships\nAuthentication represents public key associated with the did document.\ncfr. https://www.w3.org/TR/did-core/#authentication",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "assertionMethod",
              "description": "Used to specify how the DID subject is expected to express claims,\nsuch as for the purposes of issuing a Verifiable Credential.\ncfr. https://www.w3.org/TR/did-core/#assertion",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "keyAgreement",
              "description": "used to specify how an entity can generate encryption material\nin order to transmit confidential information intended for the DID subject.\nhttps://www.w3.org/TR/did-core/#key-agreement",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "capabilityInvocation",
              "description": "Used to specify a verification method that might be used by the DID subject\nto invoke a cryptographic capability, such as the authorization\nto update the DID Document.\nhttps://www.w3.org/TR/did-core/#capability-invocation",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "capabilityDelegation",
              "description": "Used to specify a mechanism that might be used by the DID subject\nto delegate a cryptographic capability to another party.\nhttps://www.w3.org/TR/did-core/#capability-delegation",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedResource",
              "description": "",
              "label": "repeated",
              "type": "LinkedResource",
              "longType": "LinkedResource",
              "fullType": "ixo.iid.v1beta1.LinkedResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedClaim",
              "description": "",
              "label": "repeated",
              "type": "LinkedClaim",
              "longType": "LinkedClaim",
              "fullType": "ixo.iid.v1beta1.LinkedClaim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accordedRight",
              "description": "",
              "label": "repeated",
              "type": "AccordedRight",
              "longType": "AccordedRight",
              "fullType": "ixo.iid.v1beta1.AccordedRight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedEntity",
              "description": "",
              "label": "repeated",
              "type": "LinkedEntity",
              "longType": "LinkedEntity",
              "fullType": "ixo.iid.v1beta1.LinkedEntity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alsoKnownAs",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata concerning the IidDocument such as versionId, created, updated and\ndeactivated",
              "label": "",
              "type": "IidMetadata",
              "longType": "IidMetadata",
              "fullType": "ixo.iid.v1beta1.IidMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/entity/v1beta1/entity.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Entity",
          "longName": "Entity",
          "fullName": "ixo.entity.v1beta1.Entity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "id represents the id for the entity document.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type of entity, eg protocol or asset",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "Start Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "End Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relayer_node",
              "description": "Did of the operator through which the Entity was created",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credentials",
              "description": "Credentials of the entity to be verified",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_verified",
              "description": "Used as check whether the credentials of entity is verified",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "metadata",
              "description": "Metadata concerning the Entity such as versionId, created, updated and\ndeactivated",
              "label": "",
              "type": "EntityMetadata",
              "longType": "EntityMetadata",
              "fullType": "ixo.entity.v1beta1.EntityMetadata",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accounts",
              "description": "module accounts created for entity",
              "label": "repeated",
              "type": "EntityAccount",
              "longType": "EntityAccount",
              "fullType": "ixo.entity.v1beta1.EntityAccount",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityAccount",
          "longName": "EntityAccount",
          "fullName": "ixo.entity.v1beta1.EntityAccount",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityMetadata",
          "longName": "EntityMetadata",
          "fullName": "ixo.entity.v1beta1.EntityMetadata",
          "description": "EntityMetadata defines metadata associated to a entity",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "version_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "updated",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.entity.v1beta1.Params",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "nftContractAddress",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "nftContractMinter",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "createSequence",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/entity/v1beta1/event.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "EntityAccountAuthzCreatedEvent",
          "longName": "EntityAccountAuthzCreatedEvent",
          "fullName": "ixo.entity.v1beta1.EntityAccountAuthzCreatedEvent",
          "description": "EntityAccountCreatedEvent is an event triggered on a entity account authz\ncreation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "granter",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grant",
              "description": "",
              "label": "",
              "type": "Grant",
              "longType": "cosmos.authz.v1beta1.Grant",
              "fullType": "cosmos.authz.v1beta1.Grant",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityAccountAuthzRevokedEvent",
          "longName": "EntityAccountAuthzRevokedEvent",
          "fullName": "ixo.entity.v1beta1.EntityAccountAuthzRevokedEvent",
          "description": "EntityAccountAuthzRevokedEvent is an event triggered on a entity account\nauthz revocation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "granter",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "msg_type_url",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityAccountCreatedEvent",
          "longName": "EntityAccountCreatedEvent",
          "fullName": "ixo.entity.v1beta1.EntityAccountCreatedEvent",
          "description": "EntityAccountCreatedEvent is an event triggered on a entity account creation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "account_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityCreatedEvent",
          "longName": "EntityCreatedEvent",
          "fullName": "ixo.entity.v1beta1.EntityCreatedEvent",
          "description": "EntityCreatedEvent is an event triggered on a Entity creation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity",
              "description": "",
              "label": "",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityTransferredEvent",
          "longName": "EntityTransferredEvent",
          "fullName": "ixo.entity.v1beta1.EntityTransferredEvent",
          "description": "EntityTransferredEvent is an event triggered on a entity transfer",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "from",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "to",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityUpdatedEvent",
          "longName": "EntityUpdatedEvent",
          "fullName": "ixo.entity.v1beta1.EntityUpdatedEvent",
          "description": "EntityUpdatedEvent is an event triggered on a entity document update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity",
              "description": "",
              "label": "",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntityVerifiedUpdatedEvent",
          "longName": "EntityVerifiedUpdatedEvent",
          "fullName": "ixo.entity.v1beta1.EntityVerifiedUpdatedEvent",
          "description": "EntityVerifiedUpdatedEvent is an event triggered on a entity verified\ndocument update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_verified",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/entity/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.entity.v1beta1.GenesisState",
          "description": "GenesisState defines the project module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entities",
              "description": "",
              "label": "repeated",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.entity.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/entity/v1beta1/proposal.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "InitializeNftContract",
          "longName": "InitializeNftContract",
          "fullName": "ixo.entity.v1beta1.InitializeNftContract",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "NftContractCodeId",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "NftMinterAddress",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/entity/v1beta1/query.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryEntityIidDocumentRequest",
          "longName": "QueryEntityIidDocumentRequest",
          "fullName": "ixo.entity.v1beta1.QueryEntityIidDocumentRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityIidDocumentResponse",
          "longName": "QueryEntityIidDocumentResponse",
          "fullName": "ixo.entity.v1beta1.QueryEntityIidDocumentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iidDocument",
              "description": "",
              "label": "",
              "type": "IidDocument",
              "longType": "ixo.iid.v1beta1.IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityListRequest",
          "longName": "QueryEntityListRequest",
          "fullName": "ixo.entity.v1beta1.QueryEntityListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "string type = 2;\nstring status = 3;",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityListResponse",
          "longName": "QueryEntityListResponse",
          "fullName": "ixo.entity.v1beta1.QueryEntityListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entities",
              "description": "",
              "label": "repeated",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityMetadataRequest",
          "longName": "QueryEntityMetadataRequest",
          "fullName": "ixo.entity.v1beta1.QueryEntityMetadataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityMetadataResponse",
          "longName": "QueryEntityMetadataResponse",
          "fullName": "ixo.entity.v1beta1.QueryEntityMetadataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity",
              "description": "",
              "label": "",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityRequest",
          "longName": "QueryEntityRequest",
          "fullName": "ixo.entity.v1beta1.QueryEntityRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityResponse",
          "longName": "QueryEntityResponse",
          "fullName": "ixo.entity.v1beta1.QueryEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity",
              "description": "",
              "label": "",
              "type": "Entity",
              "longType": "Entity",
              "fullType": "ixo.entity.v1beta1.Entity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "iidDocument",
              "description": "",
              "label": "",
              "type": "IidDocument",
              "longType": "ixo.iid.v1beta1.IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityVerifiedRequest",
          "longName": "QueryEntityVerifiedRequest",
          "fullName": "ixo.entity.v1beta1.QueryEntityVerifiedRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEntityVerifiedResponse",
          "longName": "QueryEntityVerifiedResponse",
          "fullName": "ixo.entity.v1beta1.QueryEntityVerifiedResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_verified",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.entity.v1beta1.QueryParamsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.entity.v1beta1.QueryParamsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params holds all the parameters of this module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.entity.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.entity.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "Params",
              "description": "",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "Entity",
              "description": "",
              "requestType": "QueryEntityRequest",
              "requestLongType": "QueryEntityRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryEntityRequest",
              "requestStreaming": false,
              "responseType": "QueryEntityResponse",
              "responseLongType": "QueryEntityResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryEntityResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "EntityMetaData",
              "description": "",
              "requestType": "QueryEntityMetadataRequest",
              "requestLongType": "QueryEntityMetadataRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryEntityMetadataRequest",
              "requestStreaming": false,
              "responseType": "QueryEntityMetadataResponse",
              "responseLongType": "QueryEntityMetadataResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryEntityMetadataResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity/{id}/metadata"
                    }
                  ]
                }
              }
            },
            {
              "name": "EntityIidDocument",
              "description": "",
              "requestType": "QueryEntityIidDocumentRequest",
              "requestLongType": "QueryEntityIidDocumentRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryEntityIidDocumentRequest",
              "requestStreaming": false,
              "responseType": "QueryEntityIidDocumentResponse",
              "responseLongType": "QueryEntityIidDocumentResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryEntityIidDocumentResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity/{id}/iiddocument"
                    }
                  ]
                }
              }
            },
            {
              "name": "EntityVerified",
              "description": "",
              "requestType": "QueryEntityVerifiedRequest",
              "requestLongType": "QueryEntityVerifiedRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryEntityVerifiedRequest",
              "requestStreaming": false,
              "responseType": "QueryEntityVerifiedResponse",
              "responseLongType": "QueryEntityVerifiedResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryEntityVerifiedResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity/{id}/verified"
                    }
                  ]
                }
              }
            },
            {
              "name": "EntityList",
              "description": "",
              "requestType": "QueryEntityListRequest",
              "requestLongType": "QueryEntityListRequest",
              "requestFullType": "ixo.entity.v1beta1.QueryEntityListRequest",
              "requestStreaming": false,
              "responseType": "QueryEntityListResponse",
              "responseLongType": "QueryEntityListResponse",
              "responseFullType": "ixo.entity.v1beta1.QueryEntityListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/entity"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/iid/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgAddAccordedRight",
          "longName": "MsgAddAccordedRight",
          "fullName": "ixo.iid.v1beta1.MsgAddAccordedRight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accordedRight",
              "description": "the Accorded right to add",
              "label": "",
              "type": "AccordedRight",
              "longType": "AccordedRight",
              "fullType": "ixo.iid.v1beta1.AccordedRight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddAccordedRightResponse",
          "longName": "MsgAddAccordedRightResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddAccordedRightResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddController",
          "longName": "MsgAddController",
          "fullName": "ixo.iid.v1beta1.MsgAddController",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did of the document",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_did",
              "description": "the did to add as a controller of the did document",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddControllerResponse",
          "longName": "MsgAddControllerResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddControllerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddIidContext",
          "longName": "MsgAddIidContext",
          "fullName": "ixo.iid.v1beta1.MsgAddIidContext",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "context",
              "description": "the context to add",
              "label": "",
              "type": "Context",
              "longType": "Context",
              "fullType": "ixo.iid.v1beta1.Context",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddIidContextResponse",
          "longName": "MsgAddIidContextResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddIidContextResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddLinkedClaim",
          "longName": "MsgAddLinkedClaim",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedClaim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedClaim",
              "description": "the claim to add",
              "label": "",
              "type": "LinkedClaim",
              "longType": "LinkedClaim",
              "fullType": "ixo.iid.v1beta1.LinkedClaim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddLinkedClaimResponse",
          "longName": "MsgAddLinkedClaimResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddLinkedEntity",
          "longName": "MsgAddLinkedEntity",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedEntity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the iid",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedEntity",
              "description": "the entity to add",
              "label": "",
              "type": "LinkedEntity",
              "longType": "LinkedEntity",
              "fullType": "ixo.iid.v1beta1.LinkedEntity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddLinkedEntityResponse",
          "longName": "MsgAddLinkedEntityResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddLinkedResource",
          "longName": "MsgAddLinkedResource",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedResource",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedResource",
              "description": "the verification to add",
              "label": "",
              "type": "LinkedResource",
              "longType": "LinkedResource",
              "fullType": "ixo.iid.v1beta1.LinkedResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddLinkedResourceResponse",
          "longName": "MsgAddLinkedResourceResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddLinkedResourceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddService",
          "longName": "MsgAddService",
          "fullName": "ixo.iid.v1beta1.MsgAddService",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service_data",
              "description": "the service data to add",
              "label": "",
              "type": "Service",
              "longType": "Service",
              "fullType": "ixo.iid.v1beta1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddServiceResponse",
          "longName": "MsgAddServiceResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddServiceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgAddVerification",
          "longName": "MsgAddVerification",
          "fullName": "ixo.iid.v1beta1.MsgAddVerification",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verification",
              "description": "the verification to add",
              "label": "",
              "type": "Verification",
              "longType": "Verification",
              "fullType": "ixo.iid.v1beta1.Verification",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddVerificationResponse",
          "longName": "MsgAddVerificationResponse",
          "fullName": "ixo.iid.v1beta1.MsgAddVerificationResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgCreateIidDocument",
          "longName": "MsgCreateIidDocument",
          "fullName": "ixo.iid.v1beta1.MsgCreateIidDocument",
          "description": "MsgCreateDidDocument defines a SDK message for creating a new did.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controllers",
              "description": "the list of controller DIDs",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "context",
              "description": "",
              "label": "repeated",
              "type": "Context",
              "longType": "Context",
              "fullType": "ixo.iid.v1beta1.Context",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verifications",
              "description": "the list of verification methods and relationships",
              "label": "repeated",
              "type": "Verification",
              "longType": "Verification",
              "fullType": "ixo.iid.v1beta1.Verification",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "services",
              "description": "",
              "label": "repeated",
              "type": "Service",
              "longType": "Service",
              "fullType": "ixo.iid.v1beta1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accordedRight",
              "description": "",
              "label": "repeated",
              "type": "AccordedRight",
              "longType": "AccordedRight",
              "fullType": "ixo.iid.v1beta1.AccordedRight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedResource",
              "description": "",
              "label": "repeated",
              "type": "LinkedResource",
              "longType": "LinkedResource",
              "fullType": "ixo.iid.v1beta1.LinkedResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedEntity",
              "description": "",
              "label": "repeated",
              "type": "LinkedEntity",
              "longType": "LinkedEntity",
              "fullType": "ixo.iid.v1beta1.LinkedEntity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alsoKnownAs",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedClaim",
              "description": "",
              "label": "repeated",
              "type": "LinkedClaim",
              "longType": "LinkedClaim",
              "fullType": "ixo.iid.v1beta1.LinkedClaim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateIidDocumentResponse",
          "longName": "MsgCreateIidDocumentResponse",
          "fullName": "ixo.iid.v1beta1.MsgCreateIidDocumentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeactivateIID",
          "longName": "MsgDeactivateIID",
          "fullName": "ixo.iid.v1beta1.MsgDeactivateIID",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "state",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeactivateIIDResponse",
          "longName": "MsgDeactivateIIDResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeactivateIIDResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteAccordedRight",
          "longName": "MsgDeleteAccordedRight",
          "fullName": "ixo.iid.v1beta1.MsgDeleteAccordedRight",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "right_id",
              "description": "the Accorded right id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteAccordedRightResponse",
          "longName": "MsgDeleteAccordedRightResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteAccordedRightResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteController",
          "longName": "MsgDeleteController",
          "fullName": "ixo.iid.v1beta1.MsgDeleteController",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did of the document",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_did",
              "description": "the did to remove from the list of controllers of the did document",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteControllerResponse",
          "longName": "MsgDeleteControllerResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteControllerResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteIidContext",
          "longName": "MsgDeleteIidContext",
          "fullName": "ixo.iid.v1beta1.MsgDeleteIidContext",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contextKey",
              "description": "the context key",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteIidContextResponse",
          "longName": "MsgDeleteIidContextResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteIidContextResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteLinkedClaim",
          "longName": "MsgDeleteLinkedClaim",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedClaim",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "claim_id",
              "description": "the claim id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteLinkedClaimResponse",
          "longName": "MsgDeleteLinkedClaimResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedClaimResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteLinkedEntity",
          "longName": "MsgDeleteLinkedEntity",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedEntity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the iid",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_id",
              "description": "the entity id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteLinkedEntityResponse",
          "longName": "MsgDeleteLinkedEntityResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteLinkedResource",
          "longName": "MsgDeleteLinkedResource",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedResource",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "resource_id",
              "description": "the service id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteLinkedResourceResponse",
          "longName": "MsgDeleteLinkedResourceResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteLinkedResourceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgDeleteService",
          "longName": "MsgDeleteService",
          "fullName": "ixo.iid.v1beta1.MsgDeleteService",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service_id",
              "description": "the service id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgDeleteServiceResponse",
          "longName": "MsgDeleteServiceResponse",
          "fullName": "ixo.iid.v1beta1.MsgDeleteServiceResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgRevokeVerification",
          "longName": "MsgRevokeVerification",
          "fullName": "ixo.iid.v1beta1.MsgRevokeVerification",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method_id",
              "description": "the verification method id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgRevokeVerificationResponse",
          "longName": "MsgRevokeVerificationResponse",
          "fullName": "ixo.iid.v1beta1.MsgRevokeVerificationResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgSetVerificationRelationships",
          "longName": "MsgSetVerificationRelationships",
          "fullName": "ixo.iid.v1beta1.MsgSetVerificationRelationships",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method_id",
              "description": "the verification method id",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relationships",
              "description": "the list of relationships to set",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetVerificationRelationshipsResponse",
          "longName": "MsgSetVerificationRelationshipsResponse",
          "fullName": "ixo.iid.v1beta1.MsgSetVerificationRelationshipsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateIidDocument",
          "longName": "MsgUpdateIidDocument",
          "fullName": "ixo.iid.v1beta1.MsgUpdateIidDocument",
          "description": "Updates the entity with all the fields, so if field empty will be updated\nwith default go type, aka never null",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "the did",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controllers",
              "description": "the list of controller DIDs",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "context",
              "description": "",
              "label": "repeated",
              "type": "Context",
              "longType": "Context",
              "fullType": "ixo.iid.v1beta1.Context",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verifications",
              "description": "the list of verification methods and relationships",
              "label": "repeated",
              "type": "Verification",
              "longType": "Verification",
              "fullType": "ixo.iid.v1beta1.Verification",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "services",
              "description": "",
              "label": "repeated",
              "type": "Service",
              "longType": "Service",
              "fullType": "ixo.iid.v1beta1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accordedRight",
              "description": "",
              "label": "repeated",
              "type": "AccordedRight",
              "longType": "AccordedRight",
              "fullType": "ixo.iid.v1beta1.AccordedRight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedResource",
              "description": "",
              "label": "repeated",
              "type": "LinkedResource",
              "longType": "LinkedResource",
              "fullType": "ixo.iid.v1beta1.LinkedResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedEntity",
              "description": "",
              "label": "repeated",
              "type": "LinkedEntity",
              "longType": "LinkedEntity",
              "fullType": "ixo.iid.v1beta1.LinkedEntity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alsoKnownAs",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "signer",
              "description": "address of the account signing the message",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedClaim",
              "description": "",
              "label": "repeated",
              "type": "LinkedClaim",
              "longType": "LinkedClaim",
              "fullType": "ixo.iid.v1beta1.LinkedClaim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateIidDocumentResponse",
          "longName": "MsgUpdateIidDocumentResponse",
          "fullName": "ixo.iid.v1beta1.MsgUpdateIidDocumentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "Verification",
          "longName": "Verification",
          "fullName": "ixo.iid.v1beta1.Verification",
          "description": "Verification is a message that allows to assign a verification method\nto one or more verification relationships",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "relationships",
              "description": "verificationRelationships defines which relationships\nare allowed to use the verification method\n\nrelationships that the method is allowed into.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "method",
              "description": "public key associated with the did document.",
              "label": "",
              "type": "VerificationMethod",
              "longType": "VerificationMethod",
              "fullType": "ixo.iid.v1beta1.VerificationMethod",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "context",
              "description": "additional contexts (json ld schemas)",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.iid.v1beta1.Msg",
          "description": "Msg defines the identity Msg service.",
          "methods": [
            {
              "name": "CreateIidDocument",
              "description": "CreateDidDocument defines a method for creating a new identity.",
              "requestType": "MsgCreateIidDocument",
              "requestLongType": "MsgCreateIidDocument",
              "requestFullType": "ixo.iid.v1beta1.MsgCreateIidDocument",
              "requestStreaming": false,
              "responseType": "MsgCreateIidDocumentResponse",
              "responseLongType": "MsgCreateIidDocumentResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgCreateIidDocumentResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateIidDocument",
              "description": "UpdateDidDocument defines a method for updating an identity.",
              "requestType": "MsgUpdateIidDocument",
              "requestLongType": "MsgUpdateIidDocument",
              "requestFullType": "ixo.iid.v1beta1.MsgUpdateIidDocument",
              "requestStreaming": false,
              "responseType": "MsgUpdateIidDocumentResponse",
              "responseLongType": "MsgUpdateIidDocumentResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgUpdateIidDocumentResponse",
              "responseStreaming": false
            },
            {
              "name": "AddVerification",
              "description": "AddVerificationMethod adds a new verification method",
              "requestType": "MsgAddVerification",
              "requestLongType": "MsgAddVerification",
              "requestFullType": "ixo.iid.v1beta1.MsgAddVerification",
              "requestStreaming": false,
              "responseType": "MsgAddVerificationResponse",
              "responseLongType": "MsgAddVerificationResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddVerificationResponse",
              "responseStreaming": false
            },
            {
              "name": "RevokeVerification",
              "description": "RevokeVerification remove the verification method and all associated\nverification Relations",
              "requestType": "MsgRevokeVerification",
              "requestLongType": "MsgRevokeVerification",
              "requestFullType": "ixo.iid.v1beta1.MsgRevokeVerification",
              "requestStreaming": false,
              "responseType": "MsgRevokeVerificationResponse",
              "responseLongType": "MsgRevokeVerificationResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgRevokeVerificationResponse",
              "responseStreaming": false
            },
            {
              "name": "SetVerificationRelationships",
              "description": "SetVerificationRelationships overwrite current verification relationships",
              "requestType": "MsgSetVerificationRelationships",
              "requestLongType": "MsgSetVerificationRelationships",
              "requestFullType": "ixo.iid.v1beta1.MsgSetVerificationRelationships",
              "requestStreaming": false,
              "responseType": "MsgSetVerificationRelationshipsResponse",
              "responseLongType": "MsgSetVerificationRelationshipsResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgSetVerificationRelationshipsResponse",
              "responseStreaming": false
            },
            {
              "name": "AddService",
              "description": "AddService add a new service",
              "requestType": "MsgAddService",
              "requestLongType": "MsgAddService",
              "requestFullType": "ixo.iid.v1beta1.MsgAddService",
              "requestStreaming": false,
              "responseType": "MsgAddServiceResponse",
              "responseLongType": "MsgAddServiceResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddServiceResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteService",
              "description": "DeleteService delete an existing service",
              "requestType": "MsgDeleteService",
              "requestLongType": "MsgDeleteService",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteService",
              "requestStreaming": false,
              "responseType": "MsgDeleteServiceResponse",
              "responseLongType": "MsgDeleteServiceResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteServiceResponse",
              "responseStreaming": false
            },
            {
              "name": "AddController",
              "description": "AddService add a new service",
              "requestType": "MsgAddController",
              "requestLongType": "MsgAddController",
              "requestFullType": "ixo.iid.v1beta1.MsgAddController",
              "requestStreaming": false,
              "responseType": "MsgAddControllerResponse",
              "responseLongType": "MsgAddControllerResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddControllerResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteController",
              "description": "DeleteService delete an existing service",
              "requestType": "MsgDeleteController",
              "requestLongType": "MsgDeleteController",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteController",
              "requestStreaming": false,
              "responseType": "MsgDeleteControllerResponse",
              "responseLongType": "MsgDeleteControllerResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteControllerResponse",
              "responseStreaming": false
            },
            {
              "name": "AddLinkedResource",
              "description": "Add / Delete Linked Resource",
              "requestType": "MsgAddLinkedResource",
              "requestLongType": "MsgAddLinkedResource",
              "requestFullType": "ixo.iid.v1beta1.MsgAddLinkedResource",
              "requestStreaming": false,
              "responseType": "MsgAddLinkedResourceResponse",
              "responseLongType": "MsgAddLinkedResourceResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddLinkedResourceResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteLinkedResource",
              "description": "",
              "requestType": "MsgDeleteLinkedResource",
              "requestLongType": "MsgDeleteLinkedResource",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteLinkedResource",
              "requestStreaming": false,
              "responseType": "MsgDeleteLinkedResourceResponse",
              "responseLongType": "MsgDeleteLinkedResourceResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteLinkedResourceResponse",
              "responseStreaming": false
            },
            {
              "name": "AddLinkedClaim",
              "description": "Add / Delete Linked Claims",
              "requestType": "MsgAddLinkedClaim",
              "requestLongType": "MsgAddLinkedClaim",
              "requestFullType": "ixo.iid.v1beta1.MsgAddLinkedClaim",
              "requestStreaming": false,
              "responseType": "MsgAddLinkedClaimResponse",
              "responseLongType": "MsgAddLinkedClaimResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddLinkedClaimResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteLinkedClaim",
              "description": "",
              "requestType": "MsgDeleteLinkedClaim",
              "requestLongType": "MsgDeleteLinkedClaim",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteLinkedClaim",
              "requestStreaming": false,
              "responseType": "MsgDeleteLinkedClaimResponse",
              "responseLongType": "MsgDeleteLinkedClaimResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteLinkedClaimResponse",
              "responseStreaming": false
            },
            {
              "name": "AddLinkedEntity",
              "description": "Add / Delete Linked Entity",
              "requestType": "MsgAddLinkedEntity",
              "requestLongType": "MsgAddLinkedEntity",
              "requestFullType": "ixo.iid.v1beta1.MsgAddLinkedEntity",
              "requestStreaming": false,
              "responseType": "MsgAddLinkedEntityResponse",
              "responseLongType": "MsgAddLinkedEntityResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddLinkedEntityResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteLinkedEntity",
              "description": "",
              "requestType": "MsgDeleteLinkedEntity",
              "requestLongType": "MsgDeleteLinkedEntity",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteLinkedEntity",
              "requestStreaming": false,
              "responseType": "MsgDeleteLinkedEntityResponse",
              "responseLongType": "MsgDeleteLinkedEntityResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteLinkedEntityResponse",
              "responseStreaming": false
            },
            {
              "name": "AddAccordedRight",
              "description": "Add / Delete Accorded Right",
              "requestType": "MsgAddAccordedRight",
              "requestLongType": "MsgAddAccordedRight",
              "requestFullType": "ixo.iid.v1beta1.MsgAddAccordedRight",
              "requestStreaming": false,
              "responseType": "MsgAddAccordedRightResponse",
              "responseLongType": "MsgAddAccordedRightResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddAccordedRightResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteAccordedRight",
              "description": "",
              "requestType": "MsgDeleteAccordedRight",
              "requestLongType": "MsgDeleteAccordedRight",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteAccordedRight",
              "requestStreaming": false,
              "responseType": "MsgDeleteAccordedRightResponse",
              "responseLongType": "MsgDeleteAccordedRightResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteAccordedRightResponse",
              "responseStreaming": false
            },
            {
              "name": "AddIidContext",
              "description": "Add / Delete Context",
              "requestType": "MsgAddIidContext",
              "requestLongType": "MsgAddIidContext",
              "requestFullType": "ixo.iid.v1beta1.MsgAddIidContext",
              "requestStreaming": false,
              "responseType": "MsgAddIidContextResponse",
              "responseLongType": "MsgAddIidContextResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgAddIidContextResponse",
              "responseStreaming": false
            },
            {
              "name": "DeactivateIID",
              "description": "",
              "requestType": "MsgDeactivateIID",
              "requestLongType": "MsgDeactivateIID",
              "requestFullType": "ixo.iid.v1beta1.MsgDeactivateIID",
              "requestStreaming": false,
              "responseType": "MsgDeactivateIIDResponse",
              "responseLongType": "MsgDeactivateIIDResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeactivateIIDResponse",
              "responseStreaming": false
            },
            {
              "name": "DeleteIidContext",
              "description": "",
              "requestType": "MsgDeleteIidContext",
              "requestLongType": "MsgDeleteIidContext",
              "requestFullType": "ixo.iid.v1beta1.MsgDeleteIidContext",
              "requestStreaming": false,
              "responseType": "MsgDeleteIidContextResponse",
              "responseLongType": "MsgDeleteIidContextResponse",
              "responseFullType": "ixo.iid.v1beta1.MsgDeleteIidContextResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/entity/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.entity.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgCreateEntity",
          "longName": "MsgCreateEntity",
          "fullName": "ixo.entity.v1beta1.MsgCreateEntity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_type",
              "description": "An Entity Type as defined by the implementer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_status",
              "description": "Status of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller",
              "description": "the list of controller DIDs",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "context",
              "description": "JSON-LD contexts",
              "label": "repeated",
              "type": "Context",
              "longType": "ixo.iid.v1beta1.Context",
              "fullType": "ixo.iid.v1beta1.Context",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "verification",
              "description": "Verification Methods and Verification Relationships",
              "label": "repeated",
              "type": "Verification",
              "longType": "ixo.iid.v1beta1.Verification",
              "fullType": "ixo.iid.v1beta1.Verification",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "service",
              "description": "Service endpoints",
              "label": "repeated",
              "type": "Service",
              "longType": "ixo.iid.v1beta1.Service",
              "fullType": "ixo.iid.v1beta1.Service",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "accorded_right",
              "description": "Legal or Electronic Rights and associated Object Capabilities",
              "label": "repeated",
              "type": "AccordedRight",
              "longType": "ixo.iid.v1beta1.AccordedRight",
              "fullType": "ixo.iid.v1beta1.AccordedRight",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linked_resource",
              "description": "Digital resources associated with the Subject",
              "label": "repeated",
              "type": "LinkedResource",
              "longType": "ixo.iid.v1beta1.LinkedResource",
              "fullType": "ixo.iid.v1beta1.LinkedResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linked_entity",
              "description": "DID of a linked Entity and its relationship with the Subject",
              "label": "repeated",
              "type": "LinkedEntity",
              "longType": "ixo.iid.v1beta1.LinkedEntity",
              "fullType": "ixo.iid.v1beta1.LinkedEntity",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "Start Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "End Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relayer_node",
              "description": "Did of the operator through which the Entity was created",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credentials",
              "description": "Content ID or Hash of public Verifiable Credentials associated with the\nsubject",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_did",
              "description": "Owner of the Entity NFT | The ownersdid used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_address",
              "description": "The ownersdid address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "Extension data",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "alsoKnownAs",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linked_claim",
              "description": "Digital claims associated with the Subject",
              "label": "repeated",
              "type": "LinkedClaim",
              "longType": "ixo.iid.v1beta1.LinkedClaim",
              "fullType": "ixo.iid.v1beta1.LinkedClaim",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateEntityAccount",
          "longName": "MsgCreateEntityAccount",
          "fullName": "ixo.entity.v1beta1.MsgCreateEntityAccount",
          "description": "create a module account for an entity",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "entity id (did) to create account for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name of account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_address",
              "description": "The owner_address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateEntityAccountResponse",
          "longName": "MsgCreateEntityAccountResponse",
          "fullName": "ixo.entity.v1beta1.MsgCreateEntityAccountResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "account address that was created for specific entity and account name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateEntityResponse",
          "longName": "MsgCreateEntityResponse",
          "fullName": "ixo.entity.v1beta1.MsgCreateEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "entity_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_status",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgGrantEntityAccountAuthz",
          "longName": "MsgGrantEntityAccountAuthz",
          "fullName": "ixo.entity.v1beta1.MsgGrantEntityAccountAuthz",
          "description": "Create a authz grant from entity account (as grantor) to recipient in msg as\ngrantee for the specific authorization",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "entity id (did) which has the account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name of account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee_address",
              "description": "the grantee address that will be able to execute the authz authorization",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grant",
              "description": "grant to be Authorized in authz grant",
              "label": "",
              "type": "Grant",
              "longType": "cosmos.authz.v1beta1.Grant",
              "fullType": "cosmos.authz.v1beta1.Grant",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_address",
              "description": "the owner_address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgGrantEntityAccountAuthzResponse",
          "longName": "MsgGrantEntityAccountAuthzResponse",
          "fullName": "ixo.entity.v1beta1.MsgGrantEntityAccountAuthzResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgRevokeEntityAccountAuthz",
          "longName": "MsgRevokeEntityAccountAuthz",
          "fullName": "ixo.entity.v1beta1.MsgRevokeEntityAccountAuthz",
          "description": "Revoke an existing authz grant from entity account (as grantor) to recipient",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "entity id (did) which has the account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name of account",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "grantee_address",
              "description": "the grantee address for which the authz grant will be revoked",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "msg_type_url",
              "description": "the msg type url of the grant to be revoked for the specific grantee",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_address",
              "description": "the owner_address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgRevokeEntityAccountAuthzResponse",
          "longName": "MsgRevokeEntityAccountAuthzResponse",
          "fullName": "ixo.entity.v1beta1.MsgRevokeEntityAccountAuthzResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgTransferEntity",
          "longName": "MsgTransferEntity",
          "fullName": "ixo.entity.v1beta1.MsgTransferEntity",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_did",
              "description": "The owner_did used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner_address",
              "description": "The owner_address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient_did",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgTransferEntityResponse",
          "longName": "MsgTransferEntityResponse",
          "fullName": "ixo.entity.v1beta1.MsgTransferEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateEntity",
          "longName": "MsgUpdateEntity",
          "fullName": "ixo.entity.v1beta1.MsgUpdateEntity",
          "description": "Updates the entity with all the fields, so if field empty will be updated\nwith default go type, aka never null",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Id of entity to be updated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_status",
              "description": "Status of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_date",
              "description": "Start Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_date",
              "description": "End Date of the Entity as defined by the implementer and interpreted by\nClient applications",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "credentials",
              "description": "Content ID or Hash of public Verifiable Credentials associated with the\nsubject",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_did",
              "description": "The controllerDid used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "controller_address",
              "description": "The controllerAddress used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateEntityResponse",
          "longName": "MsgUpdateEntityResponse",
          "fullName": "ixo.entity.v1beta1.MsgUpdateEntityResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateEntityVerified",
          "longName": "MsgUpdateEntityVerified",
          "fullName": "ixo.entity.v1beta1.MsgUpdateEntityVerified",
          "description": "Only relayer nodes can update entity field 'entityVerified'",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Id of entity to be updated",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entity_verified",
              "description": "Whether entity is verified or not based on credentials",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relayer_node_did",
              "description": "The relayer node's did used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "relayer_node_address",
              "description": "The relayer node's address used to sign this transaction.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateEntityVerifiedResponse",
          "longName": "MsgUpdateEntityVerifiedResponse",
          "fullName": "ixo.entity.v1beta1.MsgUpdateEntityVerifiedResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.entity.v1beta1.Msg",
          "description": "Msg defines the project Msg service.",
          "methods": [
            {
              "name": "CreateEntity",
              "description": "CreateEntity defines a method for creating a entity.",
              "requestType": "MsgCreateEntity",
              "requestLongType": "MsgCreateEntity",
              "requestFullType": "ixo.entity.v1beta1.MsgCreateEntity",
              "requestStreaming": false,
              "responseType": "MsgCreateEntityResponse",
              "responseLongType": "MsgCreateEntityResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgCreateEntityResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateEntity",
              "description": "UpdateEntity defines a method for updating a entity",
              "requestType": "MsgUpdateEntity",
              "requestLongType": "MsgUpdateEntity",
              "requestFullType": "ixo.entity.v1beta1.MsgUpdateEntity",
              "requestStreaming": false,
              "responseType": "MsgUpdateEntityResponse",
              "responseLongType": "MsgUpdateEntityResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgUpdateEntityResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateEntityVerified",
              "description": "UpdateEntityVerified defines a method for updating if an entity is verified",
              "requestType": "MsgUpdateEntityVerified",
              "requestLongType": "MsgUpdateEntityVerified",
              "requestFullType": "ixo.entity.v1beta1.MsgUpdateEntityVerified",
              "requestStreaming": false,
              "responseType": "MsgUpdateEntityVerifiedResponse",
              "responseLongType": "MsgUpdateEntityVerifiedResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgUpdateEntityVerifiedResponse",
              "responseStreaming": false
            },
            {
              "name": "TransferEntity",
              "description": "Transfers an entity and its nft to the recipient",
              "requestType": "MsgTransferEntity",
              "requestLongType": "MsgTransferEntity",
              "requestFullType": "ixo.entity.v1beta1.MsgTransferEntity",
              "requestStreaming": false,
              "responseType": "MsgTransferEntityResponse",
              "responseLongType": "MsgTransferEntityResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgTransferEntityResponse",
              "responseStreaming": false
            },
            {
              "name": "CreateEntityAccount",
              "description": "Create a module account for an entity,",
              "requestType": "MsgCreateEntityAccount",
              "requestLongType": "MsgCreateEntityAccount",
              "requestFullType": "ixo.entity.v1beta1.MsgCreateEntityAccount",
              "requestStreaming": false,
              "responseType": "MsgCreateEntityAccountResponse",
              "responseLongType": "MsgCreateEntityAccountResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgCreateEntityAccountResponse",
              "responseStreaming": false
            },
            {
              "name": "GrantEntityAccountAuthz",
              "description": "Create an authz grant from entity account",
              "requestType": "MsgGrantEntityAccountAuthz",
              "requestLongType": "MsgGrantEntityAccountAuthz",
              "requestFullType": "ixo.entity.v1beta1.MsgGrantEntityAccountAuthz",
              "requestStreaming": false,
              "responseType": "MsgGrantEntityAccountAuthzResponse",
              "responseLongType": "MsgGrantEntityAccountAuthzResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgGrantEntityAccountAuthzResponse",
              "responseStreaming": false
            },
            {
              "name": "RevokeEntityAccountAuthz",
              "description": "Revoke an authz grant from entity account",
              "requestType": "MsgRevokeEntityAccountAuthz",
              "requestLongType": "MsgRevokeEntityAccountAuthz",
              "requestFullType": "ixo.entity.v1beta1.MsgRevokeEntityAccountAuthz",
              "requestStreaming": false,
              "responseType": "MsgRevokeEntityAccountAuthzResponse",
              "responseLongType": "MsgRevokeEntityAccountAuthzResponse",
              "responseFullType": "ixo.entity.v1beta1.MsgRevokeEntityAccountAuthzResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/epochs/v1beta1/epoch.proto",
      "description": "",
      "package": "ixo.epochs.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "EpochInfo",
          "longName": "EpochInfo",
          "fullName": "ixo.epochs.v1beta1.EpochInfo",
          "description": "EpochInfo is a struct that describes the data going into\na timer defined by the x/epochs module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "identifier",
              "description": "identifier is a unique reference to this particular timer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "start_time is the time at which the timer first ever ticks.\nIf start_time is in the future, the epoch will not begin until the start\ntime.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "duration",
              "description": "duration is the time in between epoch ticks.\nIn order for intended behavior to be met, duration should\nbe greater than the chains expected block time.\nDuration must be non-zero.",
              "label": "",
              "type": "Duration",
              "longType": "google.protobuf.Duration",
              "fullType": "google.protobuf.Duration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch",
              "description": "current_epoch is the current epoch number, or in other words,\nhow many times has the timer 'ticked'.\nThe first tick (current_epoch=1) is defined as\nthe first block whose blocktime is greater than the EpochInfo start_time.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_start_time",
              "description": "current_epoch_start_time describes the start time of the current timer\ninterval. The interval is (current_epoch_start_time,\ncurrent_epoch_start_time + duration] When the timer ticks, this is set to\ncurrent_epoch_start_time = last_epoch_start_time + duration only one timer\ntick for a given identifier can occur per block.\n\nNOTE! The current_epoch_start_time may diverge significantly from the\nwall-clock time the epoch began at. Wall-clock time of epoch start may be\n\u003e\u003e current_epoch_start_time. Suppose current_epoch_start_time = 10,\nduration = 5. Suppose the chain goes offline at t=14, and comes back online\nat t=30, and produces blocks at every successive time. (t=31, 32, etc.)\n* The t=30 block will start the epoch for (10, 15]\n* The t=31 block will start the epoch for (15, 20]\n* The t=32 block will start the epoch for (20, 25]\n* The t=33 block will start the epoch for (25, 30]\n* The t=34 block will start the epoch for (30, 35]\n* The **t=36** block will start the epoch for (35, 40]",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_counting_started",
              "description": "epoch_counting_started is a boolean, that indicates whether this\nepoch timer has began yet.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "current_epoch_start_height",
              "description": "current_epoch_start_height is the block height at which the current epoch\nstarted. (The block height at which the timer last ticked)",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/epochs/v1beta1/event.proto",
      "description": "",
      "package": "ixo.epochs.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "EpochEndEvent",
          "longName": "EpochEndEvent",
          "fullName": "ixo.epochs.v1beta1.EpochEndEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_number",
              "description": "Epoch number, starting from 1.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EpochStartEvent",
          "longName": "EpochStartEvent",
          "fullName": "ixo.epochs.v1beta1.EpochStartEvent",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_number",
              "description": "Epoch number, starting from 1.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "The start timestamp of the epoch.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/epochs/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.epochs.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.epochs.v1beta1.GenesisState",
          "description": "GenesisState defines the epochs module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epochs",
              "description": "",
              "label": "repeated",
              "type": "EpochInfo",
              "longType": "EpochInfo",
              "fullType": "ixo.epochs.v1beta1.EpochInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/epochs/v1beta1/query.proto",
      "description": "",
      "package": "ixo.epochs.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryCurrentEpochRequest",
          "longName": "QueryCurrentEpochRequest",
          "fullName": "ixo.epochs.v1beta1.QueryCurrentEpochRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "identifier",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryCurrentEpochResponse",
          "longName": "QueryCurrentEpochResponse",
          "fullName": "ixo.epochs.v1beta1.QueryCurrentEpochResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "current_epoch",
              "description": "",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryEpochsInfoRequest",
          "longName": "QueryEpochsInfoRequest",
          "fullName": "ixo.epochs.v1beta1.QueryEpochsInfoRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryEpochsInfoResponse",
          "longName": "QueryEpochsInfoResponse",
          "fullName": "ixo.epochs.v1beta1.QueryEpochsInfoResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epochs",
              "description": "",
              "label": "repeated",
              "type": "EpochInfo",
              "longType": "EpochInfo",
              "fullType": "ixo.epochs.v1beta1.EpochInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.epochs.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "EpochInfos",
              "description": "EpochInfos provide running epochInfos",
              "requestType": "QueryEpochsInfoRequest",
              "requestLongType": "QueryEpochsInfoRequest",
              "requestFullType": "ixo.epochs.v1beta1.QueryEpochsInfoRequest",
              "requestStreaming": false,
              "responseType": "QueryEpochsInfoResponse",
              "responseLongType": "QueryEpochsInfoResponse",
              "responseFullType": "ixo.epochs.v1beta1.QueryEpochsInfoResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/epochs/v1beta1/epochs"
                    }
                  ]
                }
              }
            },
            {
              "name": "CurrentEpoch",
              "description": "CurrentEpoch provide current epoch of specified identifier",
              "requestType": "QueryCurrentEpochRequest",
              "requestLongType": "QueryCurrentEpochRequest",
              "requestFullType": "ixo.epochs.v1beta1.QueryCurrentEpochRequest",
              "requestStreaming": false,
              "responseType": "QueryCurrentEpochResponse",
              "responseLongType": "QueryCurrentEpochResponse",
              "responseFullType": "ixo.epochs.v1beta1.QueryCurrentEpochResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/epochs/v1beta1/epochs/{identifier}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/iid/v1beta1/event.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "IidDocumentCreatedEvent",
          "longName": "IidDocumentCreatedEvent",
          "fullName": "ixo.iid.v1beta1.IidDocumentCreatedEvent",
          "description": "IidDocumentCreatedEvent is triggered when a new IidDocument is created.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iidDocument",
              "description": "",
              "label": "",
              "type": "IidDocument",
              "longType": "IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "IidDocumentUpdatedEvent",
          "longName": "IidDocumentUpdatedEvent",
          "fullName": "ixo.iid.v1beta1.IidDocumentUpdatedEvent",
          "description": "DidDocumentUpdatedEvent is an event triggered on a DID document update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iidDocument",
              "description": "",
              "label": "",
              "type": "IidDocument",
              "longType": "IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/iid/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.iid.v1beta1.GenesisState",
          "description": "GenesisState defines the did module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iid_docs",
              "description": "",
              "label": "repeated",
              "type": "IidDocument",
              "longType": "IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/iid/v1beta1/query.proto",
      "description": "",
      "package": "ixo.iid.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryIidDocumentRequest",
          "longName": "QueryIidDocumentRequest",
          "fullName": "ixo.iid.v1beta1.QueryIidDocumentRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "did id of iid document querying",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIidDocumentResponse",
          "longName": "QueryIidDocumentResponse",
          "fullName": "ixo.iid.v1beta1.QueryIidDocumentResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iidDocument",
              "description": "",
              "label": "",
              "type": "IidDocument",
              "longType": "IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIidDocumentsRequest",
          "longName": "QueryIidDocumentsRequest",
          "fullName": "ixo.iid.v1beta1.QueryIidDocumentsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "pagination defines an optional pagination for the request.",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryIidDocumentsResponse",
          "longName": "QueryIidDocumentsResponse",
          "fullName": "ixo.iid.v1beta1.QueryIidDocumentsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "iidDocuments",
              "description": "",
              "label": "repeated",
              "type": "IidDocument",
              "longType": "IidDocument",
              "fullType": "ixo.iid.v1beta1.IidDocument",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pagination",
              "description": "pagination defines the pagination in the response.",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.iid.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "IidDocuments",
              "description": "IidDocuments queries all iid documents that match the given status.",
              "requestType": "QueryIidDocumentsRequest",
              "requestLongType": "QueryIidDocumentsRequest",
              "requestFullType": "ixo.iid.v1beta1.QueryIidDocumentsRequest",
              "requestStreaming": false,
              "responseType": "QueryIidDocumentsResponse",
              "responseLongType": "QueryIidDocumentsResponse",
              "responseFullType": "ixo.iid.v1beta1.QueryIidDocumentsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/did/dids"
                    }
                  ]
                }
              }
            },
            {
              "name": "IidDocument",
              "description": "IidDocument queries a iid documents with an id.",
              "requestType": "QueryIidDocumentRequest",
              "requestLongType": "QueryIidDocumentRequest",
              "requestFullType": "ixo.iid.v1beta1.QueryIidDocumentRequest",
              "requestStreaming": false,
              "responseType": "QueryIidDocumentResponse",
              "responseLongType": "QueryIidDocumentResponse",
              "responseFullType": "ixo.iid.v1beta1.QueryIidDocumentResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/did/dids/{id}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/liquidstake/v1beta1/liquidstake.proto",
      "description": "",
      "package": "ixo.liquidstake.v1beta1",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ValidatorStatus",
          "longName": "ValidatorStatus",
          "fullName": "ixo.liquidstake.v1beta1.ValidatorStatus",
          "description": "ValidatorStatus enumerates the status of a liquid validator.",
          "values": [
            {
              "name": "VALIDATOR_STATUS_UNSPECIFIED",
              "number": "0",
              "description": "VALIDATOR_STATUS_UNSPECIFIED defines the unspecified invalid status."
            },
            {
              "name": "VALIDATOR_STATUS_ACTIVE",
              "number": "1",
              "description": "VALIDATOR_STATUS_ACTIVE defines the active, valid status"
            },
            {
              "name": "VALIDATOR_STATUS_INACTIVE",
              "number": "2",
              "description": "VALIDATOR_STATUS_INACTIVE defines the inactive, invalid status"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "LiquidValidator",
          "longName": "LiquidValidator",
          "fullName": "ixo.liquidstake.v1beta1.LiquidValidator",
          "description": "LiquidValidator defines a Validator that can be the target of LiquidStaking\nand LiquidUnstaking, Active, Weight, etc. fields are derived as functions to\ndeal with by maintaining consistency with the state of the staking module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operator_address",
              "description": "operator_address defines the address of the validator's operator; bech\nencoded in JSON.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidValidatorState",
          "longName": "LiquidValidatorState",
          "fullName": "ixo.liquidstake.v1beta1.LiquidValidatorState",
          "description": "LiquidValidatorState is type LiquidValidator with state added to return to\nquery results.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "operator_address",
              "description": "operator_address defines the address of the validator's operator; bech\nencoded in JSON.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "weight specifies the weight for liquid staking, unstaking amount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "status is the liquid validator status",
              "label": "",
              "type": "ValidatorStatus",
              "longType": "ValidatorStatus",
              "fullType": "ixo.liquidstake.v1beta1.ValidatorStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "del_shares",
              "description": "del_shares define the delegation shares of the validator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquid_tokens",
              "description": "liquid_tokens define the token amount worth of delegation shares of the\nvalidator (slashing applied amount)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NetAmountState",
          "longName": "NetAmountState",
          "fullName": "ixo.liquidstake.v1beta1.NetAmountState",
          "description": "NetAmountState is type for net amount raw data and mint rate, This is a value\nthat depends on the several module state every time, so it is used only for\ncalculation and query and is not stored in kv.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "stake_rate",
              "description": "stake_rate is the rate at which the liquid staking module mints stkIXO",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unstake_rate",
              "description": "unstake_rate is the rate at which the liquid staking module burns stkIXO",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stkixo_total_supply",
              "description": "btoken_total_supply returns the total supply of uzero (stkIXO denom)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "net_amount",
              "description": "net_amount is proxy account's total liquid tokens + total unbonding balance",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_del_shares",
              "description": "total_del_shares define the delegation shares of all liquid validators",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_liquid_tokens",
              "description": "total_liquid_tokens define the token amount worth of delegation shares of\nall liquid validator (slashing applied amount)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_remaining_rewards",
              "description": "total_remaining_rewards define the sum of remaining rewards of proxy\naccount by all liquid validators",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_unbonding_balance",
              "description": "total_unbonding_balance define the unbonding balance of proxy account by\nall liquid validator (slashing applied amount)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proxy_acc_balance",
              "description": "proxy_acc_balance define the balance of proxy account for the native token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.liquidstake.v1beta1.Params",
          "description": "Params defines the set of params for the liquidstake module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquid_bond_denom",
              "description": "LiquidBondDenom specifies the denomination of the token receiving after\nliquid stake, The value is calculated through NetAmount.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "whitelisted_validators",
              "description": "WhitelistedValidators specifies the validators elected to become Active\nLiquid Validators.",
              "label": "repeated",
              "type": "WhitelistedValidator",
              "longType": "WhitelistedValidator",
              "fullType": "ixo.liquidstake.v1beta1.WhitelistedValidator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unstake_fee_rate",
              "description": "UnstakeFeeRate specifies the fee rate when liquid unstake is requested,\nunbonded by subtracting it from unbondingAmount",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "min_liquid_stake_amount",
              "description": "MinLiquidStakingAmount specifies the minimum number of coins to be staked\nto the active liquid validators on liquid staking to minimize decimal loss\nand consider gas efficiency.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_account_address",
              "description": "FeeAccountAddress defines the bech32-encoded address of\nan account responsible for accumulating protocol fees.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "autocompound_fee_rate",
              "description": "AutocompoundFeeRate specifies the fee rate for auto redelegating the stake\nrewards. The fee is taken in favour of the fee account (see\nFeeAccountAddress).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "whitelist_admin_address",
              "description": "WhitelistAdminAddress the bech32-encoded address of an admin authority\nthat is allowed to update whitelisted validators or pause liquidstaking\nmodule entirely. It is also the only address that can update the\nweighted_rewards_receivers.\nThe key is controlled by the ZERO dao.\nPausing of the module can be required during important migrations or\nfailures.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "module_paused",
              "description": "ModulePaused is a safety toggle that allows to stop main module functions\nsuch as stake/unstake/stake-to-lp and the BeginBlocker logic.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weighted_rewards_receivers",
              "description": "weighted_rewards_receivers is the addresses to receive the staking\nrewards on autocompounding with weights assigned to each address.\nThe total of weights in the list in not allowed to be greater than 1.\n\nEg. if the list has 1 address with weight 0.2, then on autocompounding\nthe staking rewards will be split between 0.2 for the weighted receiver\nand 0.8 gets auto-compounded to the proxy account.",
              "label": "repeated",
              "type": "WeightedAddress",
              "longType": "WeightedAddress",
              "fullType": "ixo.liquidstake.v1beta1.WeightedAddress",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WeightedAddress",
          "longName": "WeightedAddress",
          "fullName": "ixo.liquidstake.v1beta1.WeightedAddress",
          "description": "WeightedAddress represents an address with a weight assigned to it.\nThe weight is used to determine the proportion of autocompounding\nrewards to be paid to the address.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WhitelistedValidator",
          "longName": "WhitelistedValidator",
          "fullName": "ixo.liquidstake.v1beta1.WhitelistedValidator",
          "description": "WhitelistedValidator consists of the validator operator address and the\ntarget weight, which is a value for calculating the real weight to be derived\naccording to the active status.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator_address",
              "description": "validator_address defines the bech32-encoded address of the whitelisted\nvalidator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "target_weight",
              "description": "target_weight specifies the target weight for liquid staking, unstaking\namount, which is a value for calculating the real weight to be derived\naccording to the active status",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/liquidstake/v1beta1/event.proto",
      "description": "",
      "package": "ixo.liquidstake.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AddLiquidValidatorEvent",
          "longName": "AddLiquidValidatorEvent",
          "fullName": "ixo.liquidstake.v1beta1.AddLiquidValidatorEvent",
          "description": "LiquidRedelegateEvent is triggered when a liquid validator is added.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "validator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AutocompoundStakingRewardsEvent",
          "longName": "AutocompoundStakingRewardsEvent",
          "fullName": "ixo.liquidstake.v1beta1.AutocompoundStakingRewardsEvent",
          "description": "AutocompoundEvent is triggered after a epoch is triggered for autocompound.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fee_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "redelegate_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weighted_rewards_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidStakeEvent",
          "longName": "LiquidStakeEvent",
          "fullName": "ixo.liquidstake.v1beta1.LiquidStakeEvent",
          "description": "LiquidStakeEvent is triggered when a liquid stake is performed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquid_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stk_ixo_minted_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidStakeParamsUpdatedEvent",
          "longName": "LiquidStakeParamsUpdatedEvent",
          "fullName": "ixo.liquidstake.v1beta1.LiquidStakeParamsUpdatedEvent",
          "description": "LiquidStakeParamsUpdatedEvent is triggered when a the Params is updated.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.liquidstake.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authority",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LiquidUnstakeEvent",
          "longName": "LiquidUnstakeEvent",
          "fullName": "ixo.liquidstake.v1beta1.LiquidUnstakeEvent",
          "description": "LiquidUnstakeEvent is triggered when a liquid unstake is performed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unstake_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unbonding_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "unbonded_amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "completion_time",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RebalancedLiquidStakeEvent",
          "longName": "RebalancedLiquidStakeEvent",
          "fullName": "ixo.liquidstake.v1beta1.RebalancedLiquidStakeEvent",
          "description": "RebalancedEvent is triggered after a rebalance is performed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "redelegation_count",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "redelegation_fail_count",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/liquidstake/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.liquidstake.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.liquidstake.v1beta1.GenesisState",
          "description": "GenesisState defines the liquidstake module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.liquidstake.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "liquid_validators",
              "description": "",
              "label": "repeated",
              "type": "LiquidValidator",
              "longType": "LiquidValidator",
              "fullType": "ixo.liquidstake.v1beta1.LiquidValidator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/liquidstake/v1beta1/query.proto",
      "description": "",
      "package": "ixo.liquidstake.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryLiquidValidatorsRequest",
          "longName": "QueryLiquidValidatorsRequest",
          "fullName": "ixo.liquidstake.v1beta1.QueryLiquidValidatorsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryLiquidValidatorsResponse",
          "longName": "QueryLiquidValidatorsResponse",
          "fullName": "ixo.liquidstake.v1beta1.QueryLiquidValidatorsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "liquid_validators",
              "description": "",
              "label": "repeated",
              "type": "LiquidValidatorState",
              "longType": "LiquidValidatorState",
              "fullType": "ixo.liquidstake.v1beta1.LiquidValidatorState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.liquidstake.v1beta1.QueryParamsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.liquidstake.v1beta1.QueryParamsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.liquidstake.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryStatesRequest",
          "longName": "QueryStatesRequest",
          "fullName": "ixo.liquidstake.v1beta1.QueryStatesRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryStatesResponse",
          "longName": "QueryStatesResponse",
          "fullName": "ixo.liquidstake.v1beta1.QueryStatesResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "net_amount_state",
              "description": "",
              "label": "",
              "type": "NetAmountState",
              "longType": "NetAmountState",
              "fullType": "ixo.liquidstake.v1beta1.NetAmountState",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.liquidstake.v1beta1.Query",
          "description": "Query defines the gRPC query service for the liquidstake module.",
          "methods": [
            {
              "name": "Params",
              "description": "Params returns parameters of the liquidstake module.",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.liquidstake.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/liquidstake/v1beta1/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "LiquidValidators",
              "description": "LiquidValidators returns liquid validators with states of the liquidstake\nmodule.",
              "requestType": "QueryLiquidValidatorsRequest",
              "requestLongType": "QueryLiquidValidatorsRequest",
              "requestFullType": "ixo.liquidstake.v1beta1.QueryLiquidValidatorsRequest",
              "requestStreaming": false,
              "responseType": "QueryLiquidValidatorsResponse",
              "responseLongType": "QueryLiquidValidatorsResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.QueryLiquidValidatorsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/liquidstake/v1beta1/validators"
                    }
                  ]
                }
              }
            },
            {
              "name": "States",
              "description": "States returns states of the liquidstake module.",
              "requestType": "QueryStatesRequest",
              "requestLongType": "QueryStatesRequest",
              "requestFullType": "ixo.liquidstake.v1beta1.QueryStatesRequest",
              "requestStreaming": false,
              "responseType": "QueryStatesResponse",
              "responseLongType": "QueryStatesResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.QueryStatesResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/liquidstake/v1beta1/states"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/liquidstake/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.liquidstake.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgLiquidStake",
          "longName": "MsgLiquidStake",
          "fullName": "ixo.liquidstake.v1beta1.MsgLiquidStake",
          "description": "MsgLiquidStake defines a SDK message for performing a liquid stake of coins\nfrom a delegator to whitelisted validators.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgLiquidStakeResponse",
          "longName": "MsgLiquidStakeResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgLiquidStakeResponse",
          "description": "MsgLiquidStakeResponse defines the MsgLiquidStake response type.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgLiquidUnstake",
          "longName": "MsgLiquidUnstake",
          "fullName": "ixo.liquidstake.v1beta1.MsgLiquidUnstake",
          "description": "MsgLiquidUnstake defines a SDK message for performing an undelegation of\nliquid staking from a delegate.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "delegator_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "Coin",
              "longType": "cosmos.base.v1beta1.Coin",
              "fullType": "cosmos.base.v1beta1.Coin",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgLiquidUnstakeResponse",
          "longName": "MsgLiquidUnstakeResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgLiquidUnstakeResponse",
          "description": "MsgLiquidUnstakeResponse defines the MsgLiquidUnstake response type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "completion_time",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetModulePaused",
          "longName": "MsgSetModulePaused",
          "fullName": "ixo.liquidstake.v1beta1.MsgSetModulePaused",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "authority",
              "description": "Authority is the address that is allowed to update module's paused state,\ndefined as admin address in params (WhitelistAdminAddress).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_paused",
              "description": "IsPaused represents the target state of the paused flag.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetModulePausedResponse",
          "longName": "MsgSetModulePausedResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgSetModulePausedResponse",
          "description": "MsgSetModulePausedResponse defines the response structure for\nexecuting a",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateParams",
          "longName": "MsgUpdateParams",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateParams",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "authority",
              "description": "authority is the address that controls the module (defaults to x/gov unless\noverwritten).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "params defines the parameters to update.\nNOTE: denom and whitelisted_validators and weighted_rewards_receivers are\nnot updated.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.liquidstake.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateParamsResponse",
          "longName": "MsgUpdateParamsResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateParamsResponse",
          "description": "MsgUpdateParamsResponse defines the response structure for executing a",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateWeightedRewardsReceivers",
          "longName": "MsgUpdateWeightedRewardsReceivers",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateWeightedRewardsReceivers",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "authority",
              "description": "Authority is the address that is allowed to update wieghted rewards\nreceivers, defined as admin address in params (WhitelistAdminAddress).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weighted_rewards_receivers",
              "description": "WhitelistedValidators specifies the validators elected to become Active\nLiquid Validators.",
              "label": "repeated",
              "type": "WeightedAddress",
              "longType": "WeightedAddress",
              "fullType": "ixo.liquidstake.v1beta1.WeightedAddress",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateWeightedRewardsReceiversResponse",
          "longName": "MsgUpdateWeightedRewardsReceiversResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateWeightedRewardsReceiversResponse",
          "description": "MsgUpdateWeightedRewardsReceiversResponse defines the response structure for\nexecuting a",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgUpdateWhitelistedValidators",
          "longName": "MsgUpdateWhitelistedValidators",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateWhitelistedValidators",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "authority",
              "description": "Authority is the address that is allowed to update whitelisted validators,\ndefined as admin address in params (WhitelistAdminAddress).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "whitelisted_validators",
              "description": "WhitelistedValidators specifies the validators elected to become Active\nLiquid Validators.",
              "label": "repeated",
              "type": "WhitelistedValidator",
              "longType": "WhitelistedValidator",
              "fullType": "ixo.liquidstake.v1beta1.WhitelistedValidator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgUpdateWhitelistedValidatorsResponse",
          "longName": "MsgUpdateWhitelistedValidatorsResponse",
          "fullName": "ixo.liquidstake.v1beta1.MsgUpdateWhitelistedValidatorsResponse",
          "description": "MsgUpdateWhitelistedValidatorsResponse defines the response structure for\nexecuting a",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.liquidstake.v1beta1.Msg",
          "description": "Msg defines the liquid staking Msg service.",
          "methods": [
            {
              "name": "LiquidStake",
              "description": "LiquidStake defines a method for performing a delegation of coins\nfrom a delegator to whitelisted validators.",
              "requestType": "MsgLiquidStake",
              "requestLongType": "MsgLiquidStake",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgLiquidStake",
              "requestStreaming": false,
              "responseType": "MsgLiquidStakeResponse",
              "responseLongType": "MsgLiquidStakeResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgLiquidStakeResponse",
              "responseStreaming": false
            },
            {
              "name": "LiquidUnstake",
              "description": "LiquidUnstake defines a method for performing an undelegation of liquid\nstaking from a delegate.",
              "requestType": "MsgLiquidUnstake",
              "requestLongType": "MsgLiquidUnstake",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgLiquidUnstake",
              "requestStreaming": false,
              "responseType": "MsgLiquidUnstakeResponse",
              "responseLongType": "MsgLiquidUnstakeResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgLiquidUnstakeResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateParams",
              "description": "UpdateParams defines a method to update the module params.",
              "requestType": "MsgUpdateParams",
              "requestLongType": "MsgUpdateParams",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgUpdateParams",
              "requestStreaming": false,
              "responseType": "MsgUpdateParamsResponse",
              "responseLongType": "MsgUpdateParamsResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgUpdateParamsResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateWhitelistedValidators",
              "description": "UpdateWhitelistedValidators defines a method to update the whitelisted\nvalidators list.",
              "requestType": "MsgUpdateWhitelistedValidators",
              "requestLongType": "MsgUpdateWhitelistedValidators",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgUpdateWhitelistedValidators",
              "requestStreaming": false,
              "responseType": "MsgUpdateWhitelistedValidatorsResponse",
              "responseLongType": "MsgUpdateWhitelistedValidatorsResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgUpdateWhitelistedValidatorsResponse",
              "responseStreaming": false
            },
            {
              "name": "UpdateWeightedRewardsReceivers",
              "description": "UpdateWhitelistedValidators defines a method to update the whitelisted\nvalidators list. Only the whitelist admin address can update this list.",
              "requestType": "MsgUpdateWeightedRewardsReceivers",
              "requestLongType": "MsgUpdateWeightedRewardsReceivers",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgUpdateWeightedRewardsReceivers",
              "requestStreaming": false,
              "responseType": "MsgUpdateWeightedRewardsReceiversResponse",
              "responseLongType": "MsgUpdateWeightedRewardsReceiversResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgUpdateWeightedRewardsReceiversResponse",
              "responseStreaming": false
            },
            {
              "name": "SetModulePaused",
              "description": "SetModulePaused  defines a method to update the module's pause status,\nsetting value of the safety flag in params.",
              "requestType": "MsgSetModulePaused",
              "requestLongType": "MsgSetModulePaused",
              "requestFullType": "ixo.liquidstake.v1beta1.MsgSetModulePaused",
              "requestStreaming": false,
              "responseType": "MsgSetModulePausedResponse",
              "responseLongType": "MsgSetModulePausedResponse",
              "responseFullType": "ixo.liquidstake.v1beta1.MsgSetModulePausedResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/mint/v1beta1/event.proto",
      "description": "",
      "package": "ixo.mint.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MintEpochProvisionsMintedEvent",
          "longName": "MintEpochProvisionsMintedEvent",
          "fullName": "ixo.mint.v1beta1.MintEpochProvisionsMintedEvent",
          "description": "MintEpochProvisionsMintedEvent is triggered after a epoch is triggered\nminting module for inflation.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_number",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_provisions",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/mint/v1beta1/mint.proto",
      "description": "",
      "package": "ixo.mint.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "DistributionProportions",
          "longName": "DistributionProportions",
          "fullName": "ixo.mint.v1beta1.DistributionProportions",
          "description": "DistributionProportions defines the distribution proportions of the minted\ndenom. In other words, defines which stakeholders will receive the minted\ndenoms and how much.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "staking",
              "description": "staking defines the proportion of the minted mint_denom that is to be\nallocated as staking rewards.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "impact_rewards",
              "description": "impact_rewards defines the proportion of the minted mint_denom that is\nto be allocated to impact rewards addresses.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "community_pool",
              "description": "community_pool defines the proportion of the minted mint_denom that is\nto be allocated to the community pool.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Minter",
          "longName": "Minter",
          "fullName": "ixo.mint.v1beta1.Minter",
          "description": "Minter represents the minting state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_provisions",
              "description": "epoch_provisions represent rewards for the current epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.mint.v1beta1.Params",
          "description": "Params holds parameters for the x/mint module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "mint_denom",
              "description": "mint_denom is the denom of the coin to mint.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "genesis_epoch_provisions",
              "description": "genesis_epoch_provisions epoch provisions from the first epoch.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch_identifier",
              "description": "epoch_identifier mint epoch identifier e.g. (day, week).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reduction_period_in_epochs",
              "description": "reduction_period_in_epochs the number of epochs it takes\nto reduce the rewards.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reduction_factor",
              "description": "reduction_factor is the reduction multiplier to execute\nat the end of each period set by reduction_period_in_epochs.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "distribution_proportions",
              "description": "distribution_proportions defines the distribution proportions of the minted\ndenom. In other words, defines which stakeholders will receive the minted\ndenoms and how much.",
              "label": "",
              "type": "DistributionProportions",
              "longType": "DistributionProportions",
              "fullType": "ixo.mint.v1beta1.DistributionProportions",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weighted_impact_rewards_receivers",
              "description": "weighted_impact_rewards_receivers is the address to receive impact\nrewards with weights assigned to each address. The final amount that each\naddress receives is: epoch_provisions *\ndistribution_proportions.impact_rewards * Address's Weight.",
              "label": "repeated",
              "type": "WeightedAddress",
              "longType": "WeightedAddress",
              "fullType": "ixo.mint.v1beta1.WeightedAddress",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minting_rewards_distribution_start_epoch",
              "description": "minting_rewards_distribution_start_epoch start epoch to distribute minting\nrewards",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WeightedAddress",
          "longName": "WeightedAddress",
          "fullName": "ixo.mint.v1beta1.WeightedAddress",
          "description": "WeightedAddress represents an address with a weight assigned to it.\nThe weight is used to determine the proportion of the total minted\ntokens to be minted to the address.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "weight",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/mint/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.mint.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.mint.v1beta1.GenesisState",
          "description": "GenesisState defines the mint module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "minter is an abstraction for holding current rewards information.",
              "label": "",
              "type": "Minter",
              "longType": "Minter",
              "fullType": "ixo.mint.v1beta1.Minter",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "params",
              "description": "params defines all the parameters of the mint module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.mint.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reduction_started_epoch",
              "description": "reduction_started_epoch is the first epoch in which the reduction of mint\nbegins.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/mint/v1beta1/query.proto",
      "description": "",
      "package": "ixo.mint.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryEpochProvisionsRequest",
          "longName": "QueryEpochProvisionsRequest",
          "fullName": "ixo.mint.v1beta1.QueryEpochProvisionsRequest",
          "description": "QueryEpochProvisionsRequest is the request type for the\nQuery/EpochProvisions RPC method.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryEpochProvisionsResponse",
          "longName": "QueryEpochProvisionsResponse",
          "fullName": "ixo.mint.v1beta1.QueryEpochProvisionsResponse",
          "description": "QueryEpochProvisionsResponse is the response type for the\nQuery/EpochProvisions RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "epoch_provisions",
              "description": "epoch_provisions is the current minting per epoch provisions value.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.mint.v1beta1.QueryParamsRequest",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.mint.v1beta1.QueryParamsResponse",
          "description": "QueryParamsResponse is the response type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params defines the parameters of the module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.mint.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.mint.v1beta1.Query",
          "description": "Query provides defines the gRPC querier service.",
          "methods": [
            {
              "name": "Params",
              "description": "Params returns the total set of minting parameters.",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.mint.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.mint.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/mint/v1beta1/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "EpochProvisions",
              "description": "EpochProvisions returns the current minting epoch provisions value.",
              "requestType": "QueryEpochProvisionsRequest",
              "requestLongType": "QueryEpochProvisionsRequest",
              "requestFullType": "ixo.mint.v1beta1.QueryEpochProvisionsRequest",
              "requestStreaming": false,
              "responseType": "QueryEpochProvisionsResponse",
              "responseLongType": "QueryEpochProvisionsResponse",
              "responseFullType": "ixo.mint.v1beta1.QueryEpochProvisionsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/mint/v1beta1/epoch_provisions"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/smartaccount/crypto/crypto.proto",
      "description": "",
      "package": "ixo.smartaccount.crypto",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AuthnPubKey",
          "longName": "AuthnPubKey",
          "fullName": "ixo.smartaccount.crypto.AuthnPubKey",
          "description": "PubKey defines an authn public key",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key_id",
              "description": "The key_id (or credential ID) is a unique identifier for a passkey.\nThis ID is provided by the authenticator when the passkey is created.\nAs it is not possible to retrieve the public key from the authenticator\nafter the passkey is created, if the user loses the public key - id\nassociation, the key_id can be used to retrieve the public key.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cose_algorithm",
              "description": "Store the COSE algorithm identifier. Since authn allows multiple different\npublic key credential algorithm, eg.\n-7(ES256) - ECDSA with SHA-256 on the P-256 curve\n-257(RS256) - RSASSA-PKCS1-v1_5 with SHA-256\nwe need to store the algorithm identifier to be able to verify the\nsignature according to the algorithm the public key is using.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "key",
              "description": "The public key bytes",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/token.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreditsTransferred",
          "longName": "CreditsTransferred",
          "fullName": "ixo.token.v1beta1.CreditsTransferred",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "jurisdiction",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authorization_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.token.v1beta1.Params",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ixo1155_contract_code",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Token",
          "longName": "Token",
          "fullName": "ixo.token.v1beta1.Token",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "generated on token initiation",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "class",
              "description": "class is the token protocol entity DID (validated)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name is the token name, which must be unique (namespace)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "description is any arbitrary description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "image",
              "description": "image is the image url for the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "type is the token type (eg ixo1155)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cap",
              "description": "cap is the maximum number of tokens with this name that can be minted, 0 is\nunlimited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "supply",
              "description": "how much has already been minted for this Token type, aka the supply",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "paused",
              "description": "stop allowance of token minter temporarily",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stopped",
              "description": "stop allowance of token minter permanently",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retired",
              "description": "tokens that has been retired for this Token with specific name and contract\naddress",
              "label": "repeated",
              "type": "TokensRetired",
              "longType": "TokensRetired",
              "fullType": "ixo.token.v1beta1.TokensRetired",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cancelled",
              "description": "tokens that has been cancelled for this Token with specific name and\ncontract address",
              "label": "repeated",
              "type": "TokensCancelled",
              "longType": "TokensCancelled",
              "fullType": "ixo.token.v1beta1.TokensCancelled",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "transferred",
              "description": "credits that has been transferred for this Token with specific name and\ncontract address",
              "label": "repeated",
              "type": "CreditsTransferred",
              "longType": "CreditsTransferred",
              "fullType": "ixo.token.v1beta1.CreditsTransferred",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenData",
          "longName": "TokenData",
          "fullName": "ixo.token.v1beta1.TokenData",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "uri",
              "description": "media type value should always be \"application/json\"\n\ncredential link ***.ipfs",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "encrypted",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "proof",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "did of entity to map token to",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenProperties",
          "longName": "TokenProperties",
          "fullName": "ixo.token.v1beta1.TokenProperties",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "index",
              "description": "index is the unique identifier hexstring that identifies the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name is the token name, which is same as Token name",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "did of collection (eg Supamoto Malawi)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokenData",
              "description": "tokenData is the linkedResources added to tokenMetadata when queried eg\n(credential link ***.ipfs)",
              "label": "repeated",
              "type": "TokenData",
              "longType": "TokenData",
              "fullType": "ixo.token.v1beta1.TokenData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokensCancelled",
          "longName": "TokensCancelled",
          "fullName": "ixo.token.v1beta1.TokensCancelled",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokensRetired",
          "longName": "TokensRetired",
          "fullName": "ixo.token.v1beta1.TokensRetired",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "jurisdiction",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MintBatch",
          "longName": "MintBatch",
          "fullName": "ixo.token.v1beta1.MintBatch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "name is the token name, which must be unique (namespace), will be verified\nagainst Token name provided on msgCreateToken",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "index",
              "description": "index is the unique identifier hexstring that identifies the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "amount is the number of tokens to mint",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "did of collection (eg Supamoto Malawi)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_data",
              "description": "tokenData is the linkedResources added to tokenMetadata when queried eg\n(credential link ***.ipfs)",
              "label": "repeated",
              "type": "TokenData",
              "longType": "TokenData",
              "fullType": "ixo.token.v1beta1.TokenData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCancelToken",
          "longName": "MsgCancelToken",
          "fullName": "ixo.token.v1beta1.MsgCancelToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "address of owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "tokens to retire, all tokens must be in same smart contract",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "reason is any arbitrary string that specifies the reason for retiring\ntokens.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCancelTokenResponse",
          "longName": "MsgCancelTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgCancelTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgCreateToken",
          "longName": "MsgCreateToken",
          "fullName": "ixo.token.v1beta1.MsgCreateToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "class",
              "description": "class is the token protocol entity DID (validated)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name is the token name, which must be unique (namespace)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "description is any arbitrary description",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "image",
              "description": "image is the image url for the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_type",
              "description": "type is the token type (eg ixo1155)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cap",
              "description": "cap is the maximum number of tokens with this name that can be minted, 0 is\nunlimited",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgCreateTokenResponse",
          "longName": "MsgCreateTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgCreateTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgMintToken",
          "longName": "MsgMintToken",
          "fullName": "ixo.token.v1beta1.MsgMintToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "address of owner to mint for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mint_batch",
              "description": "",
              "label": "repeated",
              "type": "MintBatch",
              "longType": "MintBatch",
              "fullType": "ixo.token.v1beta1.MintBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgMintTokenResponse",
          "longName": "MsgMintTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgMintTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgPauseToken",
          "longName": "MsgPauseToken",
          "fullName": "ixo.token.v1beta1.MsgPauseToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "paused",
              "description": "pause or unpause Token Minting allowance",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgPauseTokenResponse",
          "longName": "MsgPauseTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgPauseTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgRetireToken",
          "longName": "MsgRetireToken",
          "fullName": "ixo.token.v1beta1.MsgRetireToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "address of owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "tokens to retire, all tokens must be in same smart contract",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "jurisdiction",
              "description": "jurisdiction is the jurisdiction of the token owner. A jurisdiction has\nthe format: \u003ccountry-code\u003e[-\u003csub-national-code\u003e[ \u003cpostal-code\u003e]]\nThe country-code must be 2 alphabetic characters, the sub-national-code\ncan be 1-3 alphanumeric characters, and the postal-code can be up to 64\nalphanumeric characters. Only the country-code is required, while the\nsub-national-code and postal-code are optional and can be added for\nincreased precision. See the valid format for this below.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "reason is any arbitrary string that specifies the reason for retiring\ntokens.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgRetireTokenResponse",
          "longName": "MsgRetireTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgRetireTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgStopToken",
          "longName": "MsgStopToken",
          "fullName": "ixo.token.v1beta1.MsgStopToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgStopTokenResponse",
          "longName": "MsgStopTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgStopTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgTransferCredit",
          "longName": "MsgTransferCredit",
          "fullName": "ixo.token.v1beta1.MsgTransferCredit",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "address of owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "tokens to retire, all tokens must be in same smart contract",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "jurisdiction",
              "description": "jurisdiction is the jurisdiction of the token owner. A jurisdiction has\nthe format: \u003ccountry-code\u003e[-\u003csub-national-code\u003e[ \u003cpostal-code\u003e]]\nThe country-code must be 2 alphabetic characters, the sub-national-code\ncan be 1-3 alphanumeric characters, and the postal-code can be up to 64\nalphanumeric characters. Only the country-code is required, while the\nsub-national-code and postal-code are optional and can be added for\nincreased precision. See the valid format for this below.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "reason",
              "description": "reason is any arbitrary string that specifies the reason for retiring\ntokens.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authorization_id",
              "description": "authorization_id is the id of the authorization that was used for the\ncredit transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgTransferCreditResponse",
          "longName": "MsgTransferCreditResponse",
          "fullName": "ixo.token.v1beta1.MsgTransferCreditResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "MsgTransferToken",
          "longName": "MsgTransferToken",
          "fullName": "ixo.token.v1beta1.MsgTransferToken",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "address of owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient",
              "description": "address of receiver",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "all tokens must be in same smart contract",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgTransferTokenResponse",
          "longName": "MsgTransferTokenResponse",
          "fullName": "ixo.token.v1beta1.MsgTransferTokenResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "TokenBatch",
          "longName": "TokenBatch",
          "fullName": "ixo.token.v1beta1.TokenBatch",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "id that identifies the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "amount is the number of tokens to transfer",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.token.v1beta1.Msg",
          "description": "Msg defines the project Msg service.",
          "methods": [
            {
              "name": "CreateToken",
              "description": "",
              "requestType": "MsgCreateToken",
              "requestLongType": "MsgCreateToken",
              "requestFullType": "ixo.token.v1beta1.MsgCreateToken",
              "requestStreaming": false,
              "responseType": "MsgCreateTokenResponse",
              "responseLongType": "MsgCreateTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgCreateTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "MintToken",
              "description": "",
              "requestType": "MsgMintToken",
              "requestLongType": "MsgMintToken",
              "requestFullType": "ixo.token.v1beta1.MsgMintToken",
              "requestStreaming": false,
              "responseType": "MsgMintTokenResponse",
              "responseLongType": "MsgMintTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgMintTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "TransferToken",
              "description": "",
              "requestType": "MsgTransferToken",
              "requestLongType": "MsgTransferToken",
              "requestFullType": "ixo.token.v1beta1.MsgTransferToken",
              "requestStreaming": false,
              "responseType": "MsgTransferTokenResponse",
              "responseLongType": "MsgTransferTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgTransferTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "RetireToken",
              "description": "",
              "requestType": "MsgRetireToken",
              "requestLongType": "MsgRetireToken",
              "requestFullType": "ixo.token.v1beta1.MsgRetireToken",
              "requestStreaming": false,
              "responseType": "MsgRetireTokenResponse",
              "responseLongType": "MsgRetireTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgRetireTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "TransferCredit",
              "description": "",
              "requestType": "MsgTransferCredit",
              "requestLongType": "MsgTransferCredit",
              "requestFullType": "ixo.token.v1beta1.MsgTransferCredit",
              "requestStreaming": false,
              "responseType": "MsgTransferCreditResponse",
              "responseLongType": "MsgTransferCreditResponse",
              "responseFullType": "ixo.token.v1beta1.MsgTransferCreditResponse",
              "responseStreaming": false
            },
            {
              "name": "CancelToken",
              "description": "",
              "requestType": "MsgCancelToken",
              "requestLongType": "MsgCancelToken",
              "requestFullType": "ixo.token.v1beta1.MsgCancelToken",
              "requestStreaming": false,
              "responseType": "MsgCancelTokenResponse",
              "responseLongType": "MsgCancelTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgCancelTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "PauseToken",
              "description": "",
              "requestType": "MsgPauseToken",
              "requestLongType": "MsgPauseToken",
              "requestFullType": "ixo.token.v1beta1.MsgPauseToken",
              "requestStreaming": false,
              "responseType": "MsgPauseTokenResponse",
              "responseLongType": "MsgPauseTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgPauseTokenResponse",
              "responseStreaming": false
            },
            {
              "name": "StopToken",
              "description": "",
              "requestType": "MsgStopToken",
              "requestLongType": "MsgStopToken",
              "requestFullType": "ixo.token.v1beta1.MsgStopToken",
              "requestStreaming": false,
              "responseType": "MsgStopTokenResponse",
              "responseLongType": "MsgStopTokenResponse",
              "responseFullType": "ixo.token.v1beta1.MsgStopTokenResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/smartaccount/v1beta1/event.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AuthenticatorAddedEvent",
          "longName": "AuthenticatorAddedEvent",
          "fullName": "ixo.smartaccount.v1beta1.AuthenticatorAddedEvent",
          "description": "AuthenticatorAddedEvent is an event triggered on Authenticator addition",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "sender is the address of the account that added the authenticator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_type",
              "description": "authenticator_type is the type of the authenticator that was added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_id",
              "description": "authenticator_id is the id of the authenticator that was added",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorRemovedEvent",
          "longName": "AuthenticatorRemovedEvent",
          "fullName": "ixo.smartaccount.v1beta1.AuthenticatorRemovedEvent",
          "description": "AuthenticatorRemovedEvent is an event triggered on Authenticator removal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "sender is the address of the account that removed the authenticator",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_id",
              "description": "authenticator_id is the id of the authenticator that was removed",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "AuthenticatorSetActiveStateEvent",
          "longName": "AuthenticatorSetActiveStateEvent",
          "fullName": "ixo.smartaccount.v1beta1.AuthenticatorSetActiveStateEvent",
          "description": "AuthenticatorSetActiveStateEvent is an event triggered on Authenticator\nactive state change",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "sender is the address of the account that changed the active state",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_smart_account_active",
              "description": "active is the new active state",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/smartaccount/v1beta1/params.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Params",
          "longName": "Params",
          "fullName": "ixo.smartaccount.v1beta1.Params",
          "description": "Params defines the parameters for the module.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maximum_unauthenticated_gas",
              "description": "MaximumUnauthenticatedGas defines the maximum amount of gas that can be\nused to authenticate a transaction in ante handler without having fee payer\nauthenticated.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_smart_account_active",
              "description": "IsSmartAccountActive defines the state of the authenticator.\nIf set to false, the authenticator module will not be used\nand the classic cosmos sdk authentication will be used instead.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "circuit_breaker_controllers",
              "description": "CircuitBreakerControllers defines list of addresses that are allowed to\nset is_smart_account_active without going through governance.",
              "label": "repeated",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/smartaccount/v1beta1/models.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AccountAuthenticator",
          "longName": "AccountAuthenticator",
          "fullName": "ixo.smartaccount.v1beta1.AccountAuthenticator",
          "description": "AccountAuthenticator represents a foundational model for all authenticators.\nIt provides extensibility by allowing concrete types to interpret and\nvalidate transactions based on the encapsulated data.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID uniquely identifies the authenticator instance.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Type specifies the category of the AccountAuthenticator.\nThis type information is essential for differentiating authenticators\nand ensuring precise data retrieval from the storage layer.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "config",
              "description": "Config is a versatile field used in conjunction with the specific type of\naccount authenticator to facilitate complex authentication processes.\nThe interpretation of this field is overloaded, enabling multiple\nauthenticators to utilize it for their respective purposes.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/smartaccount/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "AuthenticatorData",
          "longName": "AuthenticatorData",
          "fullName": "ixo.smartaccount.v1beta1.AuthenticatorData",
          "description": "AuthenticatorData represents a genesis exported account with Authenticators.\nThe address is used as the key, and the account authenticators are stored in\nthe authenticators field.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "address",
              "description": "address is an account address, one address can have many authenticators",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticators",
              "description": "authenticators are the account's authenticators, these can be multiple\ntypes including SignatureVerification, AllOfs, CosmWasmAuthenticators, etc",
              "label": "repeated",
              "type": "AccountAuthenticator",
              "longType": "AccountAuthenticator",
              "fullType": "ixo.smartaccount.v1beta1.AccountAuthenticator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.smartaccount.v1beta1.GenesisState",
          "description": "GenesisState defines the authenticator module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params define the parameters for the authenticator module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.smartaccount.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "next_authenticator_id",
              "description": "next_authenticator_id is the next available authenticator ID.",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_data",
              "description": "authenticator_data contains the data for multiple accounts, each with their\nauthenticators.",
              "label": "repeated",
              "type": "AuthenticatorData",
              "longType": "AuthenticatorData",
              "fullType": "ixo.smartaccount.v1beta1.AuthenticatorData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/smartaccount/v1beta1/query.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GetAuthenticatorRequest",
          "longName": "GetAuthenticatorRequest",
          "fullName": "ixo.smartaccount.v1beta1.GetAuthenticatorRequest",
          "description": "MsgGetAuthenticatorRequest defines the Msg/GetAuthenticator request type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_id",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAuthenticatorResponse",
          "longName": "GetAuthenticatorResponse",
          "fullName": "ixo.smartaccount.v1beta1.GetAuthenticatorResponse",
          "description": "MsgGetAuthenticatorResponse defines the Msg/GetAuthenticator response type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account_authenticator",
              "description": "",
              "label": "",
              "type": "AccountAuthenticator",
              "longType": "AccountAuthenticator",
              "fullType": "ixo.smartaccount.v1beta1.AccountAuthenticator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAuthenticatorsRequest",
          "longName": "GetAuthenticatorsRequest",
          "fullName": "ixo.smartaccount.v1beta1.GetAuthenticatorsRequest",
          "description": "MsgGetAuthenticatorsRequest defines the Msg/GetAuthenticators request type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetAuthenticatorsResponse",
          "longName": "GetAuthenticatorsResponse",
          "fullName": "ixo.smartaccount.v1beta1.GetAuthenticatorsResponse",
          "description": "MsgGetAuthenticatorsResponse defines the Msg/GetAuthenticators response type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "account_authenticators",
              "description": "",
              "label": "repeated",
              "type": "AccountAuthenticator",
              "longType": "AccountAuthenticator",
              "fullType": "ixo.smartaccount.v1beta1.AccountAuthenticator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.smartaccount.v1beta1.QueryParamsRequest",
          "description": "QueryParamsRequest is request type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.smartaccount.v1beta1.QueryParamsResponse",
          "description": "QueryParamsResponse is response type for the Query/Params RPC method.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params holds all the parameters of this module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.smartaccount.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.smartaccount.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "Params",
              "description": "Parameters queries the parameters of the module.",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.smartaccount.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/smartaccount/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetAuthenticator",
              "description": "",
              "requestType": "GetAuthenticatorRequest",
              "requestLongType": "GetAuthenticatorRequest",
              "requestFullType": "ixo.smartaccount.v1beta1.GetAuthenticatorRequest",
              "requestStreaming": false,
              "responseType": "GetAuthenticatorResponse",
              "responseLongType": "GetAuthenticatorResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.GetAuthenticatorResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/smartaccount/authenticator/{account}/{authenticator_id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "GetAuthenticators",
              "description": "",
              "requestType": "GetAuthenticatorsRequest",
              "requestLongType": "GetAuthenticatorsRequest",
              "requestFullType": "ixo.smartaccount.v1beta1.GetAuthenticatorsRequest",
              "requestStreaming": false,
              "responseType": "GetAuthenticatorsResponse",
              "responseLongType": "GetAuthenticatorsResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.GetAuthenticatorsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/smartaccount/authenticators/{account}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/smartaccount/v1beta1/tx.proto",
      "description": "",
      "package": "ixo.smartaccount.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MsgAddAuthenticator",
          "longName": "MsgAddAuthenticator",
          "fullName": "ixo.smartaccount.v1beta1.MsgAddAuthenticator",
          "description": "MsgAddAuthenticatorRequest defines the Msg/AddAuthenticator request type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "authenticator_type",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "data",
              "description": "",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgAddAuthenticatorResponse",
          "longName": "MsgAddAuthenticatorResponse",
          "fullName": "ixo.smartaccount.v1beta1.MsgAddAuthenticatorResponse",
          "description": "MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgRemoveAuthenticator",
          "longName": "MsgRemoveAuthenticator",
          "fullName": "ixo.smartaccount.v1beta1.MsgRemoveAuthenticator",
          "description": "MsgRemoveAuthenticatorRequest defines the Msg/RemoveAuthenticator request\ntype.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgRemoveAuthenticatorResponse",
          "longName": "MsgRemoveAuthenticatorResponse",
          "fullName": "ixo.smartaccount.v1beta1.MsgRemoveAuthenticatorResponse",
          "description": "MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response\ntype.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "success",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetActiveState",
          "longName": "MsgSetActiveState",
          "fullName": "ixo.smartaccount.v1beta1.MsgSetActiveState",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "sender",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "active",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MsgSetActiveStateResponse",
          "longName": "MsgSetActiveStateResponse",
          "fullName": "ixo.smartaccount.v1beta1.MsgSetActiveStateResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "TxExtension",
          "longName": "TxExtension",
          "fullName": "ixo.smartaccount.v1beta1.TxExtension",
          "description": "TxExtension allows for additional authenticator-specific data in\ntransactions.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "selected_authenticators",
              "description": "selected_authenticators holds the authenticator_id for the chosen\nauthenticator per message.",
              "label": "repeated",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Msg",
          "longName": "Msg",
          "fullName": "ixo.smartaccount.v1beta1.Msg",
          "description": "Msg defines the Msg service.",
          "methods": [
            {
              "name": "AddAuthenticator",
              "description": "",
              "requestType": "MsgAddAuthenticator",
              "requestLongType": "MsgAddAuthenticator",
              "requestFullType": "ixo.smartaccount.v1beta1.MsgAddAuthenticator",
              "requestStreaming": false,
              "responseType": "MsgAddAuthenticatorResponse",
              "responseLongType": "MsgAddAuthenticatorResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.MsgAddAuthenticatorResponse",
              "responseStreaming": false
            },
            {
              "name": "RemoveAuthenticator",
              "description": "",
              "requestType": "MsgRemoveAuthenticator",
              "requestLongType": "MsgRemoveAuthenticator",
              "requestFullType": "ixo.smartaccount.v1beta1.MsgRemoveAuthenticator",
              "requestStreaming": false,
              "responseType": "MsgRemoveAuthenticatorResponse",
              "responseLongType": "MsgRemoveAuthenticatorResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.MsgRemoveAuthenticatorResponse",
              "responseStreaming": false
            },
            {
              "name": "SetActiveState",
              "description": "SetActiveState sets the active state of the authenticator.\nPrimarily used for circuit breaking.",
              "requestType": "MsgSetActiveState",
              "requestLongType": "MsgSetActiveState",
              "requestFullType": "ixo.smartaccount.v1beta1.MsgSetActiveState",
              "requestStreaming": false,
              "responseType": "MsgSetActiveStateResponse",
              "responseLongType": "MsgSetActiveStateResponse",
              "responseFullType": "ixo.smartaccount.v1beta1.MsgSetActiveStateResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "ixo/token/v1beta1/authz.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "MintAuthorization",
          "longName": "MintAuthorization",
          "fullName": "ixo.token.v1beta1.MintAuthorization",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "address of minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "constraints",
              "description": "",
              "label": "repeated",
              "type": "MintConstraints",
              "longType": "MintConstraints",
              "fullType": "ixo.token.v1beta1.MintConstraints",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MintConstraints",
          "longName": "MintConstraints",
          "fullName": "ixo.token.v1beta1.MintConstraints",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "name is the token name, which must be unique (namespace), will be verified\nagainst Token name provided on msgCreateToken",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "index",
              "description": "index is the unique identifier hexstring that identifies the token",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "did of collection (eg Supamoto Malawi)",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokenData",
              "description": "tokenData is the linkedResources added to tokenMetadata when queried eg\n(credential link ***.ipfs)",
              "label": "repeated",
              "type": "TokenData",
              "longType": "TokenData",
              "fullType": "ixo.token.v1beta1.TokenData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/event.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "CreditsTransferredEvent",
          "longName": "CreditsTransferredEvent",
          "fullName": "ixo.token.v1beta1.CreditsTransferredEvent",
          "description": "CreditsTransferredEvent is an event triggered on a Credit transfer\nexecution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "the token owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenCancelledEvent",
          "longName": "TokenCancelledEvent",
          "fullName": "ixo.token.v1beta1.TokenCancelledEvent",
          "description": "TokenCancelledEvent is an event triggered on a Token cancel execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "the token owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenCreatedEvent",
          "longName": "TokenCreatedEvent",
          "fullName": "ixo.token.v1beta1.TokenCreatedEvent",
          "description": "TokenCreatedEvent is an event triggered on a Token creation",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "Token",
              "longType": "Token",
              "fullType": "ixo.token.v1beta1.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenMintedEvent",
          "longName": "TokenMintedEvent",
          "fullName": "ixo.token.v1beta1.TokenMintedEvent",
          "description": "TokenMintedEvent is an event triggered on a Token mint execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "contract_address",
              "description": "the contract address of token contract being initialized",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minter",
              "description": "the token minter",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "owner",
              "description": "the new tokens owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "amount",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokenProperties",
              "description": "",
              "label": "",
              "type": "TokenProperties",
              "longType": "TokenProperties",
              "fullType": "ixo.token.v1beta1.TokenProperties",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenPausedEvent",
          "longName": "TokenPausedEvent",
          "fullName": "ixo.token.v1beta1.TokenPausedEvent",
          "description": "TokenPausedEvent is an event triggered on a Token pause/unpause execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "the minter address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "paused",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenRetiredEvent",
          "longName": "TokenRetiredEvent",
          "fullName": "ixo.token.v1beta1.TokenRetiredEvent",
          "description": "TokenRetiredEvent is an event triggered on a Token retire execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "the token owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenStoppedEvent",
          "longName": "TokenStoppedEvent",
          "fullName": "ixo.token.v1beta1.TokenStoppedEvent",
          "description": "TokenStoppedEvent is an event triggered on a Token stopped execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "the minter address",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "stopped",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenTransferredEvent",
          "longName": "TokenTransferredEvent",
          "fullName": "ixo.token.v1beta1.TokenTransferredEvent",
          "description": "TokenTransferedEvent is an event triggered on a Token transfer execution",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "owner",
              "description": "the old token owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "recipient",
              "description": "the new tokens owner",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "TokenBatch",
              "longType": "TokenBatch",
              "fullType": "ixo.token.v1beta1.TokenBatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenUpdatedEvent",
          "longName": "TokenUpdatedEvent",
          "fullName": "ixo.token.v1beta1.TokenUpdatedEvent",
          "description": "TokenUpdatedEvent is an event triggered on a Token update",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "token",
              "description": "",
              "label": "",
              "type": "Token",
              "longType": "Token",
              "fullType": "ixo.token.v1beta1.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/genesis.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "GenesisState",
          "longName": "GenesisState",
          "fullName": "ixo.token.v1beta1.GenesisState",
          "description": "GenesisState defines the module's genesis state.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.token.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokens",
              "description": "",
              "label": "repeated",
              "type": "Token",
              "longType": "Token",
              "fullType": "ixo.token.v1beta1.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "token_properties",
              "description": "",
              "label": "repeated",
              "type": "TokenProperties",
              "longType": "TokenProperties",
              "fullType": "ixo.token.v1beta1.TokenProperties",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/proposal.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "SetTokenContractCodes",
          "longName": "SetTokenContractCodes",
          "fullName": "ixo.token.v1beta1.SetTokenContractCodes",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "ixo1155_contract_code",
              "description": "",
              "label": "",
              "type": "uint64",
              "longType": "uint64",
              "fullType": "uint64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "ixo/token/v1beta1/query.proto",
      "description": "",
      "package": "ixo.token.v1beta1",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "QueryParamsRequest",
          "longName": "QueryParamsRequest",
          "fullName": "ixo.token.v1beta1.QueryParamsRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "QueryParamsResponse",
          "longName": "QueryParamsResponse",
          "fullName": "ixo.token.v1beta1.QueryParamsResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "params",
              "description": "params holds all the parameters of this module.",
              "label": "",
              "type": "Params",
              "longType": "Params",
              "fullType": "ixo.token.v1beta1.Params",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenDocRequest",
          "longName": "QueryTokenDocRequest",
          "fullName": "ixo.token.v1beta1.QueryTokenDocRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "minter",
              "description": "minter address to get Token Doc for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "contract_address",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenDocResponse",
          "longName": "QueryTokenDocResponse",
          "fullName": "ixo.token.v1beta1.QueryTokenDocResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "tokenDoc",
              "description": "",
              "label": "",
              "type": "Token",
              "longType": "Token",
              "fullType": "ixo.token.v1beta1.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenListRequest",
          "longName": "QueryTokenListRequest",
          "fullName": "ixo.token.v1beta1.QueryTokenListRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageRequest",
              "longType": "cosmos.base.query.v1beta1.PageRequest",
              "fullType": "cosmos.base.query.v1beta1.PageRequest",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minter",
              "description": "minter address to get list for",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenListResponse",
          "longName": "QueryTokenListResponse",
          "fullName": "ixo.token.v1beta1.QueryTokenListResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "pagination",
              "description": "",
              "label": "",
              "type": "PageResponse",
              "longType": "cosmos.base.query.v1beta1.PageResponse",
              "fullType": "cosmos.base.query.v1beta1.PageResponse",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "tokenDocs",
              "description": "",
              "label": "repeated",
              "type": "Token",
              "longType": "Token",
              "fullType": "ixo.token.v1beta1.Token",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenMetadataRequest",
          "longName": "QueryTokenMetadataRequest",
          "fullName": "ixo.token.v1beta1.QueryTokenMetadataRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "QueryTokenMetadataResponse",
          "longName": "QueryTokenMetadataResponse",
          "fullName": "ixo.token.v1beta1.QueryTokenMetadataResponse",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "decimals",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "image",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "index",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "properties",
              "description": "",
              "label": "",
              "type": "TokenMetadataProperties",
              "longType": "TokenMetadataProperties",
              "fullType": "ixo.token.v1beta1.TokenMetadataProperties",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TokenMetadataProperties",
          "longName": "TokenMetadataProperties",
          "fullName": "ixo.token.v1beta1.TokenMetadataProperties",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "class",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "collection",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "cap",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "linkedResources",
              "description": "",
              "label": "repeated",
              "type": "TokenData",
              "longType": "TokenData",
              "fullType": "ixo.token.v1beta1.TokenData",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "Query",
          "longName": "Query",
          "fullName": "ixo.token.v1beta1.Query",
          "description": "Query defines the gRPC querier service.",
          "methods": [
            {
              "name": "Params",
              "description": "",
              "requestType": "QueryParamsRequest",
              "requestLongType": "QueryParamsRequest",
              "requestFullType": "ixo.token.v1beta1.QueryParamsRequest",
              "requestStreaming": false,
              "responseType": "QueryParamsResponse",
              "responseLongType": "QueryParamsResponse",
              "responseFullType": "ixo.token.v1beta1.QueryParamsResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/token/params"
                    }
                  ]
                }
              }
            },
            {
              "name": "TokenMetadata",
              "description": "",
              "requestType": "QueryTokenMetadataRequest",
              "requestLongType": "QueryTokenMetadataRequest",
              "requestFullType": "ixo.token.v1beta1.QueryTokenMetadataRequest",
              "requestStreaming": false,
              "responseType": "QueryTokenMetadataResponse",
              "responseLongType": "QueryTokenMetadataResponse",
              "responseFullType": "ixo.token.v1beta1.QueryTokenMetadataResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/token/metadata/{id}"
                    }
                  ]
                }
              }
            },
            {
              "name": "TokenList",
              "description": "",
              "requestType": "QueryTokenListRequest",
              "requestLongType": "QueryTokenListRequest",
              "requestFullType": "ixo.token.v1beta1.QueryTokenListRequest",
              "requestStreaming": false,
              "responseType": "QueryTokenListResponse",
              "responseLongType": "QueryTokenListResponse",
              "responseFullType": "ixo.token.v1beta1.QueryTokenListResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/token/minter/{minter}"
                    }
                  ]
                }
              }
            },
            {
              "name": "TokenDoc",
              "description": "",
              "requestType": "QueryTokenDocRequest",
              "requestLongType": "QueryTokenDocRequest",
              "requestFullType": "ixo.token.v1beta1.QueryTokenDocRequest",
              "requestStreaming": false,
              "responseType": "QueryTokenDocResponse",
              "responseLongType": "QueryTokenDocResponse",
              "responseFullType": "ixo.token.v1beta1.QueryTokenDocResponse",
              "responseStreaming": false,
              "options": {
                "google.api.http": {
                  "rules": [
                    {
                      "method": "GET",
                      "pattern": "/ixo/token/minter/{minter}/{contract_address}"
                    }
                  ]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}