// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ixo/smartaccount/v1beta1/models.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AccountAuthenticator represents a foundational model for all authenticators.
// It provides extensibility by allowing concrete types to interpret and
// validate transactions based on the encapsulated data.
type AccountAuthenticator struct {
	// ID uniquely identifies the authenticator instance.
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type specifies the category of the AccountAuthenticator.
	// This type information is essential for differentiating authenticators
	// and ensuring precise data retrieval from the storage layer.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Config is a versatile field used in conjunction with the specific type of
	// account authenticator to facilitate complex authentication processes.
	// The interpretation of this field is overloaded, enabling multiple
	// authenticators to utilize it for their respective purposes.
	Config []byte `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (m *AccountAuthenticator) Reset()         { *m = AccountAuthenticator{} }
func (m *AccountAuthenticator) String() string { return proto.CompactTextString(m) }
func (*AccountAuthenticator) ProtoMessage()    {}
func (*AccountAuthenticator) Descriptor() ([]byte, []int) {
	return fileDescriptor_73958d19b5fb2cc2, []int{0}
}
func (m *AccountAuthenticator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountAuthenticator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountAuthenticator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountAuthenticator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAuthenticator.Merge(m, src)
}
func (m *AccountAuthenticator) XXX_Size() int {
	return m.Size()
}
func (m *AccountAuthenticator) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAuthenticator.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAuthenticator proto.InternalMessageInfo

func (m *AccountAuthenticator) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AccountAuthenticator) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AccountAuthenticator) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountAuthenticator)(nil), "ixo.smartaccount.v1beta1.AccountAuthenticator")
}

func init() {
	proto.RegisterFile("ixo/smartaccount/v1beta1/models.proto", fileDescriptor_73958d19b5fb2cc2)
}

var fileDescriptor_73958d19b5fb2cc2 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x6a, 0xc3, 0x30,
	0x14, 0x86, 0x2d, 0x37, 0x04, 0x2a, 0x4a, 0x07, 0x51, 0x8a, 0x27, 0x61, 0x0a, 0x05, 0x2f, 0xb1,
	0x08, 0xed, 0x01, 0x9a, 0x1e, 0xc1, 0x63, 0x36, 0x59, 0x52, 0xe2, 0x47, 0x63, 0xbd, 0x60, 0x3f,
	0x05, 0xf5, 0x16, 0x3d, 0x56, 0xc7, 0x8c, 0x1d, 0x8b, 0x7d, 0x91, 0x92, 0xc4, 0x85, 0x6c, 0xef,
	0x7b, 0x7c, 0xf0, 0xf3, 0xf1, 0x67, 0x88, 0xa8, 0xfa, 0x56, 0x77, 0xa4, 0x8d, 0xc1, 0xe0, 0x49,
	0x1d, 0x96, 0xb5, 0x23, 0xbd, 0x54, 0x2d, 0x5a, 0xb7, 0xeb, 0xcb, 0x7d, 0x87, 0x84, 0x22, 0x83,
	0x88, 0xe5, 0xb5, 0x56, 0x4e, 0xda, 0x53, 0xc5, 0x1f, 0x56, 0x97, 0xd7, 0x2a, 0x50, 0xe3, 0x3c,
	0x81, 0xd1, 0x84, 0x9d, 0xb8, 0xe7, 0x29, 0xd8, 0x8c, 0xe5, 0xac, 0x98, 0x55, 0x29, 0x58, 0x21,
	0xf8, 0x8c, 0x3e, 0xf7, 0x2e, 0x4b, 0x73, 0x56, 0xdc, 0x56, 0xe7, 0x5b, 0x3c, 0xf2, 0xb9, 0x41,
	0xbf, 0x81, 0x6d, 0x76, 0x93, 0xb3, 0xe2, 0xae, 0x9a, 0xe8, 0x7d, 0xfd, 0x3d, 0x48, 0x76, 0x1c,
	0x24, 0xfb, 0x1d, 0x24, 0xfb, 0x1a, 0x65, 0x72, 0x1c, 0x65, 0xf2, 0x33, 0xca, 0x64, 0xfd, 0xb6,
	0x05, 0x6a, 0x42, 0x5d, 0x1a, 0x6c, 0x15, 0x44, 0xdc, 0x60, 0xf0, 0x56, 0x13, 0xa0, 0x3f, 0xd1,
	0xa2, 0xde, 0xa1, 0xf9, 0x30, 0x8d, 0x06, 0xaf, 0x0e, 0xaf, 0x2a, 0x5e, 0xba, 0x16, 0xff, 0x61,
	0xa7, 0xc9, 0xbe, 0x9e, 0x9f, 0x83, 0x5e, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xd3, 0x44,
	0xe4, 0xf9, 0x00, 0x00, 0x00,
}

func (m *AccountAuthenticator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountAuthenticator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountAuthenticator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Config) > 0 {
		i -= len(m.Config)
		copy(dAtA[i:], m.Config)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Config)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintModels(dAtA []byte, offset int, v uint64) int {
	offset -= sovModels(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AccountAuthenticator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModels(uint64(m.Id))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Config)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	return n
}

func sovModels(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozModels(x uint64) (n int) {
	return sovModels(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountAuthenticator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountAuthenticator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountAuthenticator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Config = append(m.Config[:0], dAtA[iNdEx:postIndex]...)
			if m.Config == nil {
				m.Config = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModels(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModels
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthModels
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupModels
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthModels
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthModels        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModels          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupModels = fmt.Errorf("proto: unexpected end of group")
)
