// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: entity/tx.proto

package types

import (
	context "context"
	encoding_json "encoding/json"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	types "github.com/ixofoundation/ixo-blockchain/x/iid/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateEntity defines a message for creating a project.
type MsgCreateEntity struct {
	// The entity type likely Asset, Project, Investment for now. Validation for this is lacking right now, but will be added when scope is clearer.
	EntityType string `protobuf:"bytes,1,opt,name=entityType,proto3" json:"entity_type" yaml:"entity_type"`
	// The status of the entity. Should represent an enum in the client.
	EntityStatus int32 `protobuf:"varint,2,opt,name=entityStatus,proto3" json:"entity_status" yaml:"entity_status"`
	// the list of controller DIDs
	Controllers    []string                `protobuf:"bytes,3,rep,name=controllers,proto3" json:"controllers" yaml:"controllers"`
	Context        []*types.Context        `protobuf:"bytes,4,rep,name=context,proto3" json:"controllers" yaml:"controllers"`
	Verifications  []*types.Verification   `protobuf:"bytes,5,rep,name=verifications,proto3" json:"controllers" yaml:"controllers"`
	Services       []*types.Service        `protobuf:"bytes,6,rep,name=services,proto3" json:"controllers" yaml:"controllers"`
	AccordedRight  []*types.AccordedRight  `protobuf:"bytes,7,rep,name=accordedRight,proto3" json:"accorded_right" yaml:"accorded_right"`
	LinkedResource []*types.LinkedResource `protobuf:"bytes,8,rep,name=linkedResource,proto3" json:"linked_resource" yaml:"linked_resource"`
	LinkedEntity   []*types.LinkedEntity   `protobuf:"bytes,9,rep,name=linkedEntity,proto3" json:"linked_entity" yaml:"linked_entity"`
	Deactivated    bool                    `protobuf:"varint,10,opt,name=deactivated,proto3" json:"deactivated" yaml:"deactivated"`
	// refer to iid module for more information
	StartDate *time.Time `protobuf:"bytes,11,opt,name=startDate,proto3,stdtime" json:"start_date" yaml:"start_date"`
	// refer to iid module for more information
	EndDate *time.Time `protobuf:"bytes,12,opt,name=endDate,proto3,stdtime" json:"end_date" yaml:"end_date"`
	Stage   string     `protobuf:"bytes,13,opt,name=stage,proto3" json:"stage,omitempty"`
	// refer to iid module for more information
	RelayerNode string `protobuf:"bytes,14,opt,name=relayerNode,proto3" json:"relayer_node" yaml:"relayer_node"`
	// refer to iid module for more information
	VerifiableCredential string `protobuf:"bytes,15,opt,name=verifiableCredential,proto3" json:"verifiable_credential" yaml:"verifiable_credential"`
	// refer to iid module for more information
	Credentials  []string                 `protobuf:"bytes,16,rep,name=credentials,proto3" json:"credentials" yaml:"credentials"`
	OwnerDid     string                   `protobuf:"bytes,17,opt,name=ownerDid,proto3" json:"owner_did" yaml:"owner_did"`
	OwnerAddress string                   `protobuf:"bytes,18,opt,name=ownerAddress,proto3" json:"owner_address" yaml:"owner_address"`
	Data         encoding_json.RawMessage `protobuf:"bytes,19,opt,name=data,proto3,casttype=encoding/json.RawMessage" json:"data,omitempty" yaml:"data"`
}

func (m *MsgCreateEntity) Reset()         { *m = MsgCreateEntity{} }
func (m *MsgCreateEntity) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntity) ProtoMessage()    {}
func (*MsgCreateEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{0}
}
func (m *MsgCreateEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntity.Merge(m, src)
}
func (m *MsgCreateEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntity proto.InternalMessageInfo

// MsgCreateProjectResponse defines the Msg/CreateProject response type.
type MsgCreateEntityResponse struct {
	EntityId     string `protobuf:"bytes,1,opt,name=entityId,proto3" json:"entity_id" yaml:"entity_id"`
	EntityType   string `protobuf:"bytes,2,opt,name=entityType,proto3" json:"entity_type" yaml:"entity_type"`
	EntityStatus int32  `protobuf:"varint,3,opt,name=entityStatus,proto3" json:"entity_status" yaml:"entity_status"`
}

func (m *MsgCreateEntityResponse) Reset()         { *m = MsgCreateEntityResponse{} }
func (m *MsgCreateEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntityResponse) ProtoMessage()    {}
func (*MsgCreateEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{1}
}
func (m *MsgCreateEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntityResponse.Merge(m, src)
}
func (m *MsgCreateEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntityResponse proto.InternalMessageInfo

func (m *MsgCreateEntityResponse) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *MsgCreateEntityResponse) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *MsgCreateEntityResponse) GetEntityStatus() int32 {
	if m != nil {
		return m.EntityStatus
	}
	return 0
}

// MsgUpdateEntityStatus defines a message for updating a entity's current status.
type MsgUpdateEntity struct {
	// The status of the entity. Should represent an enum in the client.
	Status      int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Deactivated bool  `protobuf:"varint,2,opt,name=deactivated,proto3" json:"deactivated" yaml:"deactivated"`
	// refer to iid module for more information
	StartDate *time.Time `protobuf:"bytes,3,opt,name=startDate,proto3,stdtime" json:"start_date" yaml:"start_date"`
	// refer to iid module for more information
	EndDate *time.Time `protobuf:"bytes,4,opt,name=endDate,proto3,stdtime" json:"end_date" yaml:"end_date"`
	Stage   string     `protobuf:"bytes,5,opt,name=stage,proto3" json:"stage,omitempty"`
	// refer to iid module for more information
	RelayerNode string `protobuf:"bytes,6,opt,name=relayerNode,proto3" json:"relayer_node" yaml:"relayer_node"`
	// refer to iid module for more information
	VerifiableCredential string `protobuf:"bytes,7,opt,name=verifiableCredential,proto3" json:"verifiable_credential" yaml:"verifiable_credential"`
	ControllerDid        string `protobuf:"bytes,8,opt,name=controllerDid,proto3" json:"controller_did" yaml:"controller_did"`
	ControllerAddress    string `protobuf:"bytes,9,opt,name=controllerAddress,proto3" json:"controller_address" yaml:"controller_address"`
}

func (m *MsgUpdateEntity) Reset()         { *m = MsgUpdateEntity{} }
func (m *MsgUpdateEntity) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntity) ProtoMessage()    {}
func (*MsgUpdateEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{2}
}
func (m *MsgUpdateEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntity.Merge(m, src)
}
func (m *MsgUpdateEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntity proto.InternalMessageInfo

// MsgUpdateProjectStatusResponse defines the Msg/UpdateEntityStatus response type.
type MsgUpdateEntityResponse struct {
}

func (m *MsgUpdateEntityResponse) Reset()         { *m = MsgUpdateEntityResponse{} }
func (m *MsgUpdateEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityResponse) ProtoMessage()    {}
func (*MsgUpdateEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{3}
}
func (m *MsgUpdateEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityResponse.Merge(m, src)
}
func (m *MsgUpdateEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityResponse proto.InternalMessageInfo

type MsgUpdateEntityConfig struct {
	NftContractAddress string `protobuf:"bytes,1,opt,name=nft_contract_address,json=nftContractAddress,proto3" json:"nftContractAddress" yaml:"nftContractAddress"`
	Signer             string `protobuf:"bytes,2,opt,name=signer,proto3" json:"signer" yaml:"signer"`
}

func (m *MsgUpdateEntityConfig) Reset()         { *m = MsgUpdateEntityConfig{} }
func (m *MsgUpdateEntityConfig) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityConfig) ProtoMessage()    {}
func (*MsgUpdateEntityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{4}
}
func (m *MsgUpdateEntityConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityConfig.Merge(m, src)
}
func (m *MsgUpdateEntityConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityConfig proto.InternalMessageInfo

// MsgUpdateProjectStatusResponse defines the Msg/UpdateEntityStatus response type.
type MsgUpdateEntityConfigResponse struct {
}

func (m *MsgUpdateEntityConfigResponse) Reset()         { *m = MsgUpdateEntityConfigResponse{} }
func (m *MsgUpdateEntityConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityConfigResponse) ProtoMessage()    {}
func (*MsgUpdateEntityConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{5}
}
func (m *MsgUpdateEntityConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityConfigResponse.Merge(m, src)
}
func (m *MsgUpdateEntityConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityConfigResponse proto.InternalMessageInfo

type MsgTransferEntity struct {
	EntityDid         string `protobuf:"bytes,1,opt,name=entityDid,proto3" json:"entity_did" yaml:"entity_did"`
	ControllerDid     string `protobuf:"bytes,2,opt,name=controllerDid,proto3" json:"controller_did" yaml:"controller_did"`
	ControllerAddress string `protobuf:"bytes,3,opt,name=controllerAddress,proto3" json:"controller_address" yaml:"controller_address"`
	RecipiantDid      string `protobuf:"bytes,4,opt,name=recipiantDid,proto3" json:"recipiant_did" yaml:"recipiant_did"`
}

func (m *MsgTransferEntity) Reset()         { *m = MsgTransferEntity{} }
func (m *MsgTransferEntity) String() string { return proto.CompactTextString(m) }
func (*MsgTransferEntity) ProtoMessage()    {}
func (*MsgTransferEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{6}
}
func (m *MsgTransferEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferEntity.Merge(m, src)
}
func (m *MsgTransferEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferEntity proto.InternalMessageInfo

// MsgUpdateProjectStatusResponse defines the Msg/UpdateEntityStatus response type.
type MsgTransferEntityResponse struct {
}

func (m *MsgTransferEntityResponse) Reset()         { *m = MsgTransferEntityResponse{} }
func (m *MsgTransferEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferEntityResponse) ProtoMessage()    {}
func (*MsgTransferEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b64e8eb791e31d8, []int{7}
}
func (m *MsgTransferEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferEntityResponse.Merge(m, src)
}
func (m *MsgTransferEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferEntityResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateEntity)(nil), "entity.MsgCreateEntity")
	proto.RegisterType((*MsgCreateEntityResponse)(nil), "entity.MsgCreateEntityResponse")
	proto.RegisterType((*MsgUpdateEntity)(nil), "entity.MsgUpdateEntity")
	proto.RegisterType((*MsgUpdateEntityResponse)(nil), "entity.MsgUpdateEntityResponse")
	proto.RegisterType((*MsgUpdateEntityConfig)(nil), "entity.MsgUpdateEntityConfig")
	proto.RegisterType((*MsgUpdateEntityConfigResponse)(nil), "entity.MsgUpdateEntityConfigResponse")
	proto.RegisterType((*MsgTransferEntity)(nil), "entity.MsgTransferEntity")
	proto.RegisterType((*MsgTransferEntityResponse)(nil), "entity.MsgTransferEntityResponse")
}

func init() { proto.RegisterFile("entity/tx.proto", fileDescriptor_2b64e8eb791e31d8) }

var fileDescriptor_2b64e8eb791e31d8 = []byte{
	// 1234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x4f, 0x6b, 0x1b, 0xc7,
	0x1b, 0xf6, 0x4a, 0x96, 0x2c, 0x8f, 0x24, 0x3b, 0x1a, 0xcb, 0xc9, 0x5a, 0xf9, 0x45, 0xa3, 0xec,
	0x8f, 0x50, 0x95, 0x10, 0x09, 0x12, 0x28, 0x34, 0x50, 0x8a, 0xe5, 0x84, 0x26, 0x10, 0xa5, 0xed,
	0x26, 0x2d, 0x34, 0x87, 0xaa, 0xe3, 0xdd, 0xd1, 0x7a, 0x13, 0x79, 0x57, 0xec, 0x8c, 0x1d, 0xeb,
	0x1b, 0xf4, 0x98, 0x4f, 0x50, 0xf2, 0x45, 0x0a, 0xbd, 0x14, 0x7a, 0xcc, 0xb1, 0xa7, 0x6d, 0xb1,
	0x29, 0x14, 0x1d, 0x7a, 0xd0, 0xb1, 0xa7, 0xb2, 0x33, 0xb3, 0xbb, 0xb3, 0xb2, 0x9c, 0x1a, 0x6a,
	0x9f, 0xa4, 0xf7, 0x79, 0xe6, 0x7d, 0xe6, 0x9d, 0x99, 0xf7, 0x0f, 0x0b, 0xd6, 0x89, 0xc7, 0x5c,
	0x36, 0xe9, 0xb2, 0xa3, 0xce, 0x38, 0xf0, 0x99, 0x0f, 0x8b, 0x02, 0x68, 0xd4, 0x1d, 0xdf, 0xf1,
	0x39, 0xd4, 0x8d, 0xfe, 0x09, 0xb6, 0x51, 0x75, 0x5d, 0xbb, 0xeb, 0xba, 0xb6, 0x34, 0x2b, 0x91,
	0x19, 0xbb, 0x36, 0x36, 0xa4, 0x96, 0xf8, 0x91, 0x20, 0x72, 0x7c, 0xdf, 0x19, 0x91, 0x2e, 0xb7,
	0x76, 0x0f, 0x86, 0x5d, 0xe6, 0xee, 0x13, 0xca, 0xf0, 0xfe, 0x58, 0x2c, 0x30, 0x7e, 0xa8, 0x80,
	0xf5, 0x3e, 0x75, 0x76, 0x02, 0x82, 0x19, 0x79, 0xc8, 0x5d, 0xe1, 0x43, 0x00, 0x84, 0xc8, 0xf3,
	0xc9, 0x98, 0xe8, 0x5a, 0x4b, 0x6b, 0xaf, 0xf6, 0x6e, 0x4d, 0x43, 0x54, 0x16, 0xe8, 0x80, 0x4d,
	0xc6, 0x64, 0x16, 0x22, 0x38, 0xc1, 0xfb, 0xa3, 0xfb, 0x86, 0x02, 0x1a, 0xa6, 0xe2, 0x08, 0xfb,
	0xa0, 0x22, 0xac, 0x67, 0x0c, 0xb3, 0x03, 0xaa, 0xe7, 0x5a, 0x5a, 0xbb, 0xd0, 0xfb, 0x70, 0x1a,
	0xa2, 0xaa, 0xf4, 0xa1, 0x9c, 0x98, 0x85, 0xa8, 0x9e, 0x91, 0x12, 0xb0, 0x61, 0x66, 0xdc, 0xe1,
	0x67, 0xa0, 0x6c, 0xf9, 0x1e, 0x0b, 0xfc, 0xd1, 0x88, 0x04, 0x54, 0xcf, 0xb7, 0xf2, 0x71, 0x58,
	0x0a, 0x9c, 0x86, 0xa5, 0x80, 0x86, 0xa9, 0x2e, 0x81, 0x7d, 0xb0, 0x12, 0x99, 0xe4, 0x88, 0xe9,
	0xcb, 0xad, 0x7c, 0xbb, 0x7c, 0xb7, 0xd2, 0x89, 0xee, 0x74, 0x47, 0x60, 0xe7, 0x95, 0x8c, 0x35,
	0xe0, 0xb7, 0xa0, 0x7a, 0x48, 0x02, 0x77, 0xe8, 0x5a, 0x98, 0xb9, 0xbe, 0x47, 0xf5, 0x02, 0x17,
	0xad, 0x71, 0xd1, 0xaf, 0x15, 0xe6, 0xbc, 0xca, 0x59, 0x39, 0xf8, 0x39, 0x28, 0x51, 0x12, 0x1c,
	0xba, 0x16, 0xa1, 0x7a, 0x51, 0x89, 0xf7, 0x99, 0x00, 0xcf, 0xab, 0x9a, 0x88, 0x40, 0x02, 0xaa,
	0xd8, 0xb2, 0xfc, 0xc0, 0x26, 0xb6, 0xe9, 0x3a, 0x7b, 0x4c, 0x5f, 0xe1, 0xaa, 0x90, 0xab, 0x6e,
	0xab, 0x4c, 0xef, 0xf6, 0x34, 0x44, 0x6b, 0xf1, 0xe2, 0x41, 0x10, 0x61, 0xb3, 0x10, 0x6d, 0x0a,
	0xf9, 0x2c, 0x6e, 0x98, 0x59, 0x55, 0xf8, 0x12, 0xac, 0x8d, 0x5c, 0xef, 0x15, 0xb1, 0x4d, 0x42,
	0xfd, 0x83, 0xc0, 0x22, 0x7a, 0x89, 0xef, 0xb3, 0xc1, 0xf7, 0x79, 0x92, 0xa1, 0x7a, 0x77, 0xa6,
	0x21, 0x5a, 0x17, 0xcb, 0x07, 0x81, 0x04, 0x67, 0x21, 0xba, 0x2a, 0x76, 0x9a, 0x23, 0x0c, 0x73,
	0x4e, 0x19, 0x7e, 0x07, 0x2a, 0x02, 0x11, 0x19, 0xac, 0xaf, 0x2a, 0x4f, 0xf0, 0x44, 0x21, 0x44,
	0xf6, 0x49, 0x39, 0x91, 0x5d, 0x69, 0xf6, 0x65, 0x60, 0xc3, 0xcc, 0x28, 0x46, 0xd9, 0x67, 0x13,
	0x6c, 0x31, 0xf7, 0x10, 0x33, 0x62, 0xeb, 0xa0, 0xa5, 0xb5, 0x4b, 0xe2, 0xea, 0x15, 0x38, 0xbd,
	0x7a, 0x05, 0x34, 0x4c, 0x75, 0x09, 0xc4, 0x60, 0x95, 0x32, 0x1c, 0xb0, 0x07, 0x98, 0x11, 0xbd,
	0xdc, 0xd2, 0xda, 0xe5, 0xbb, 0x8d, 0x8e, 0xa8, 0xd2, 0x4e, 0x5c, 0xa5, 0x9d, 0xe7, 0x71, 0x95,
	0xf6, 0x3e, 0x98, 0x86, 0x08, 0x70, 0x87, 0x81, 0x8d, 0x59, 0x74, 0x27, 0x35, 0xb1, 0x43, 0x8a,
	0x19, 0x6f, 0x7e, 0x43, 0x9a, 0x99, 0xaa, 0xc2, 0x6f, 0xc0, 0x0a, 0xf1, 0x6c, 0xbe, 0x41, 0xe5,
	0x5f, 0x37, 0xf8, 0xff, 0x34, 0x44, 0x25, 0xe2, 0xd9, 0xb1, 0xfc, 0x7a, 0x5c, 0x8a, 0xb6, 0x22,
	0x1e, 0xeb, 0xc1, 0x3a, 0x28, 0x50, 0x86, 0x1d, 0xa2, 0x57, 0xa3, 0xae, 0x60, 0x0a, 0x03, 0x3e,
	0x06, 0xe5, 0x80, 0x8c, 0xf0, 0x84, 0x04, 0x4f, 0x7d, 0x9b, 0xe8, 0x6b, 0xbc, 0x63, 0x44, 0x91,
	0x57, 0x24, 0x3c, 0xf0, 0x7c, 0x3b, 0x12, 0xdf, 0x10, 0xe2, 0x2a, 0x6a, 0x98, 0xaa, 0x2f, 0xdc,
	0x07, 0x75, 0x91, 0xfe, 0x78, 0x77, 0x44, 0x76, 0x02, 0x62, 0x47, 0xcf, 0x81, 0x47, 0xfa, 0x3a,
	0xd7, 0xfc, 0x78, 0x1a, 0xa2, 0xcd, 0x94, 0x1f, 0x58, 0xc9, 0x82, 0x59, 0x88, 0xfe, 0x27, 0xc4,
	0x17, 0xd2, 0x86, 0xb9, 0x50, 0x96, 0x37, 0x95, 0xc4, 0xa2, 0xfa, 0x15, 0xa5, 0xa9, 0xa4, 0xb0,
	0x52, 0x51, 0x29, 0x18, 0x35, 0x95, 0xd4, 0x82, 0x9f, 0x80, 0x92, 0xff, 0xda, 0x23, 0xc1, 0x03,
	0xd7, 0xd6, 0x6b, 0x3c, 0xd6, 0x9b, 0xd3, 0x10, 0xad, 0x72, 0x6c, 0x60, 0xbb, 0x51, 0x6a, 0x5c,
	0x11, 0x1a, 0x09, 0x64, 0x98, 0x89, 0x4b, 0xd4, 0x2b, 0xf9, 0xff, 0x6d, 0xdb, 0x0e, 0x08, 0xa5,
	0x3a, 0xe4, 0x12, 0x3c, 0x5b, 0xc5, 0x7a, 0x2c, 0x88, 0x34, 0x5b, 0x33, 0xb0, 0x61, 0x66, 0xdc,
	0xe1, 0xa7, 0x60, 0xd9, 0xc6, 0x0c, 0xeb, 0x1b, 0x2d, 0xad, 0x5d, 0xe9, 0xdd, 0x9e, 0x85, 0xa8,
	0x2c, 0xf3, 0x12, 0x33, 0x6c, 0xfc, 0x1d, 0x22, 0x9d, 0x78, 0x96, 0x6f, 0xbb, 0x9e, 0xd3, 0x7d,
	0x49, 0x7d, 0xaf, 0x63, 0xe2, 0xd7, 0x7d, 0x42, 0x29, 0x76, 0x88, 0xc9, 0x1d, 0xef, 0x97, 0xbe,
	0x7f, 0x8b, 0x96, 0xfe, 0x7c, 0x8b, 0x96, 0x8c, 0xbf, 0x34, 0x70, 0x6d, 0x6e, 0x40, 0x98, 0x84,
	0x8e, 0x7d, 0x8f, 0x92, 0xe8, 0xd0, 0xa2, 0x5a, 0x1e, 0xdb, 0x72, 0x4c, 0xf0, 0x43, 0xcb, 0x36,
	0xae, 0x1e, 0x3a, 0x81, 0x0c, 0x33, 0x71, 0x99, 0x9b, 0x33, 0xb9, 0x8b, 0x9a, 0x33, 0xf9, 0xff,
	0x34, 0x67, 0x8c, 0x9f, 0x0a, 0x7c, 0x22, 0x7e, 0x35, 0xb6, 0xd3, 0x89, 0x78, 0x15, 0x14, 0xc5,
	0x62, 0x7e, 0xcc, 0x82, 0x29, 0xad, 0xf9, 0xae, 0x90, 0xbb, 0x98, 0xae, 0x90, 0xbf, 0xec, 0xae,
	0xb0, 0x7c, 0x59, 0x5d, 0xa1, 0xf0, 0x9e, 0xae, 0x50, 0xbc, 0x84, 0xae, 0xb0, 0x72, 0x39, 0x5d,
	0xe1, 0x4b, 0x50, 0x4d, 0x67, 0x67, 0x54, 0xd1, 0x25, 0xbe, 0x0f, 0x9f, 0x86, 0x29, 0x21, 0xcb,
	0x7a, 0x73, 0x7e, 0xd8, 0x8a, 0xda, 0xce, 0x2a, 0x40, 0x0c, 0x6a, 0x29, 0x10, 0x57, 0xf9, 0x2a,
	0x97, 0xbd, 0x37, 0x0d, 0x11, 0x54, 0xdc, 0xd3, 0x52, 0xdf, 0x3a, 0x25, 0x9d, 0xd4, 0xfb, 0x69,
	0x35, 0xa5, 0x66, 0xb7, 0x78, 0xc9, 0xaa, 0x19, 0x1c, 0x97, 0xac, 0xf1, 0xa3, 0x06, 0x36, 0xe7,
	0xb8, 0x1d, 0xdf, 0x1b, 0xba, 0x0e, 0x24, 0xa0, 0xee, 0x0d, 0xd9, 0x80, 0xeb, 0x62, 0x8b, 0xc5,
	0x5b, 0xc9, 0xc2, 0xe6, 0x41, 0x7a, 0x43, 0xb6, 0x23, 0xe9, 0xed, 0xf9, 0x20, 0x4f, 0x73, 0x86,
	0xb9, 0xc0, 0x01, 0xde, 0x03, 0x45, 0xea, 0x3a, 0x1e, 0x09, 0x64, 0xc1, 0x5f, 0x9f, 0x86, 0x48,
	0x22, 0xb3, 0x10, 0x55, 0x65, 0x1a, 0x73, 0xdb, 0x30, 0x25, 0xa1, 0x1c, 0x0d, 0x81, 0x1b, 0x0b,
	0xc3, 0x4f, 0x0e, 0xf8, 0x47, 0x0e, 0xd4, 0xfa, 0xd4, 0x79, 0x1e, 0x60, 0x8f, 0x0e, 0x49, 0x20,
	0x0b, 0x78, 0x1b, 0xc8, 0xae, 0x14, 0xbd, 0xa6, 0x38, 0x51, 0x94, 0xe2, 0xb2, 0x8d, 0xc8, 0x97,
	0xac, 0x65, 0xba, 0x03, 0x7f, 0xc5, 0xd4, 0xeb, 0x74, 0x52, 0xe4, 0x2e, 0x27, 0x29, 0xf2, 0x17,
	0x99, 0x14, 0x51, 0x73, 0x0c, 0x88, 0xe5, 0x8e, 0x5d, 0xec, 0xb1, 0x28, 0xe8, 0xe5, 0x74, 0xb0,
	0x24, 0xb8, 0x8c, 0xb9, 0x1e, 0x97, 0xa1, 0x02, 0x1b, 0x66, 0xc6, 0x5d, 0x79, 0x88, 0xeb, 0x60,
	0xeb, 0xd4, 0x35, 0xc7, 0x8f, 0x70, 0xf7, 0xe7, 0x1c, 0xc8, 0xf7, 0xa9, 0x03, 0x1f, 0x81, 0x4a,
	0xe6, 0xcb, 0xe2, 0x5a, 0x47, 0x7e, 0x9d, 0xcc, 0x4d, 0x94, 0x06, 0x3a, 0x83, 0x48, 0x46, 0xcd,
	0x23, 0x50, 0xc9, 0x74, 0x64, 0x55, 0x49, 0x25, 0x32, 0x4a, 0x8b, 0x2a, 0x00, 0xbe, 0x00, 0x70,
	0x41, 0xf6, 0xdf, 0x38, 0xc3, 0x4d, 0xd0, 0x8d, 0x5b, 0xef, 0xa5, 0x13, 0xed, 0xa7, 0x60, 0x6d,
	0x2e, 0xf1, 0xb6, 0x14, 0xc7, 0x2c, 0xd5, 0xb8, 0x79, 0x26, 0x15, 0xeb, 0xf5, 0xbe, 0xf8, 0xe5,
	0xb8, 0xa9, 0xbd, 0x3b, 0x6e, 0x6a, 0xbf, 0x1f, 0x37, 0xb5, 0x37, 0x27, 0xcd, 0xa5, 0x77, 0x27,
	0xcd, 0xa5, 0x5f, 0x4f, 0x9a, 0x4b, 0x2f, 0x3e, 0x72, 0x5c, 0xb6, 0x77, 0xb0, 0xdb, 0xb1, 0xfc,
	0xfd, 0xae, 0x7b, 0xe4, 0x0f, 0xfd, 0x03, 0xcf, 0xe6, 0x1f, 0x0c, 0x91, 0x75, 0x67, 0x77, 0xe4,
	0x5b, 0xaf, 0xac, 0x3d, 0xec, 0x7a, 0xdd, 0xa3, 0x6e, 0xfc, 0x8d, 0x39, 0x19, 0x13, 0xba, 0x5b,
	0xe4, 0xcd, 0xfe, 0xde, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x2a, 0x3a, 0xe0, 0x7a, 0x0e,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateProject defines a method for creating a project.
	CreateEntity(ctx context.Context, in *MsgCreateEntity, opts ...grpc.CallOption) (*MsgCreateEntityResponse, error)
	// // UpdateEntityStatus defines a method for updating a entity's current status.
	UpdateEntity(ctx context.Context, in *MsgUpdateEntity, opts ...grpc.CallOption) (*MsgUpdateEntityResponse, error)
	UpdateEntityConfig(ctx context.Context, in *MsgUpdateEntityConfig, opts ...grpc.CallOption) (*MsgUpdateEntityConfigResponse, error)
	TransferEntity(ctx context.Context, in *MsgTransferEntity, opts ...grpc.CallOption) (*MsgTransferEntityResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateEntity(ctx context.Context, in *MsgCreateEntity, opts ...grpc.CallOption) (*MsgCreateEntityResponse, error) {
	out := new(MsgCreateEntityResponse)
	err := c.cc.Invoke(ctx, "/entity.Msg/CreateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEntity(ctx context.Context, in *MsgUpdateEntity, opts ...grpc.CallOption) (*MsgUpdateEntityResponse, error) {
	out := new(MsgUpdateEntityResponse)
	err := c.cc.Invoke(ctx, "/entity.Msg/UpdateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEntityConfig(ctx context.Context, in *MsgUpdateEntityConfig, opts ...grpc.CallOption) (*MsgUpdateEntityConfigResponse, error) {
	out := new(MsgUpdateEntityConfigResponse)
	err := c.cc.Invoke(ctx, "/entity.Msg/UpdateEntityConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferEntity(ctx context.Context, in *MsgTransferEntity, opts ...grpc.CallOption) (*MsgTransferEntityResponse, error) {
	out := new(MsgTransferEntityResponse)
	err := c.cc.Invoke(ctx, "/entity.Msg/TransferEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateProject defines a method for creating a project.
	CreateEntity(context.Context, *MsgCreateEntity) (*MsgCreateEntityResponse, error)
	// // UpdateEntityStatus defines a method for updating a entity's current status.
	UpdateEntity(context.Context, *MsgUpdateEntity) (*MsgUpdateEntityResponse, error)
	UpdateEntityConfig(context.Context, *MsgUpdateEntityConfig) (*MsgUpdateEntityConfigResponse, error)
	TransferEntity(context.Context, *MsgTransferEntity) (*MsgTransferEntityResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateEntity(ctx context.Context, req *MsgCreateEntity) (*MsgCreateEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntity not implemented")
}
func (*UnimplementedMsgServer) UpdateEntity(ctx context.Context, req *MsgUpdateEntity) (*MsgUpdateEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntity not implemented")
}
func (*UnimplementedMsgServer) UpdateEntityConfig(ctx context.Context, req *MsgUpdateEntityConfig) (*MsgUpdateEntityConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntityConfig not implemented")
}
func (*UnimplementedMsgServer) TransferEntity(ctx context.Context, req *MsgTransferEntity) (*MsgTransferEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferEntity not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entity.Msg/CreateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEntity(ctx, req.(*MsgCreateEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entity.Msg/UpdateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEntity(ctx, req.(*MsgUpdateEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEntityConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEntityConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEntityConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entity.Msg/UpdateEntityConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEntityConfig(ctx, req.(*MsgUpdateEntityConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entity.Msg/TransferEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferEntity(ctx, req.(*MsgTransferEntity))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "entity.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEntity",
			Handler:    _Msg_CreateEntity_Handler,
		},
		{
			MethodName: "UpdateEntity",
			Handler:    _Msg_UpdateEntity_Handler,
		},
		{
			MethodName: "UpdateEntityConfig",
			Handler:    _Msg_UpdateEntityConfig_Handler,
		},
		{
			MethodName: "TransferEntity",
			Handler:    _Msg_TransferEntity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "entity/tx.proto",
}

func (m *MsgCreateEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.OwnerDid) > 0 {
		i -= len(m.OwnerDid)
		copy(dAtA[i:], m.OwnerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerDid)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Credentials) > 0 {
		for iNdEx := len(m.Credentials) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Credentials[iNdEx])
			copy(dAtA[i:], m.Credentials[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Credentials[iNdEx])))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
	}
	if len(m.VerifiableCredential) > 0 {
		i -= len(m.VerifiableCredential)
		copy(dAtA[i:], m.VerifiableCredential)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VerifiableCredential)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.RelayerNode) > 0 {
		i -= len(m.RelayerNode)
		copy(dAtA[i:], m.RelayerNode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayerNode)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Stage) > 0 {
		i -= len(m.Stage)
		copy(dAtA[i:], m.Stage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Stage)))
		i--
		dAtA[i] = 0x6a
	}
	if m.EndDate != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.EndDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintTx(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x62
	}
	if m.StartDate != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintTx(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x5a
	}
	if m.Deactivated {
		i--
		if m.Deactivated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.LinkedEntity) > 0 {
		for iNdEx := len(m.LinkedEntity) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedEntity[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.LinkedResource) > 0 {
		for iNdEx := len(m.LinkedResource) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedResource[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.AccordedRight) > 0 {
		for iNdEx := len(m.AccordedRight) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccordedRight[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Services[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Verifications) > 0 {
		for iNdEx := len(m.Verifications) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Verifications[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Context) > 0 {
		for iNdEx := len(m.Context) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Context[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Controllers) > 0 {
		for iNdEx := len(m.Controllers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Controllers[iNdEx])
			copy(dAtA[i:], m.Controllers[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Controllers[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.EntityStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntityStatus))
		i--
		dAtA[i] = 0x10
	}
	if len(m.EntityType) > 0 {
		i -= len(m.EntityType)
		copy(dAtA[i:], m.EntityType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntityStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntityStatus))
		i--
		dAtA[i] = 0x18
	}
	if len(m.EntityType) > 0 {
		i -= len(m.EntityType)
		copy(dAtA[i:], m.EntityType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.EntityId) > 0 {
		i -= len(m.EntityId)
		copy(dAtA[i:], m.EntityId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ControllerAddress) > 0 {
		i -= len(m.ControllerAddress)
		copy(dAtA[i:], m.ControllerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerAddress)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ControllerDid) > 0 {
		i -= len(m.ControllerDid)
		copy(dAtA[i:], m.ControllerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerDid)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.VerifiableCredential) > 0 {
		i -= len(m.VerifiableCredential)
		copy(dAtA[i:], m.VerifiableCredential)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VerifiableCredential)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RelayerNode) > 0 {
		i -= len(m.RelayerNode)
		copy(dAtA[i:], m.RelayerNode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayerNode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Stage) > 0 {
		i -= len(m.Stage)
		copy(dAtA[i:], m.Stage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Stage)))
		i--
		dAtA[i] = 0x2a
	}
	if m.EndDate != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.EndDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintTx(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x22
	}
	if m.StartDate != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintTx(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x1a
	}
	if m.Deactivated {
		i--
		if m.Deactivated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NftContractAddress) > 0 {
		i -= len(m.NftContractAddress)
		copy(dAtA[i:], m.NftContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftContractAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransferEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RecipiantDid) > 0 {
		i -= len(m.RecipiantDid)
		copy(dAtA[i:], m.RecipiantDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecipiantDid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ControllerAddress) > 0 {
		i -= len(m.ControllerAddress)
		copy(dAtA[i:], m.ControllerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ControllerDid) > 0 {
		i -= len(m.ControllerDid)
		copy(dAtA[i:], m.ControllerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.EntityDid) > 0 {
		i -= len(m.EntityDid)
		copy(dAtA[i:], m.EntityDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityStatus != 0 {
		n += 1 + sovTx(uint64(m.EntityStatus))
	}
	if len(m.Controllers) > 0 {
		for _, s := range m.Controllers {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Context) > 0 {
		for _, e := range m.Context {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Verifications) > 0 {
		for _, e := range m.Verifications {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Services) > 0 {
		for _, e := range m.Services {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AccordedRight) > 0 {
		for _, e := range m.AccordedRight {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.LinkedResource) > 0 {
		for _, e := range m.LinkedResource {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.LinkedEntity) > 0 {
		for _, e := range m.LinkedEntity {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Deactivated {
		n += 2
	}
	if m.StartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate)
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Stage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayerNode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.VerifiableCredential)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Credentials) > 0 {
		for _, s := range m.Credentials {
			l = len(s)
			n += 2 + l + sovTx(uint64(l))
		}
	}
	l = len(m.OwnerDid)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EntityType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityStatus != 0 {
		n += 1 + sovTx(uint64(m.EntityStatus))
	}
	return n
}

func (m *MsgUpdateEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	if m.Deactivated {
		n += 2
	}
	if m.StartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate)
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Stage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayerNode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.VerifiableCredential)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ControllerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ControllerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateEntityConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NftContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEntityConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransferEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ControllerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ControllerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecipiantDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityStatus", wireType)
			}
			m.EntityStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controllers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controllers = append(m.Controllers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = append(m.Context, &types.Context{})
			if err := m.Context[len(m.Context)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verifications", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Verifications = append(m.Verifications, &types.Verification{})
			if err := m.Verifications[len(m.Verifications)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, &types.Service{})
			if err := m.Services[len(m.Services)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccordedRight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccordedRight = append(m.AccordedRight, &types.AccordedRight{})
			if err := m.AccordedRight[len(m.AccordedRight)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedResource = append(m.LinkedResource, &types.LinkedResource{})
			if err := m.LinkedResource[len(m.LinkedResource)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedEntity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedEntity = append(m.LinkedEntity, &types.LinkedEntity{})
			if err := m.LinkedEntity[len(m.LinkedEntity)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deactivated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Deactivated = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartDate == nil {
				m.StartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDate == nil {
				m.EndDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.EndDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerNode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerNode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiableCredential", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiableCredential = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = append(m.Credentials, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityStatus", wireType)
			}
			m.EntityStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deactivated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Deactivated = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartDate == nil {
				m.StartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDate == nil {
				m.EndDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.EndDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerNode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerNode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerifiableCredential", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerifiableCredential = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecipiantDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecipiantDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
