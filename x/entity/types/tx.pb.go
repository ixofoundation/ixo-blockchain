// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ixo/entity/v1beta1/tx.proto

package types

import (
	context "context"
	encoding_json "encoding/json"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_x_authz "github.com/cosmos/cosmos-sdk/x/authz"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	github_com_ixofoundation_ixo_blockchain_x_iid_types "github.com/ixofoundation/ixo-blockchain/x/iid/types"
	types "github.com/ixofoundation/ixo-blockchain/x/iid/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateEntity struct {
	// An Entity Type as defined by the implementer
	EntityType string `protobuf:"bytes,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	// Status of the Entity as defined by the implementer and interpreted by
	// Client applications
	EntityStatus int32 `protobuf:"varint,2,opt,name=entity_status,json=entityStatus,proto3" json:"entity_status,omitempty"`
	// the list of controller DIDs
	Controller     []string                `protobuf:"bytes,3,rep,name=controller,proto3" json:"controller,omitempty"`
	Context        []*types.Context        `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty"`
	Verification   []*types.Verification   `protobuf:"bytes,5,rep,name=verification,proto3" json:"verification,omitempty"`
	Service        []*types.Service        `protobuf:"bytes,6,rep,name=service,proto3" json:"service,omitempty"`
	AccordedRight  []*types.AccordedRight  `protobuf:"bytes,7,rep,name=accorded_right,json=accordedRight,proto3" json:"accorded_right,omitempty"`
	LinkedResource []*types.LinkedResource `protobuf:"bytes,8,rep,name=linked_resource,json=linkedResource,proto3" json:"linked_resource,omitempty"`
	LinkedEntity   []*types.LinkedEntity   `protobuf:"bytes,9,rep,name=linked_entity,json=linkedEntity,proto3" json:"linked_entity,omitempty"`
	// Start Date of the Entity as defined by the implementer and interpreted by
	// Client applications
	StartDate *time.Time `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3,stdtime" json:"start_date,omitempty"`
	// End Date of the Entity as defined by the implementer and interpreted by
	// Client applications
	EndDate *time.Time `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3,stdtime" json:"end_date,omitempty"`
	// Address of the operator through which the Entity was created
	RelayerNode string `protobuf:"bytes,12,opt,name=relayer_node,json=relayerNode,proto3" json:"relayer_node,omitempty"`
	// Content ID or Hash of public Verifiable Credentials associated with the
	// subject
	Credentials  []string                                                        `protobuf:"bytes,13,rep,name=credentials,proto3" json:"credentials,omitempty"`
	OwnerDid     github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment `protobuf:"bytes,14,opt,name=owner_did,json=ownerDid,proto3,casttype=github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment" json:"owner_did,omitempty"`
	OwnerAddress string                                                          `protobuf:"bytes,15,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	Data         encoding_json.RawMessage                                        `protobuf:"bytes,16,opt,name=data,proto3,casttype=encoding/json.RawMessage" json:"data,omitempty"`
	AlsoKnownAs  string                                                          `protobuf:"bytes,17,opt,name=alsoKnownAs,proto3" json:"alsoKnownAs,omitempty"`
	LinkedClaim  []*types.LinkedClaim                                            `protobuf:"bytes,18,rep,name=linked_claim,json=linkedClaim,proto3" json:"linked_claim,omitempty"`
}

func (m *MsgCreateEntity) Reset()         { *m = MsgCreateEntity{} }
func (m *MsgCreateEntity) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntity) ProtoMessage()    {}
func (*MsgCreateEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{0}
}
func (m *MsgCreateEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntity.Merge(m, src)
}
func (m *MsgCreateEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntity proto.InternalMessageInfo

func (m *MsgCreateEntity) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *MsgCreateEntity) GetEntityStatus() int32 {
	if m != nil {
		return m.EntityStatus
	}
	return 0
}

func (m *MsgCreateEntity) GetController() []string {
	if m != nil {
		return m.Controller
	}
	return nil
}

func (m *MsgCreateEntity) GetContext() []*types.Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *MsgCreateEntity) GetVerification() []*types.Verification {
	if m != nil {
		return m.Verification
	}
	return nil
}

func (m *MsgCreateEntity) GetService() []*types.Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *MsgCreateEntity) GetAccordedRight() []*types.AccordedRight {
	if m != nil {
		return m.AccordedRight
	}
	return nil
}

func (m *MsgCreateEntity) GetLinkedResource() []*types.LinkedResource {
	if m != nil {
		return m.LinkedResource
	}
	return nil
}

func (m *MsgCreateEntity) GetLinkedEntity() []*types.LinkedEntity {
	if m != nil {
		return m.LinkedEntity
	}
	return nil
}

func (m *MsgCreateEntity) GetStartDate() *time.Time {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *MsgCreateEntity) GetEndDate() *time.Time {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *MsgCreateEntity) GetRelayerNode() string {
	if m != nil {
		return m.RelayerNode
	}
	return ""
}

func (m *MsgCreateEntity) GetCredentials() []string {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *MsgCreateEntity) GetOwnerDid() github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment {
	if m != nil {
		return m.OwnerDid
	}
	return ""
}

func (m *MsgCreateEntity) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgCreateEntity) GetData() encoding_json.RawMessage {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgCreateEntity) GetAlsoKnownAs() string {
	if m != nil {
		return m.AlsoKnownAs
	}
	return ""
}

func (m *MsgCreateEntity) GetLinkedClaim() []*types.LinkedClaim {
	if m != nil {
		return m.LinkedClaim
	}
	return nil
}

type MsgCreateEntityResponse struct {
	EntityId     string `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType   string `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	EntityStatus int32  `protobuf:"varint,3,opt,name=entity_status,json=entityStatus,proto3" json:"entity_status,omitempty"`
}

func (m *MsgCreateEntityResponse) Reset()         { *m = MsgCreateEntityResponse{} }
func (m *MsgCreateEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntityResponse) ProtoMessage()    {}
func (*MsgCreateEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{1}
}
func (m *MsgCreateEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntityResponse.Merge(m, src)
}
func (m *MsgCreateEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntityResponse proto.InternalMessageInfo

func (m *MsgCreateEntityResponse) GetEntityId() string {
	if m != nil {
		return m.EntityId
	}
	return ""
}

func (m *MsgCreateEntityResponse) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *MsgCreateEntityResponse) GetEntityStatus() int32 {
	if m != nil {
		return m.EntityStatus
	}
	return 0
}

// Updates the entity with all the fields, so if field empty will be updated
// with default go type, aka never null
type MsgUpdateEntity struct {
	// Id of entity to be updated
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status of the Entity as defined by the implementer and interpreted by
	// Client applications
	EntityStatus int32 `protobuf:"varint,2,opt,name=entity_status,json=entityStatus,proto3" json:"entity_status,omitempty"`
	// Start Date of the Entity as defined by the implementer and interpreted by
	// Client applications
	StartDate *time.Time `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3,stdtime" json:"start_date,omitempty"`
	// End Date of the Entity as defined by the implementer and interpreted by
	// Client applications
	EndDate *time.Time `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3,stdtime" json:"end_date,omitempty"`
	// Content ID or Hash of public Verifiable Credentials associated with the
	// subject
	Credentials       []string                                                        `protobuf:"bytes,5,rep,name=credentials,proto3" json:"credentials,omitempty"`
	ControllerDid     github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment `protobuf:"bytes,6,opt,name=controller_did,json=controllerDid,proto3,casttype=github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment" json:"controller_did,omitempty"`
	ControllerAddress string                                                          `protobuf:"bytes,7,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
}

func (m *MsgUpdateEntity) Reset()         { *m = MsgUpdateEntity{} }
func (m *MsgUpdateEntity) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntity) ProtoMessage()    {}
func (*MsgUpdateEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{2}
}
func (m *MsgUpdateEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntity.Merge(m, src)
}
func (m *MsgUpdateEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntity proto.InternalMessageInfo

func (m *MsgUpdateEntity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateEntity) GetEntityStatus() int32 {
	if m != nil {
		return m.EntityStatus
	}
	return 0
}

func (m *MsgUpdateEntity) GetStartDate() *time.Time {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *MsgUpdateEntity) GetEndDate() *time.Time {
	if m != nil {
		return m.EndDate
	}
	return nil
}

func (m *MsgUpdateEntity) GetCredentials() []string {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *MsgUpdateEntity) GetControllerDid() github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment {
	if m != nil {
		return m.ControllerDid
	}
	return ""
}

func (m *MsgUpdateEntity) GetControllerAddress() string {
	if m != nil {
		return m.ControllerAddress
	}
	return ""
}

type MsgUpdateEntityResponse struct {
}

func (m *MsgUpdateEntityResponse) Reset()         { *m = MsgUpdateEntityResponse{} }
func (m *MsgUpdateEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityResponse) ProtoMessage()    {}
func (*MsgUpdateEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{3}
}
func (m *MsgUpdateEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityResponse.Merge(m, src)
}
func (m *MsgUpdateEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityResponse proto.InternalMessageInfo

// Only relayer nodes can update entity field 'entityVerified'
type MsgUpdateEntityVerified struct {
	// Id of entity to be updated
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Whether entity is verified or not based on credentials
	EntityVerified     bool                                                            `protobuf:"varint,2,opt,name=entity_verified,json=entityVerified,proto3" json:"entity_verified,omitempty"`
	RelayerNodeDid     github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment `protobuf:"bytes,3,opt,name=relayer_node_did,json=relayerNodeDid,proto3,casttype=github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment" json:"relayer_node_did,omitempty"`
	RelayerNodeAddress string                                                          `protobuf:"bytes,4,opt,name=relayer_node_address,json=relayerNodeAddress,proto3" json:"relayer_node_address,omitempty"`
}

func (m *MsgUpdateEntityVerified) Reset()         { *m = MsgUpdateEntityVerified{} }
func (m *MsgUpdateEntityVerified) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityVerified) ProtoMessage()    {}
func (*MsgUpdateEntityVerified) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{4}
}
func (m *MsgUpdateEntityVerified) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityVerified) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityVerified.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityVerified) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityVerified.Merge(m, src)
}
func (m *MsgUpdateEntityVerified) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityVerified) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityVerified.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityVerified proto.InternalMessageInfo

func (m *MsgUpdateEntityVerified) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateEntityVerified) GetEntityVerified() bool {
	if m != nil {
		return m.EntityVerified
	}
	return false
}

func (m *MsgUpdateEntityVerified) GetRelayerNodeDid() github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment {
	if m != nil {
		return m.RelayerNodeDid
	}
	return ""
}

func (m *MsgUpdateEntityVerified) GetRelayerNodeAddress() string {
	if m != nil {
		return m.RelayerNodeAddress
	}
	return ""
}

type MsgUpdateEntityVerifiedResponse struct {
}

func (m *MsgUpdateEntityVerifiedResponse) Reset()         { *m = MsgUpdateEntityVerifiedResponse{} }
func (m *MsgUpdateEntityVerifiedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateEntityVerifiedResponse) ProtoMessage()    {}
func (*MsgUpdateEntityVerifiedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{5}
}
func (m *MsgUpdateEntityVerifiedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateEntityVerifiedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateEntityVerifiedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateEntityVerifiedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateEntityVerifiedResponse.Merge(m, src)
}
func (m *MsgUpdateEntityVerifiedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateEntityVerifiedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateEntityVerifiedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateEntityVerifiedResponse proto.InternalMessageInfo

type MsgTransferEntity struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The owner_did used to sign this transaction.
	OwnerDid github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment `protobuf:"bytes,2,opt,name=owner_did,json=ownerDid,proto3,casttype=github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment" json:"owner_did,omitempty"`
	// The owner_address used to sign this transaction.
	OwnerAddress string                                                          `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	RecipientDid github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment `protobuf:"bytes,4,opt,name=recipient_did,json=recipientDid,proto3,casttype=github.com/ixofoundation/ixo-blockchain/x/iid/types.DIDFragment" json:"recipient_did,omitempty"`
}

func (m *MsgTransferEntity) Reset()         { *m = MsgTransferEntity{} }
func (m *MsgTransferEntity) String() string { return proto.CompactTextString(m) }
func (*MsgTransferEntity) ProtoMessage()    {}
func (*MsgTransferEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{6}
}
func (m *MsgTransferEntity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferEntity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferEntity.Merge(m, src)
}
func (m *MsgTransferEntity) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferEntity.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferEntity proto.InternalMessageInfo

func (m *MsgTransferEntity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgTransferEntity) GetOwnerDid() github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment {
	if m != nil {
		return m.OwnerDid
	}
	return ""
}

func (m *MsgTransferEntity) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgTransferEntity) GetRecipientDid() github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment {
	if m != nil {
		return m.RecipientDid
	}
	return ""
}

type MsgTransferEntityResponse struct {
}

func (m *MsgTransferEntityResponse) Reset()         { *m = MsgTransferEntityResponse{} }
func (m *MsgTransferEntityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTransferEntityResponse) ProtoMessage()    {}
func (*MsgTransferEntityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{7}
}
func (m *MsgTransferEntityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTransferEntityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTransferEntityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTransferEntityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTransferEntityResponse.Merge(m, src)
}
func (m *MsgTransferEntityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTransferEntityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTransferEntityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTransferEntityResponse proto.InternalMessageInfo

// create a module account for an entity, account details will be added as a
// linkedEntity on entity iid doc where linkedEntity id is didfragment: did#name
type MsgCreateEntityAccount struct {
	// entity id (did) to create account for
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name of account
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The owner_address used to sign this transaction.
	OwnerAddress string `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (m *MsgCreateEntityAccount) Reset()         { *m = MsgCreateEntityAccount{} }
func (m *MsgCreateEntityAccount) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntityAccount) ProtoMessage()    {}
func (*MsgCreateEntityAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{8}
}
func (m *MsgCreateEntityAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntityAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntityAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntityAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntityAccount.Merge(m, src)
}
func (m *MsgCreateEntityAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntityAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntityAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntityAccount proto.InternalMessageInfo

func (m *MsgCreateEntityAccount) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgCreateEntityAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateEntityAccount) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

type MsgCreateEntityAccountResponse struct {
	// account address that was created for specific entity and account name
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (m *MsgCreateEntityAccountResponse) Reset()         { *m = MsgCreateEntityAccountResponse{} }
func (m *MsgCreateEntityAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEntityAccountResponse) ProtoMessage()    {}
func (*MsgCreateEntityAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{9}
}
func (m *MsgCreateEntityAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEntityAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEntityAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEntityAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEntityAccountResponse.Merge(m, src)
}
func (m *MsgCreateEntityAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEntityAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEntityAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEntityAccountResponse proto.InternalMessageInfo

func (m *MsgCreateEntityAccountResponse) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// Create a authz grant from entity account (as grantor) to recipient in msg as
// grantee for the specific authorization
type MsgGrantEntityAccountAuthz struct {
	// entity id (did) to create account for
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name of account
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// the grantee address that will be able to execute the authz authorization
	GranteeAddress string `protobuf:"bytes,3,opt,name=grantee_address,json=granteeAddress,proto3" json:"grantee_address,omitempty"`
	// grant to be Authorized in authz grant
	Grant github_com_cosmos_cosmos_sdk_x_authz.Grant `protobuf:"bytes,4,opt,name=grant,proto3,casttype=github.com/cosmos/cosmos-sdk/x/authz.Grant" json:"grant"`
	// the owner_address used to sign this transaction.
	OwnerAddress string `protobuf:"bytes,5,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (m *MsgGrantEntityAccountAuthz) Reset()         { *m = MsgGrantEntityAccountAuthz{} }
func (m *MsgGrantEntityAccountAuthz) String() string { return proto.CompactTextString(m) }
func (*MsgGrantEntityAccountAuthz) ProtoMessage()    {}
func (*MsgGrantEntityAccountAuthz) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{10}
}
func (m *MsgGrantEntityAccountAuthz) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantEntityAccountAuthz) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantEntityAccountAuthz.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantEntityAccountAuthz) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantEntityAccountAuthz.Merge(m, src)
}
func (m *MsgGrantEntityAccountAuthz) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantEntityAccountAuthz) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantEntityAccountAuthz.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantEntityAccountAuthz proto.InternalMessageInfo

func (m *MsgGrantEntityAccountAuthz) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgGrantEntityAccountAuthz) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgGrantEntityAccountAuthz) GetGranteeAddress() string {
	if m != nil {
		return m.GranteeAddress
	}
	return ""
}

func (m *MsgGrantEntityAccountAuthz) GetGrant() github_com_cosmos_cosmos_sdk_x_authz.Grant {
	if m != nil {
		return m.Grant
	}
	return github_com_cosmos_cosmos_sdk_x_authz.Grant{}
}

func (m *MsgGrantEntityAccountAuthz) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

type MsgGrantEntityAccountAuthzResponse struct {
}

func (m *MsgGrantEntityAccountAuthzResponse) Reset()         { *m = MsgGrantEntityAccountAuthzResponse{} }
func (m *MsgGrantEntityAccountAuthzResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGrantEntityAccountAuthzResponse) ProtoMessage()    {}
func (*MsgGrantEntityAccountAuthzResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_60859df4ac9fa053, []int{11}
}
func (m *MsgGrantEntityAccountAuthzResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantEntityAccountAuthzResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantEntityAccountAuthzResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantEntityAccountAuthzResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantEntityAccountAuthzResponse.Merge(m, src)
}
func (m *MsgGrantEntityAccountAuthzResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantEntityAccountAuthzResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantEntityAccountAuthzResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantEntityAccountAuthzResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateEntity)(nil), "ixo.entity.v1beta1.MsgCreateEntity")
	proto.RegisterType((*MsgCreateEntityResponse)(nil), "ixo.entity.v1beta1.MsgCreateEntityResponse")
	proto.RegisterType((*MsgUpdateEntity)(nil), "ixo.entity.v1beta1.MsgUpdateEntity")
	proto.RegisterType((*MsgUpdateEntityResponse)(nil), "ixo.entity.v1beta1.MsgUpdateEntityResponse")
	proto.RegisterType((*MsgUpdateEntityVerified)(nil), "ixo.entity.v1beta1.MsgUpdateEntityVerified")
	proto.RegisterType((*MsgUpdateEntityVerifiedResponse)(nil), "ixo.entity.v1beta1.MsgUpdateEntityVerifiedResponse")
	proto.RegisterType((*MsgTransferEntity)(nil), "ixo.entity.v1beta1.MsgTransferEntity")
	proto.RegisterType((*MsgTransferEntityResponse)(nil), "ixo.entity.v1beta1.MsgTransferEntityResponse")
	proto.RegisterType((*MsgCreateEntityAccount)(nil), "ixo.entity.v1beta1.MsgCreateEntityAccount")
	proto.RegisterType((*MsgCreateEntityAccountResponse)(nil), "ixo.entity.v1beta1.MsgCreateEntityAccountResponse")
	proto.RegisterType((*MsgGrantEntityAccountAuthz)(nil), "ixo.entity.v1beta1.MsgGrantEntityAccountAuthz")
	proto.RegisterType((*MsgGrantEntityAccountAuthzResponse)(nil), "ixo.entity.v1beta1.MsgGrantEntityAccountAuthzResponse")
}

func init() { proto.RegisterFile("ixo/entity/v1beta1/tx.proto", fileDescriptor_60859df4ac9fa053) }

var fileDescriptor_60859df4ac9fa053 = []byte{
	// 1166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xb6, 0xfe, 0x22, 0x7b, 0xf4, 0xe3, 0x64, 0x1b, 0x34, 0xb4, 0x9c, 0x4a, 0x8a, 0xd2, 0x22,
	0x46, 0x0a, 0x53, 0x89, 0x02, 0xe4, 0xd0, 0x1e, 0x02, 0xcb, 0x4e, 0xdb, 0xa0, 0x75, 0x51, 0x30,
	0x69, 0x0f, 0xbd, 0xc8, 0x6b, 0xee, 0x9a, 0xde, 0x98, 0xe2, 0x0a, 0xdc, 0x95, 0x2d, 0x17, 0xbd,
	0xe4, 0x0d, 0x72, 0xe8, 0x33, 0xf4, 0x59, 0x72, 0xcc, 0xa9, 0xe8, 0xc9, 0x2d, 0xec, 0x47, 0xe8,
	0xcd, 0xa7, 0x82, 0xbb, 0xa4, 0x44, 0x89, 0x22, 0x22, 0xa3, 0x46, 0x4f, 0xe2, 0xce, 0x7c, 0xf3,
	0xb3, 0x33, 0xdf, 0x0c, 0x29, 0x58, 0x67, 0x23, 0xde, 0xa6, 0x9e, 0x64, 0xf2, 0xb4, 0x7d, 0xfc,
	0x78, 0x9f, 0x4a, 0xfc, 0xb8, 0x2d, 0x47, 0xe6, 0xc0, 0xe7, 0x92, 0x23, 0xc4, 0x46, 0xdc, 0xd4,
	0x4a, 0x33, 0x54, 0xd6, 0x6e, 0x3b, 0xdc, 0xe1, 0x4a, 0xdd, 0x0e, 0x9e, 0x34, 0xb2, 0xb6, 0x16,
	0xb8, 0x61, 0x8c, 0x8c, 0x7d, 0x30, 0x46, 0x42, 0x95, 0x31, 0xab, 0x8a, 0xdc, 0xd7, 0xd6, 0x13,
	0x9a, 0xd3, 0x01, 0x15, 0xa1, 0xb2, 0x31, 0x27, 0xb1, 0x30, 0x95, 0x74, 0x80, 0xcd, 0x45, 0x9f,
	0x8f, 0x3d, 0x38, 0x9c, 0x3b, 0x2e, 0x6d, 0xab, 0xd3, 0xfe, 0xf0, 0xa0, 0x2d, 0x59, 0x9f, 0x0a,
	0x89, 0xfb, 0x03, 0x0d, 0x68, 0xfd, 0x51, 0x84, 0xd5, 0x5d, 0xe1, 0x6c, 0xfb, 0x14, 0x4b, 0xfa,
	0x5c, 0x79, 0x42, 0x0d, 0x28, 0x69, 0x9f, 0xbd, 0x20, 0x19, 0x23, 0xd3, 0xcc, 0x6c, 0xac, 0x58,
	0xa0, 0x45, 0xaf, 0x4e, 0x07, 0x14, 0xdd, 0x87, 0x4a, 0x08, 0x10, 0x12, 0xcb, 0xa1, 0x30, 0xb2,
	0xcd, 0xcc, 0x46, 0xc1, 0x2a, 0x6b, 0xe1, 0x4b, 0x25, 0x43, 0x75, 0x00, 0x9b, 0x7b, 0xd2, 0xe7,
	0xae, 0x4b, 0x7d, 0x23, 0xd7, 0xcc, 0x05, 0x4e, 0x26, 0x12, 0xd4, 0x81, 0x62, 0x70, 0xa2, 0x23,
	0x69, 0xe4, 0x9b, 0xb9, 0x8d, 0x52, 0xc7, 0x30, 0x83, 0x52, 0x07, 0x45, 0x0b, 0xaf, 0x62, 0x6e,
	0x6b, 0xbd, 0x15, 0x01, 0xd1, 0x16, 0x94, 0x8f, 0xa9, 0xcf, 0x0e, 0x98, 0x8d, 0x25, 0xe3, 0x9e,
	0x51, 0x50, 0x86, 0x9f, 0x24, 0x0c, 0x7f, 0x8a, 0x81, 0xac, 0x29, 0x93, 0x20, 0xac, 0xa0, 0xfe,
	0x31, 0xb3, 0xa9, 0x71, 0x23, 0x25, 0xec, 0x4b, 0xad, 0xb7, 0x22, 0x20, 0x7a, 0x0e, 0x55, 0x6c,
	0xdb, 0xdc, 0x27, 0x94, 0xf4, 0x7c, 0xe6, 0x1c, 0x4a, 0xa3, 0xa8, 0x4c, 0xeb, 0x09, 0xd3, 0xad,
	0x10, 0x66, 0x05, 0x28, 0xab, 0x82, 0xe3, 0x47, 0xf4, 0x0d, 0xac, 0xba, 0xcc, 0x3b, 0x0a, 0x9c,
	0x50, 0xc1, 0x87, 0xbe, 0x4d, 0x8d, 0x65, 0xe5, 0xa7, 0x91, 0xf0, 0xf3, 0x9d, 0xc2, 0x59, 0x21,
	0xcc, 0xaa, 0xba, 0x53, 0x67, 0xd4, 0x85, 0x4a, 0xe8, 0x49, 0x97, 0xdc, 0x58, 0x49, 0x29, 0x84,
	0xf6, 0xa3, 0xfb, 0x6a, 0x95, 0xdd, 0xd8, 0x09, 0x3d, 0x03, 0x10, 0x12, 0xfb, 0xb2, 0x47, 0xb0,
	0xa4, 0x06, 0x34, 0x33, 0x1b, 0xa5, 0x4e, 0xcd, 0xd4, 0x7c, 0x31, 0x23, 0xbe, 0x98, 0xaf, 0x22,
	0xbe, 0x74, 0xf3, 0x6f, 0xff, 0x6a, 0x64, 0xac, 0x15, 0x65, 0xb3, 0x83, 0x25, 0x45, 0x5f, 0xc2,
	0x32, 0xf5, 0x88, 0x36, 0x2f, 0x2d, 0x68, 0x5e, 0xa4, 0x1e, 0x51, 0xc6, 0xf7, 0xa0, 0xec, 0x53,
	0x17, 0x9f, 0x52, 0xbf, 0xe7, 0x71, 0x42, 0x8d, 0xb2, 0x22, 0x59, 0x29, 0x94, 0x7d, 0xcf, 0x09,
	0x45, 0x4d, 0x28, 0xd9, 0x3e, 0x25, 0xc1, 0x0d, 0xb1, 0x2b, 0x8c, 0x8a, 0x62, 0x50, 0x5c, 0x84,
	0xf6, 0x60, 0x85, 0x9f, 0x78, 0xd4, 0xef, 0x11, 0x46, 0x8c, 0x6a, 0xe0, 0xa1, 0xbb, 0x7d, 0x79,
	0xd6, 0x78, 0xe6, 0x30, 0x79, 0x38, 0xdc, 0x37, 0x6d, 0xde, 0x6f, 0xb3, 0x11, 0x3f, 0xe0, 0x43,
	0x8f, 0xa8, 0xe6, 0x07, 0xa7, 0xcd, 0x7d, 0x97, 0xdb, 0x47, 0xf6, 0x21, 0x66, 0x5e, 0x7b, 0xa4,
	0x26, 0x4f, 0x4f, 0xdc, 0xce, 0x8b, 0x9d, 0xaf, 0x7c, 0xec, 0xf4, 0xa9, 0x27, 0xad, 0x65, 0xe5,
	0x75, 0x87, 0x91, 0x80, 0xe9, 0x3a, 0x02, 0x26, 0xc4, 0xa7, 0x42, 0x18, 0xab, 0x2a, 0xcf, 0xb2,
	0x12, 0x6e, 0x69, 0x19, 0x7a, 0x04, 0x79, 0x82, 0x25, 0x36, 0x6e, 0x36, 0x33, 0x1b, 0xe5, 0xee,
	0xdd, 0xcb, 0xb3, 0x86, 0x41, 0x3d, 0x9b, 0x13, 0xe6, 0x39, 0xed, 0xd7, 0x82, 0x7b, 0xa6, 0x85,
	0x4f, 0x76, 0xa9, 0x10, 0xd8, 0xa1, 0x96, 0x42, 0x06, 0x57, 0xc3, 0xae, 0xe0, 0xdf, 0x7a, 0xfc,
	0xc4, 0xdb, 0x12, 0xc6, 0x2d, 0x7d, 0xf9, 0x98, 0x08, 0x3d, 0x83, 0xb0, 0x5b, 0x3d, 0xdb, 0xc5,
	0xac, 0x6f, 0x20, 0xd5, 0xe0, 0xbb, 0x29, 0x0d, 0xde, 0x0e, 0x30, 0x56, 0xc9, 0x9d, 0x1c, 0x5a,
	0xbf, 0xc2, 0x9d, 0x99, 0xb9, 0xb6, 0xa8, 0x18, 0x70, 0x4f, 0x50, 0xb4, 0x0e, 0x2b, 0xe1, 0xf8,
	0x32, 0x12, 0x4e, 0xf7, 0xb2, 0x16, 0xbc, 0x20, 0xb3, 0xc3, 0x9f, 0xfd, 0xf0, 0xf0, 0xe7, 0x92,
	0xc3, 0xdf, 0x7a, 0x93, 0x53, 0x6b, 0xe5, 0xc7, 0x01, 0x99, 0xac, 0x95, 0x2a, 0x64, 0xc7, 0xf1,
	0xb2, 0xba, 0xb6, 0x1f, 0xde, 0x22, 0xd3, 0x2c, 0xcd, 0xfd, 0x37, 0x96, 0xe6, 0xaf, 0xca, 0xd2,
	0x19, 0x0a, 0x16, 0x92, 0x14, 0x7c, 0x0d, 0xd5, 0xc9, 0x4e, 0x53, 0x3c, 0xbc, 0x71, 0x7d, 0x3c,
	0xac, 0x4c, 0x5c, 0x07, 0x64, 0xdc, 0x04, 0x14, 0x8b, 0x15, 0x31, 0xb2, 0xa8, 0x0a, 0x7a, 0x6b,
	0xa2, 0x09, 0x69, 0xd9, 0x5a, 0x53, 0x0c, 0x88, 0xb7, 0x20, 0x62, 0x40, 0xeb, 0x9f, 0x4c, 0x42,
	0xa7, 0x57, 0x26, 0x25, 0x89, 0x36, 0x3d, 0x80, 0xd5, 0xb0, 0x4d, 0xc7, 0x21, 0x44, 0x35, 0x6a,
	0xd9, 0xaa, 0xd2, 0x69, 0xc3, 0x3e, 0xdc, 0x8c, 0x8f, 0xb4, 0x2a, 0x46, 0xee, 0xfa, 0x8a, 0x51,
	0x8d, 0xed, 0x86, 0xa0, 0x1a, 0x8f, 0xe0, 0xf6, 0x54, 0xb8, 0xa8, 0x1e, 0x79, 0x95, 0x39, 0x8a,
	0xa1, 0xa3, 0x82, 0xdc, 0x83, 0x46, 0xca, 0xa5, 0xc7, 0x85, 0xf9, 0x2d, 0x0b, 0xb7, 0x76, 0x85,
	0xf3, 0xca, 0xc7, 0x9e, 0x38, 0xa0, 0x7e, 0x0a, 0x73, 0xa7, 0xf6, 0x4e, 0xf6, 0x7f, 0xd9, 0x3b,
	0xb9, 0x39, 0x7b, 0xe7, 0x10, 0x2a, 0x3e, 0xb5, 0xd9, 0x80, 0x51, 0x4f, 0xaa, 0x54, 0xf2, 0xd7,
	0x97, 0x4a, 0x79, 0xec, 0x79, 0x87, 0x91, 0xd6, 0x3a, 0xac, 0x25, 0xaa, 0x32, 0xae, 0x19, 0x86,
	0x8f, 0x67, 0x36, 0x4d, 0xf0, 0x16, 0x1c, 0x7a, 0x32, 0x51, 0x37, 0x04, 0x79, 0x0f, 0xf7, 0xa3,
	0xa5, 0xa2, 0x9e, 0x17, 0xba, 0x69, 0xeb, 0x0b, 0xa8, 0xcf, 0x0f, 0x31, 0xde, 0x69, 0x06, 0x14,
	0xb1, 0x16, 0x85, 0xf1, 0xa2, 0x63, 0xc0, 0xf5, 0xda, 0xae, 0x70, 0xbe, 0xf6, 0xb1, 0x27, 0xa7,
	0x6c, 0xb7, 0x86, 0xf2, 0xf0, 0x97, 0x85, 0x72, 0x7c, 0x00, 0xab, 0x4e, 0x60, 0x4e, 0xe9, 0x4c,
	0x96, 0xd5, 0x50, 0x1c, 0x75, 0xc4, 0x86, 0x82, 0x92, 0x84, 0x9b, 0x66, 0xcd, 0x4c, 0x7e, 0x3c,
	0x9a, 0x2a, 0x91, 0x6e, 0xe7, 0xdd, 0x59, 0x63, 0xe9, 0xf2, 0xac, 0xf1, 0x30, 0xd6, 0x28, 0xfd,
	0xe5, 0x16, 0xfe, 0x6c, 0x0a, 0x72, 0xd4, 0x1e, 0xb5, 0x71, 0x90, 0xa4, 0xb6, 0xb1, 0xb4, 0xef,
	0x64, 0xc5, 0x0a, 0x73, 0x2a, 0xf6, 0x29, 0xb4, 0xd2, 0x2f, 0x1d, 0x55, 0xad, 0xf3, 0x7b, 0x01,
	0x72, 0xbb, 0xc2, 0x41, 0x7b, 0x50, 0x9e, 0xfa, 0x02, 0xbc, 0x3f, 0x2f, 0xf1, 0x99, 0x0e, 0xd4,
	0x3e, 0x5f, 0x00, 0x34, 0xee, 0xcf, 0x1e, 0x94, 0xa7, 0x5e, 0x06, 0x69, 0x11, 0xe2, 0xa0, 0xd4,
	0x08, 0xf3, 0x76, 0x1a, 0x1a, 0xc1, 0xed, 0xb9, 0xfb, 0x6c, 0x11, 0x27, 0x11, 0xb8, 0xf6, 0xe4,
	0x0a, 0xe0, 0x71, 0xe4, 0x03, 0xa8, 0xce, 0x2c, 0x8c, 0xcf, 0x52, 0xdc, 0x4c, 0xc3, 0x6a, 0x9b,
	0x0b, 0xc1, 0xc6, 0x71, 0x86, 0xf0, 0xd1, 0xbc, 0x29, 0x7b, 0xb8, 0x40, 0x1f, 0x42, 0x6c, 0xad,
	0xb3, 0x38, 0x76, 0x1c, 0xf6, 0x4d, 0x06, 0xee, 0xa4, 0x4d, 0x8f, 0x99, 0xe2, 0x2f, 0x05, 0x5f,
	0x7b, 0x7a, 0x35, 0x7c, 0x94, 0x43, 0xf7, 0x87, 0x77, 0xe7, 0xf5, 0xcc, 0xfb, 0xf3, 0x7a, 0xe6,
	0xef, 0xf3, 0x7a, 0xe6, 0xed, 0x45, 0x7d, 0xe9, 0xfd, 0x45, 0x7d, 0xe9, 0xcf, 0x8b, 0xfa, 0xd2,
	0xcf, 0x4f, 0x17, 0xdf, 0x74, 0xe1, 0x1f, 0x25, 0xb5, 0xec, 0xf6, 0x6f, 0xa8, 0xb7, 0xff, 0x93,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x53, 0x7a, 0x4e, 0x9a, 0xfd, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateEntity defines a method for creating a entity.
	CreateEntity(ctx context.Context, in *MsgCreateEntity, opts ...grpc.CallOption) (*MsgCreateEntityResponse, error)
	// UpdateEntity defines a method for updating a entity
	UpdateEntity(ctx context.Context, in *MsgUpdateEntity, opts ...grpc.CallOption) (*MsgUpdateEntityResponse, error)
	// UpdateEntityVerified defines a method for updating if an entity is verified
	UpdateEntityVerified(ctx context.Context, in *MsgUpdateEntityVerified, opts ...grpc.CallOption) (*MsgUpdateEntityVerifiedResponse, error)
	// Transfers an entity and its nft to the recipient
	TransferEntity(ctx context.Context, in *MsgTransferEntity, opts ...grpc.CallOption) (*MsgTransferEntityResponse, error)
	// Create a module account for an entity,
	CreateEntityAccount(ctx context.Context, in *MsgCreateEntityAccount, opts ...grpc.CallOption) (*MsgCreateEntityAccountResponse, error)
	// Create a authz grant from entity account
	GrantEntityAccountAuthz(ctx context.Context, in *MsgGrantEntityAccountAuthz, opts ...grpc.CallOption) (*MsgGrantEntityAccountAuthzResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateEntity(ctx context.Context, in *MsgCreateEntity, opts ...grpc.CallOption) (*MsgCreateEntityResponse, error) {
	out := new(MsgCreateEntityResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/CreateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEntity(ctx context.Context, in *MsgUpdateEntity, opts ...grpc.CallOption) (*MsgUpdateEntityResponse, error) {
	out := new(MsgUpdateEntityResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/UpdateEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateEntityVerified(ctx context.Context, in *MsgUpdateEntityVerified, opts ...grpc.CallOption) (*MsgUpdateEntityVerifiedResponse, error) {
	out := new(MsgUpdateEntityVerifiedResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/UpdateEntityVerified", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TransferEntity(ctx context.Context, in *MsgTransferEntity, opts ...grpc.CallOption) (*MsgTransferEntityResponse, error) {
	out := new(MsgTransferEntityResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/TransferEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEntityAccount(ctx context.Context, in *MsgCreateEntityAccount, opts ...grpc.CallOption) (*MsgCreateEntityAccountResponse, error) {
	out := new(MsgCreateEntityAccountResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/CreateEntityAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GrantEntityAccountAuthz(ctx context.Context, in *MsgGrantEntityAccountAuthz, opts ...grpc.CallOption) (*MsgGrantEntityAccountAuthzResponse, error) {
	out := new(MsgGrantEntityAccountAuthzResponse)
	err := c.cc.Invoke(ctx, "/ixo.entity.v1beta1.Msg/GrantEntityAccountAuthz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateEntity defines a method for creating a entity.
	CreateEntity(context.Context, *MsgCreateEntity) (*MsgCreateEntityResponse, error)
	// UpdateEntity defines a method for updating a entity
	UpdateEntity(context.Context, *MsgUpdateEntity) (*MsgUpdateEntityResponse, error)
	// UpdateEntityVerified defines a method for updating if an entity is verified
	UpdateEntityVerified(context.Context, *MsgUpdateEntityVerified) (*MsgUpdateEntityVerifiedResponse, error)
	// Transfers an entity and its nft to the recipient
	TransferEntity(context.Context, *MsgTransferEntity) (*MsgTransferEntityResponse, error)
	// Create a module account for an entity,
	CreateEntityAccount(context.Context, *MsgCreateEntityAccount) (*MsgCreateEntityAccountResponse, error)
	// Create a authz grant from entity account
	GrantEntityAccountAuthz(context.Context, *MsgGrantEntityAccountAuthz) (*MsgGrantEntityAccountAuthzResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateEntity(ctx context.Context, req *MsgCreateEntity) (*MsgCreateEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntity not implemented")
}
func (*UnimplementedMsgServer) UpdateEntity(ctx context.Context, req *MsgUpdateEntity) (*MsgUpdateEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntity not implemented")
}
func (*UnimplementedMsgServer) UpdateEntityVerified(ctx context.Context, req *MsgUpdateEntityVerified) (*MsgUpdateEntityVerifiedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntityVerified not implemented")
}
func (*UnimplementedMsgServer) TransferEntity(ctx context.Context, req *MsgTransferEntity) (*MsgTransferEntityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferEntity not implemented")
}
func (*UnimplementedMsgServer) CreateEntityAccount(ctx context.Context, req *MsgCreateEntityAccount) (*MsgCreateEntityAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntityAccount not implemented")
}
func (*UnimplementedMsgServer) GrantEntityAccountAuthz(ctx context.Context, req *MsgGrantEntityAccountAuthz) (*MsgGrantEntityAccountAuthzResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantEntityAccountAuthz not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/CreateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEntity(ctx, req.(*MsgCreateEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/UpdateEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEntity(ctx, req.(*MsgUpdateEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateEntityVerified_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateEntityVerified)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateEntityVerified(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/UpdateEntityVerified",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateEntityVerified(ctx, req.(*MsgUpdateEntityVerified))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TransferEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTransferEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TransferEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/TransferEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TransferEntity(ctx, req.(*MsgTransferEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEntityAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEntityAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEntityAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/CreateEntityAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEntityAccount(ctx, req.(*MsgCreateEntityAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GrantEntityAccountAuthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGrantEntityAccountAuthz)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GrantEntityAccountAuthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.entity.v1beta1.Msg/GrantEntityAccountAuthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GrantEntityAccountAuthz(ctx, req.(*MsgGrantEntityAccountAuthz))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ixo.entity.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEntity",
			Handler:    _Msg_CreateEntity_Handler,
		},
		{
			MethodName: "UpdateEntity",
			Handler:    _Msg_UpdateEntity_Handler,
		},
		{
			MethodName: "UpdateEntityVerified",
			Handler:    _Msg_UpdateEntityVerified_Handler,
		},
		{
			MethodName: "TransferEntity",
			Handler:    _Msg_TransferEntity_Handler,
		},
		{
			MethodName: "CreateEntityAccount",
			Handler:    _Msg_CreateEntityAccount_Handler,
		},
		{
			MethodName: "GrantEntityAccountAuthz",
			Handler:    _Msg_GrantEntityAccountAuthz_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ixo/entity/v1beta1/tx.proto",
}

func (m *MsgCreateEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LinkedClaim) > 0 {
		for iNdEx := len(m.LinkedClaim) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedClaim[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
	}
	if len(m.AlsoKnownAs) > 0 {
		i -= len(m.AlsoKnownAs)
		copy(dAtA[i:], m.AlsoKnownAs)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AlsoKnownAs)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.OwnerDid) > 0 {
		i -= len(m.OwnerDid)
		copy(dAtA[i:], m.OwnerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerDid)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Credentials) > 0 {
		for iNdEx := len(m.Credentials) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Credentials[iNdEx])
			copy(dAtA[i:], m.Credentials[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Credentials[iNdEx])))
			i--
			dAtA[i] = 0x6a
		}
	}
	if len(m.RelayerNode) > 0 {
		i -= len(m.RelayerNode)
		copy(dAtA[i:], m.RelayerNode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayerNode)))
		i--
		dAtA[i] = 0x62
	}
	if m.EndDate != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.EndDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintTx(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x5a
	}
	if m.StartDate != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintTx(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x52
	}
	if len(m.LinkedEntity) > 0 {
		for iNdEx := len(m.LinkedEntity) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedEntity[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.LinkedResource) > 0 {
		for iNdEx := len(m.LinkedResource) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LinkedResource[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.AccordedRight) > 0 {
		for iNdEx := len(m.AccordedRight) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AccordedRight[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Service) > 0 {
		for iNdEx := len(m.Service) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Service[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Verification) > 0 {
		for iNdEx := len(m.Verification) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Verification[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Context) > 0 {
		for iNdEx := len(m.Context) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Context[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Controller) > 0 {
		for iNdEx := len(m.Controller) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Controller[iNdEx])
			copy(dAtA[i:], m.Controller[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Controller[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.EntityStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntityStatus))
		i--
		dAtA[i] = 0x10
	}
	if len(m.EntityType) > 0 {
		i -= len(m.EntityType)
		copy(dAtA[i:], m.EntityType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EntityStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntityStatus))
		i--
		dAtA[i] = 0x18
	}
	if len(m.EntityType) > 0 {
		i -= len(m.EntityType)
		copy(dAtA[i:], m.EntityType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityType)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.EntityId) > 0 {
		i -= len(m.EntityId)
		copy(dAtA[i:], m.EntityId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EntityId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ControllerAddress) > 0 {
		i -= len(m.ControllerAddress)
		copy(dAtA[i:], m.ControllerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerAddress)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ControllerDid) > 0 {
		i -= len(m.ControllerDid)
		copy(dAtA[i:], m.ControllerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ControllerDid)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Credentials) > 0 {
		for iNdEx := len(m.Credentials) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Credentials[iNdEx])
			copy(dAtA[i:], m.Credentials[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Credentials[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.EndDate != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.EndDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintTx(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x22
	}
	if m.StartDate != nil {
		n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.StartDate, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate):])
		if err4 != nil {
			return 0, err4
		}
		i -= n4
		i = encodeVarintTx(dAtA, i, uint64(n4))
		i--
		dAtA[i] = 0x1a
	}
	if m.EntityStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EntityStatus))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityVerified) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityVerified) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityVerified) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RelayerNodeAddress) > 0 {
		i -= len(m.RelayerNodeAddress)
		copy(dAtA[i:], m.RelayerNodeAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayerNodeAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RelayerNodeDid) > 0 {
		i -= len(m.RelayerNodeDid)
		copy(dAtA[i:], m.RelayerNodeDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RelayerNodeDid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.EntityVerified {
		i--
		if m.EntityVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateEntityVerifiedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateEntityVerifiedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateEntityVerifiedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTransferEntity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferEntity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferEntity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RecipientDid) > 0 {
		i -= len(m.RecipientDid)
		copy(dAtA[i:], m.RecipientDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RecipientDid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OwnerDid) > 0 {
		i -= len(m.OwnerDid)
		copy(dAtA[i:], m.OwnerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTransferEntityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTransferEntityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTransferEntityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateEntityAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntityAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntityAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEntityAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEntityAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEntityAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Account) > 0 {
		i -= len(m.Account)
		copy(dAtA[i:], m.Account)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Account)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGrantEntityAccountAuthz) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantEntityAccountAuthz) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantEntityAccountAuthz) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Grant.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.GranteeAddress) > 0 {
		i -= len(m.GranteeAddress)
		copy(dAtA[i:], m.GranteeAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.GranteeAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGrantEntityAccountAuthzResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantEntityAccountAuthzResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantEntityAccountAuthzResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityStatus != 0 {
		n += 1 + sovTx(uint64(m.EntityStatus))
	}
	if len(m.Controller) > 0 {
		for _, s := range m.Controller {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Context) > 0 {
		for _, e := range m.Context {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Verification) > 0 {
		for _, e := range m.Verification {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Service) > 0 {
		for _, e := range m.Service {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.AccordedRight) > 0 {
		for _, e := range m.AccordedRight {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.LinkedResource) > 0 {
		for _, e := range m.LinkedResource {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.LinkedEntity) > 0 {
		for _, e := range m.LinkedEntity {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.StartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate)
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayerNode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Credentials) > 0 {
		for _, s := range m.Credentials {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.OwnerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.AlsoKnownAs)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if len(m.LinkedClaim) > 0 {
		for _, e := range m.LinkedClaim {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EntityType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityStatus != 0 {
		n += 1 + sovTx(uint64(m.EntityStatus))
	}
	return n
}

func (m *MsgUpdateEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityStatus != 0 {
		n += 1 + sovTx(uint64(m.EntityStatus))
	}
	if m.StartDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.StartDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EndDate != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.EndDate)
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Credentials) > 0 {
		for _, s := range m.Credentials {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.ControllerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ControllerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateEntityVerified) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EntityVerified {
		n += 2
	}
	l = len(m.RelayerNodeDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RelayerNodeAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateEntityVerifiedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTransferEntity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RecipientDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTransferEntityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateEntityAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEntityAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Account)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGrantEntityAccountAuthz) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.GranteeAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Grant.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGrantEntityAccountAuthzResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityStatus", wireType)
			}
			m.EntityStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Controller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Controller = append(m.Controller, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Context", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Context = append(m.Context, &types.Context{})
			if err := m.Context[len(m.Context)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verification", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Verification = append(m.Verification, &types.Verification{})
			if err := m.Verification[len(m.Verification)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = append(m.Service, &types.Service{})
			if err := m.Service[len(m.Service)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccordedRight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccordedRight = append(m.AccordedRight, &types.AccordedRight{})
			if err := m.AccordedRight[len(m.AccordedRight)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedResource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedResource = append(m.LinkedResource, &types.LinkedResource{})
			if err := m.LinkedResource[len(m.LinkedResource)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedEntity", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedEntity = append(m.LinkedEntity, &types.LinkedEntity{})
			if err := m.LinkedEntity[len(m.LinkedEntity)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartDate == nil {
				m.StartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDate == nil {
				m.EndDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.EndDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerNode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerNode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = append(m.Credentials, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerDid = github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlsoKnownAs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlsoKnownAs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkedClaim", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinkedClaim = append(m.LinkedClaim, &types.LinkedClaim{})
			if err := m.LinkedClaim[len(m.LinkedClaim)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityStatus", wireType)
			}
			m.EntityStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityStatus", wireType)
			}
			m.EntityStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EntityStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartDate == nil {
				m.StartDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.StartDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndDate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EndDate == nil {
				m.EndDate = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.EndDate, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = append(m.Credentials, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerDid = github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControllerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityVerified) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityVerified: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityVerified: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EntityVerified = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerNodeDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerNodeDid = github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelayerNodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelayerNodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateEntityVerifiedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateEntityVerifiedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateEntityVerifiedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferEntity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferEntity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferEntity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerDid = github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecipientDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecipientDid = github_com_ixofoundation_ixo_blockchain_x_iid_types.DIDFragment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTransferEntityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTransferEntityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTransferEntityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEntityAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntityAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntityAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEntityAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEntityAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEntityAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Account = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantEntityAccountAuthz) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantEntityAccountAuthz: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantEntityAccountAuthz: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GranteeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GranteeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Grant", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Grant.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantEntityAccountAuthzResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantEntityAccountAuthzResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantEntityAccountAuthzResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
