// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: ixo/payments/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types1 "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgSetPaymentContractAuthorisation defines a message for authorising or deauthorising a payment contract.
type MsgSetPaymentContractAuthorisation struct {
	PaymentContractId string `protobuf:"bytes,1,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	PayerDid          string `protobuf:"bytes,2,opt,name=payer_did,json=payerDid,proto3" json:"payer_did,omitempty" yaml:"payer_did"`
	Authorised        bool   `protobuf:"varint,3,opt,name=authorised,proto3" json:"authorised,omitempty" yaml:"authorised"`
	PayerAddress      string `protobuf:"bytes,4,opt,name=payer_address,json=payerAddress,proto3" json:"payer_address" yaml:"payer_address"`
}

func (m *MsgSetPaymentContractAuthorisation) Reset()      { *m = MsgSetPaymentContractAuthorisation{} }
func (*MsgSetPaymentContractAuthorisation) ProtoMessage() {}
func (*MsgSetPaymentContractAuthorisation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{0}
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPaymentContractAuthorisation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPaymentContractAuthorisation.Merge(m, src)
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPaymentContractAuthorisation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPaymentContractAuthorisation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPaymentContractAuthorisation proto.InternalMessageInfo

func (m *MsgSetPaymentContractAuthorisation) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgSetPaymentContractAuthorisation) GetPayerDid() string {
	if m != nil {
		return m.PayerDid
	}
	return ""
}

func (m *MsgSetPaymentContractAuthorisation) GetAuthorised() bool {
	if m != nil {
		return m.Authorised
	}
	return false
}

func (m *MsgSetPaymentContractAuthorisation) GetPayerAddress() string {
	if m != nil {
		return m.PayerAddress
	}
	return ""
}

// MsgSetPaymentContractAuthorisationResponse defines the Msg/SetPaymentContractAuthorisation response type.
type MsgSetPaymentContractAuthorisationResponse struct {
}

func (m *MsgSetPaymentContractAuthorisationResponse) Reset() {
	*m = MsgSetPaymentContractAuthorisationResponse{}
}
func (m *MsgSetPaymentContractAuthorisationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgSetPaymentContractAuthorisationResponse) ProtoMessage() {}
func (*MsgSetPaymentContractAuthorisationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{1}
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.Merge(m, src)
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse proto.InternalMessageInfo

// MsgCreatePaymentTemplate defines a message for creating a payment template.
type MsgCreatePaymentTemplate struct {
	CreatorDid      string          `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty" yaml:"creator_did"`
	PaymentTemplate PaymentTemplate `protobuf:"bytes,2,opt,name=payment_template,json=paymentTemplate,proto3" json:"payment_template" yaml:"payment_template"`
	CreatorAddress  string          `protobuf:"bytes,3,opt,name=creator_address,json=creatorAddress,proto3" json:"creator_address" yaml:"creator_address"`
}

func (m *MsgCreatePaymentTemplate) Reset()      { *m = MsgCreatePaymentTemplate{} }
func (*MsgCreatePaymentTemplate) ProtoMessage() {}
func (*MsgCreatePaymentTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{2}
}
func (m *MsgCreatePaymentTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentTemplate.Merge(m, src)
}
func (m *MsgCreatePaymentTemplate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentTemplate proto.InternalMessageInfo

func (m *MsgCreatePaymentTemplate) GetCreatorDid() string {
	if m != nil {
		return m.CreatorDid
	}
	return ""
}

func (m *MsgCreatePaymentTemplate) GetPaymentTemplate() PaymentTemplate {
	if m != nil {
		return m.PaymentTemplate
	}
	return PaymentTemplate{}
}

func (m *MsgCreatePaymentTemplate) GetCreatorAddress() string {
	if m != nil {
		return m.CreatorAddress
	}
	return ""
}

// MsgCreatePaymentTemplateResponse defines the Msg/CreatePaymentTemplate response type.
type MsgCreatePaymentTemplateResponse struct {
}

func (m *MsgCreatePaymentTemplateResponse) Reset()         { *m = MsgCreatePaymentTemplateResponse{} }
func (m *MsgCreatePaymentTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePaymentTemplateResponse) ProtoMessage()    {}
func (*MsgCreatePaymentTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{3}
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentTemplateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentTemplateResponse.Merge(m, src)
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentTemplateResponse proto.InternalMessageInfo

// MsgCreatePaymentContract defines a message for creating a payment contract.
type MsgCreatePaymentContract struct {
	CreatorDid        string                                  `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty" yaml:"creator_did"`
	PaymentTemplateId string                                  `protobuf:"bytes,2,opt,name=payment_template_id,json=paymentTemplateId,proto3" json:"payment_template_id,omitempty" yaml:"payment_template_id"`
	PaymentContractId string                                  `protobuf:"bytes,3,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	Payer             string                                  `protobuf:"bytes,4,opt,name=payer,proto3" json:"payer,omitempty" yaml:"payer"`
	Recipients        []DistributionShare                     `protobuf:"bytes,5,rep,name=recipients,proto3" json:"recipients" yaml:"recipients"`
	CanDeauthorise    bool                                    `protobuf:"varint,6,opt,name=can_deauthorise,json=canDeauthorise,proto3" json:"can_deauthorise,omitempty" yaml:"can_deauthorise"`
	DiscountId        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,7,opt,name=discount_id,json=discountId,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"discount_id" yaml:"discount_id"`
	CreatorAddress    string                                  `protobuf:"bytes,8,opt,name=creator_address,json=creatorAddress,proto3" json:"creator_address" yaml:"creator_address"`
}

func (m *MsgCreatePaymentContract) Reset()      { *m = MsgCreatePaymentContract{} }
func (*MsgCreatePaymentContract) ProtoMessage() {}
func (*MsgCreatePaymentContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{4}
}
func (m *MsgCreatePaymentContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentContract.Merge(m, src)
}
func (m *MsgCreatePaymentContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentContract proto.InternalMessageInfo

func (m *MsgCreatePaymentContract) GetCreatorDid() string {
	if m != nil {
		return m.CreatorDid
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPaymentTemplateId() string {
	if m != nil {
		return m.PaymentTemplateId
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetRecipients() []DistributionShare {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *MsgCreatePaymentContract) GetCanDeauthorise() bool {
	if m != nil {
		return m.CanDeauthorise
	}
	return false
}

func (m *MsgCreatePaymentContract) GetCreatorAddress() string {
	if m != nil {
		return m.CreatorAddress
	}
	return ""
}

// MsgCreatePaymentContractResponse defines the Msg/CreatePaymentContract response type.
type MsgCreatePaymentContractResponse struct {
}

func (m *MsgCreatePaymentContractResponse) Reset()         { *m = MsgCreatePaymentContractResponse{} }
func (m *MsgCreatePaymentContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePaymentContractResponse) ProtoMessage()    {}
func (*MsgCreatePaymentContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{5}
}
func (m *MsgCreatePaymentContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentContractResponse.Merge(m, src)
}
func (m *MsgCreatePaymentContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentContractResponse proto.InternalMessageInfo

// MsgCreateSubscription defines a message for creating a subscription.
type MsgCreateSubscription struct {
	CreatorDid        string                                  `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty" yaml:"creator_did"`
	SubscriptionId    string                                  `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" yaml:"subscription_id"`
	PaymentContractId string                                  `protobuf:"bytes,3,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	MaxPeriods        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,4,opt,name=max_periods,json=maxPeriods,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"max_periods" yaml:"max_periods"`
	Period            *types.Any                              `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty" yaml:"period"`
	CreatorAddress    string                                  `protobuf:"bytes,6,opt,name=creator_address,json=creatorAddress,proto3" json:"creator_address" yaml:"creator_address"`
}

func (m *MsgCreateSubscription) Reset()      { *m = MsgCreateSubscription{} }
func (*MsgCreateSubscription) ProtoMessage() {}
func (*MsgCreateSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{6}
}
func (m *MsgCreateSubscription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubscription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubscription.Merge(m, src)
}
func (m *MsgCreateSubscription) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubscription proto.InternalMessageInfo

// MsgCreateSubscriptionResponse defines the Msg/CreateSubscription response type.
type MsgCreateSubscriptionResponse struct {
}

func (m *MsgCreateSubscriptionResponse) Reset()         { *m = MsgCreateSubscriptionResponse{} }
func (m *MsgCreateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubscriptionResponse) ProtoMessage()    {}
func (*MsgCreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{7}
}
func (m *MsgCreateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubscriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubscriptionResponse.Merge(m, src)
}
func (m *MsgCreateSubscriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubscriptionResponse proto.InternalMessageInfo

// MsgGrantDiscount defines a message for granting a discount to a payer on a specific payment contract.
type MsgGrantDiscount struct {
	SenderDid         string                                  `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty" yaml:"sender_did"`
	PaymentContractId string                                  `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	DiscountId        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,3,opt,name=discount_id,json=discountId,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"discount_id" yaml:"discount_id"`
	Recipient         string                                  `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty" yaml:"recipient"`
	SenderAddress     string                                  `protobuf:"bytes,5,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address" yaml:"sender_address"`
}

func (m *MsgGrantDiscount) Reset()      { *m = MsgGrantDiscount{} }
func (*MsgGrantDiscount) ProtoMessage() {}
func (*MsgGrantDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{8}
}
func (m *MsgGrantDiscount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantDiscount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantDiscount.Merge(m, src)
}
func (m *MsgGrantDiscount) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantDiscount proto.InternalMessageInfo

func (m *MsgGrantDiscount) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgGrantDiscount) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgGrantDiscount) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgGrantDiscount) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

// MsgGrantDiscountResponse defines the Msg/GrantDiscount response type.
type MsgGrantDiscountResponse struct {
}

func (m *MsgGrantDiscountResponse) Reset()         { *m = MsgGrantDiscountResponse{} }
func (m *MsgGrantDiscountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGrantDiscountResponse) ProtoMessage()    {}
func (*MsgGrantDiscountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{9}
}
func (m *MsgGrantDiscountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantDiscountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantDiscountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantDiscountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantDiscountResponse.Merge(m, src)
}
func (m *MsgGrantDiscountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantDiscountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantDiscountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantDiscountResponse proto.InternalMessageInfo

// MsgRevokeDiscount defines a message for revoking a discount previously granted to a payer.
type MsgRevokeDiscount struct {
	SenderDid         string `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty" yaml:"sender_did"`
	PaymentContractId string `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	Holder            string `protobuf:"bytes,3,opt,name=holder,proto3" json:"holder,omitempty" yaml:"holder"`
	SenderAddress     string `protobuf:"bytes,4,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address" yaml:"sender_address"`
}

func (m *MsgRevokeDiscount) Reset()      { *m = MsgRevokeDiscount{} }
func (*MsgRevokeDiscount) ProtoMessage() {}
func (*MsgRevokeDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{10}
}
func (m *MsgRevokeDiscount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeDiscount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeDiscount.Merge(m, src)
}
func (m *MsgRevokeDiscount) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeDiscount proto.InternalMessageInfo

func (m *MsgRevokeDiscount) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgRevokeDiscount) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgRevokeDiscount) GetHolder() string {
	if m != nil {
		return m.Holder
	}
	return ""
}

func (m *MsgRevokeDiscount) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

// MsgRevokeDiscountResponse defines the Msg/RevokeDiscount response type.
type MsgRevokeDiscountResponse struct {
}

func (m *MsgRevokeDiscountResponse) Reset()         { *m = MsgRevokeDiscountResponse{} }
func (m *MsgRevokeDiscountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeDiscountResponse) ProtoMessage()    {}
func (*MsgRevokeDiscountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{11}
}
func (m *MsgRevokeDiscountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeDiscountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeDiscountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeDiscountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeDiscountResponse.Merge(m, src)
}
func (m *MsgRevokeDiscountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeDiscountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeDiscountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeDiscountResponse proto.InternalMessageInfo

// MsgEffectPayment defines a message for putting a specific payment contract into effect.
type MsgEffectPayment struct {
	SenderDid            string                                   `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty" yaml:"sender_did"`
	PaymentContractId    string                                   `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty" yaml:"payment_contract_id"`
	PartialPaymentAmount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,6,rep,name=partial_payment_amount,json=partialPaymentAmount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"partial_payment_amount" yaml:"partial_payment_amount"`
	SenderAddress        string                                   `protobuf:"bytes,4,opt,name=sender_address,json=senderAddress,proto3" json:"sender_address" yaml:"sender_address"`
}

func (m *MsgEffectPayment) Reset()      { *m = MsgEffectPayment{} }
func (*MsgEffectPayment) ProtoMessage() {}
func (*MsgEffectPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{12}
}
func (m *MsgEffectPayment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEffectPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEffectPayment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEffectPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEffectPayment.Merge(m, src)
}
func (m *MsgEffectPayment) XXX_Size() int {
	return m.Size()
}
func (m *MsgEffectPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEffectPayment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEffectPayment proto.InternalMessageInfo

func (m *MsgEffectPayment) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgEffectPayment) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgEffectPayment) GetPartialPaymentAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.PartialPaymentAmount
	}
	return nil
}

func (m *MsgEffectPayment) GetSenderAddress() string {
	if m != nil {
		return m.SenderAddress
	}
	return ""
}

// MsgEffectPaymentResponse defines the Msg/EffectPayment response type.
type MsgEffectPaymentResponse struct {
}

func (m *MsgEffectPaymentResponse) Reset()         { *m = MsgEffectPaymentResponse{} }
func (m *MsgEffectPaymentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEffectPaymentResponse) ProtoMessage()    {}
func (*MsgEffectPaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d1af1e3aa55f1a5, []int{13}
}
func (m *MsgEffectPaymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEffectPaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEffectPaymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEffectPaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEffectPaymentResponse.Merge(m, src)
}
func (m *MsgEffectPaymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEffectPaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEffectPaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEffectPaymentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetPaymentContractAuthorisation)(nil), "ixo.payments.v1.MsgSetPaymentContractAuthorisation")
	proto.RegisterType((*MsgSetPaymentContractAuthorisationResponse)(nil), "ixo.payments.v1.MsgSetPaymentContractAuthorisationResponse")
	proto.RegisterType((*MsgCreatePaymentTemplate)(nil), "ixo.payments.v1.MsgCreatePaymentTemplate")
	proto.RegisterType((*MsgCreatePaymentTemplateResponse)(nil), "ixo.payments.v1.MsgCreatePaymentTemplateResponse")
	proto.RegisterType((*MsgCreatePaymentContract)(nil), "ixo.payments.v1.MsgCreatePaymentContract")
	proto.RegisterType((*MsgCreatePaymentContractResponse)(nil), "ixo.payments.v1.MsgCreatePaymentContractResponse")
	proto.RegisterType((*MsgCreateSubscription)(nil), "ixo.payments.v1.MsgCreateSubscription")
	proto.RegisterType((*MsgCreateSubscriptionResponse)(nil), "ixo.payments.v1.MsgCreateSubscriptionResponse")
	proto.RegisterType((*MsgGrantDiscount)(nil), "ixo.payments.v1.MsgGrantDiscount")
	proto.RegisterType((*MsgGrantDiscountResponse)(nil), "ixo.payments.v1.MsgGrantDiscountResponse")
	proto.RegisterType((*MsgRevokeDiscount)(nil), "ixo.payments.v1.MsgRevokeDiscount")
	proto.RegisterType((*MsgRevokeDiscountResponse)(nil), "ixo.payments.v1.MsgRevokeDiscountResponse")
	proto.RegisterType((*MsgEffectPayment)(nil), "ixo.payments.v1.MsgEffectPayment")
	proto.RegisterType((*MsgEffectPaymentResponse)(nil), "ixo.payments.v1.MsgEffectPaymentResponse")
}

func init() { proto.RegisterFile("ixo/payments/v1/tx.proto", fileDescriptor_7d1af1e3aa55f1a5) }

var fileDescriptor_7d1af1e3aa55f1a5 = []byte{
	// 1173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4f, 0x6f, 0x23, 0x35,
	0x1c, 0x4d, 0x9a, 0x36, 0xb4, 0xee, 0xf6, 0xdf, 0xd0, 0x96, 0x34, 0x68, 0x33, 0xc5, 0x87, 0xa5,
	0x5d, 0xe8, 0x8c, 0xd2, 0x05, 0x81, 0x96, 0x03, 0x6a, 0xda, 0x15, 0xea, 0xa1, 0xab, 0x65, 0x0a,
	0x1c, 0x90, 0x56, 0xc1, 0x99, 0x71, 0x52, 0xab, 0xc9, 0x78, 0x34, 0x9e, 0x54, 0xc9, 0x07, 0x40,
	0xe2, 0x84, 0x90, 0x38, 0x2c, 0x27, 0x58, 0x71, 0xe4, 0xcc, 0x87, 0xd8, 0xe3, 0x1e, 0x11, 0x87,
	0x01, 0xb5, 0xb7, 0x9e, 0x50, 0x3e, 0x01, 0x1a, 0xdb, 0x33, 0xf1, 0xa4, 0x53, 0xa5, 0xca, 0x6e,
	0xa5, 0x3d, 0x25, 0xf6, 0xef, 0xf9, 0xd9, 0x7e, 0xbf, 0xf7, 0xb3, 0x3d, 0xa0, 0x44, 0x7a, 0xd4,
	0xf4, 0x50, 0xbf, 0x83, 0xdd, 0x80, 0x99, 0x67, 0x55, 0x33, 0xe8, 0x19, 0x9e, 0x4f, 0x03, 0xaa,
	0x2d, 0x91, 0x1e, 0x35, 0xe2, 0x88, 0x71, 0x56, 0x2d, 0xaf, 0xb6, 0x68, 0x8b, 0xf2, 0x98, 0x19,
	0xfd, 0x13, 0xb0, 0xf2, 0x46, 0x8b, 0xd2, 0x56, 0x1b, 0x9b, 0xbc, 0xd5, 0xe8, 0x36, 0x4d, 0xe4,
	0xf6, 0x65, 0xa8, 0x32, 0xca, 0x9d, 0xb0, 0xc9, 0xb8, 0x4d, 0x59, 0x87, 0x32, 0xb3, 0x81, 0x18,
	0x36, 0xcf, 0xaa, 0x0d, 0x1c, 0xa0, 0xaa, 0x69, 0x53, 0xe2, 0x8a, 0x38, 0xfc, 0x73, 0x0a, 0xc0,
	0x23, 0xd6, 0x3a, 0xc6, 0xc1, 0x13, 0x31, 0x70, 0x9f, 0xba, 0x81, 0x8f, 0xec, 0x60, 0xaf, 0x1b,
	0x9c, 0x50, 0x9f, 0x30, 0x14, 0x10, 0xea, 0x6a, 0x8f, 0xc1, 0xdb, 0x92, 0xb8, 0x6e, 0x4b, 0x40,
	0x9d, 0x38, 0xa5, 0xfc, 0x66, 0x7e, 0x6b, 0xae, 0x56, 0x19, 0x84, 0x7a, 0xb9, 0x8f, 0x3a, 0xed,
	0x87, 0x30, 0x03, 0x04, 0xad, 0x15, 0x2f, 0x4d, 0x7d, 0xe8, 0x68, 0x55, 0x30, 0xe7, 0xa1, 0x3e,
	0xf6, 0xeb, 0x0e, 0x71, 0x4a, 0x53, 0x9c, 0x65, 0x75, 0x10, 0xea, 0xcb, 0x09, 0x8b, 0x08, 0x41,
	0x6b, 0x96, 0xff, 0x3f, 0x20, 0x8e, 0xf6, 0x31, 0x00, 0x48, 0xae, 0x09, 0x3b, 0xa5, 0xc2, 0x66,
	0x7e, 0x6b, 0xb6, 0xb6, 0x36, 0x08, 0xf5, 0x15, 0x31, 0x66, 0x18, 0x83, 0x96, 0x02, 0xd4, 0x1e,
	0x83, 0x05, 0x41, 0x87, 0x1c, 0xc7, 0xc7, 0x8c, 0x95, 0xa6, 0xf9, 0x6c, 0xdb, 0x97, 0xa1, 0x9e,
	0x0e, 0x0c, 0x42, 0x7d, 0x55, 0x9d, 0x5e, 0x76, 0x43, 0xeb, 0x0e, 0x6f, 0xef, 0x89, 0xe6, 0xc3,
	0xe9, 0x5f, 0x9e, 0xeb, 0x39, 0xf8, 0x21, 0xb8, 0x3f, 0x5e, 0x35, 0x0b, 0x33, 0x8f, 0xba, 0x0c,
	0xc3, 0xdf, 0xa6, 0x40, 0xe9, 0x88, 0xb5, 0xf6, 0x7d, 0x8c, 0x02, 0x2c, 0x47, 0x7c, 0x85, 0x3b,
	0x5e, 0x1b, 0x05, 0x58, 0xfb, 0x04, 0xcc, 0xdb, 0x51, 0x80, 0x0a, 0x31, 0x84, 0xa4, 0xeb, 0x83,
	0x50, 0xd7, 0xc4, 0x6a, 0x94, 0x20, 0xb4, 0x80, 0x6c, 0x45, 0x82, 0xb4, 0xc1, 0x72, 0x2c, 0x77,
	0x20, 0xc9, 0xb8, 0x94, 0xf3, 0xbb, 0x9b, 0xc6, 0x88, 0xaf, 0x8c, 0x91, 0x49, 0x6b, 0xfa, 0x8b,
	0x50, 0xcf, 0x0d, 0x42, 0xfd, 0x9d, 0x74, 0xda, 0x62, 0x1e, 0x68, 0x2d, 0x79, 0x23, 0xcb, 0xfc,
	0x06, 0x2c, 0xc5, 0x2b, 0x89, 0x95, 0x2c, 0xf0, 0xa5, 0xee, 0x5c, 0x86, 0xfa, 0x68, 0x68, 0x10,
	0xea, 0xeb, 0xe9, 0xd5, 0x27, 0x6a, 0x2e, 0xca, 0x9e, 0xb4, 0x9e, 0x10, 0x6c, 0x5e, 0x27, 0x50,
	0xa2, 0xe2, 0xf7, 0x33, 0x57, 0x55, 0x8c, 0x75, 0x9f, 0x5c, 0x45, 0xc5, 0xd9, 0xf1, 0xee, 0xeb,
	0x89, 0x27, 0x33, 0x9c, 0xad, 0x80, 0x86, 0xce, 0x8e, 0xd7, 0x7a, 0xe8, 0x5c, 0x57, 0x29, 0x85,
	0x49, 0x2b, 0xe5, 0x1e, 0x98, 0xe1, 0xfe, 0x93, 0xbe, 0x5d, 0x1e, 0x84, 0xfa, 0x1d, 0xc5, 0xa6,
	0xd0, 0x12, 0x61, 0xed, 0x29, 0x00, 0x3e, 0xb6, 0x89, 0x47, 0xa2, 0x94, 0x97, 0x66, 0x36, 0x0b,
	0x5b, 0xf3, 0xbb, 0xf0, 0x8a, 0x0f, 0x0e, 0x08, 0x0b, 0x7c, 0xd2, 0xe8, 0x46, 0xf6, 0x3c, 0x3e,
	0x41, 0x3e, 0xae, 0x6d, 0x48, 0x27, 0xc8, 0x32, 0x1a, 0x72, 0x40, 0x4b, 0x21, 0xd4, 0xf6, 0xc1,
	0x92, 0x8d, 0xdc, 0xba, 0x83, 0x93, 0xd2, 0x2a, 0x15, 0x79, 0x09, 0x96, 0x95, 0x5c, 0xa7, 0x01,
	0x51, 0xae, 0x91, 0x7b, 0x30, 0xec, 0xd0, 0x9a, 0x60, 0xde, 0x21, 0xcc, 0xa6, 0x5d, 0x97, 0x6b,
	0xf2, 0x16, 0xdf, 0xd1, 0xa3, 0x68, 0x01, 0x7f, 0x87, 0xfa, 0xfb, 0x2d, 0x12, 0x9c, 0x74, 0x1b,
	0x86, 0x4d, 0x3b, 0xa6, 0x3c, 0xb4, 0xc4, 0xcf, 0x0e, 0x73, 0x4e, 0xcd, 0xa0, 0xef, 0x61, 0x66,
	0x7c, 0x4d, 0xdc, 0x60, 0x98, 0x53, 0x85, 0x0b, 0x5a, 0x20, 0x6e, 0x1d, 0x3a, 0x59, 0x5e, 0x9d,
	0xbd, 0x55, 0xaf, 0xc6, 0xf9, 0x4a, 0xbc, 0xfa, 0x5f, 0x01, 0xac, 0x25, 0xa0, 0xe3, 0x6e, 0x83,
	0xd9, 0x3e, 0xf1, 0xf8, 0x49, 0x3a, 0xb1, 0x51, 0xf7, 0xc1, 0x12, 0x53, 0x88, 0x86, 0x26, 0x55,
	0x32, 0x30, 0x02, 0x80, 0xd6, 0xa2, 0xda, 0x73, 0x0b, 0xee, 0x6c, 0x82, 0xf9, 0x0e, 0xea, 0xd5,
	0x3d, 0xec, 0x13, 0xea, 0xc4, 0x67, 0xeb, 0xe4, 0x19, 0x55, 0xb8, 0xa0, 0x05, 0x3a, 0xa8, 0xf7,
	0x44, 0x34, 0xb4, 0xcf, 0x41, 0x51, 0xf4, 0x97, 0x66, 0xf8, 0x09, 0xb7, 0x6a, 0x88, 0x2b, 0xd1,
	0x88, 0xaf, 0x44, 0x63, 0xcf, 0xed, 0xd7, 0x56, 0x06, 0xa1, 0xbe, 0x20, 0x37, 0xc0, 0xd1, 0xd0,
	0x92, 0xc3, 0xb2, 0x2c, 0x51, 0x7c, 0x1d, 0x96, 0x98, 0xfd, 0xe1, 0xb9, 0x9e, 0xe3, 0xb6, 0xd0,
	0xc1, 0xdd, 0xcc, 0x8c, 0x27, 0x9e, 0xf8, 0xb1, 0x00, 0x96, 0x8f, 0x58, 0xeb, 0x0b, 0x1f, 0xb9,
	0xc1, 0x81, 0x34, 0xab, 0xf6, 0x11, 0x00, 0x0c, 0xbb, 0x0e, 0x56, 0xdd, 0xa0, 0xdc, 0x6a, 0xc3,
	0x18, 0xb4, 0xe6, 0x44, 0x63, 0xe4, 0xd0, 0x52, 0xd3, 0x38, 0xf5, 0x0a, 0x69, 0x54, 0x0b, 0xb3,
	0x70, 0x5b, 0x85, 0xb9, 0x0b, 0xe6, 0x92, 0x33, 0x45, 0x9a, 0x45, 0xb9, 0xf6, 0x93, 0x10, 0xb4,
	0x86, 0x30, 0xcd, 0x02, 0x8b, 0x52, 0x85, 0x38, 0x71, 0x33, 0x7c, 0xe0, 0x07, 0x97, 0xa1, 0x3e,
	0x12, 0x19, 0x84, 0xfa, 0x5a, 0x4a, 0xb7, 0x24, 0x6d, 0x0b, 0xa2, 0x23, 0x5d, 0xc8, 0x65, 0x7e,
	0x9f, 0xa4, 0xf2, 0x91, 0x24, 0xeb, 0xd7, 0x29, 0xb0, 0x72, 0xc4, 0x5a, 0x16, 0x3e, 0xa3, 0xa7,
	0xf8, 0x0d, 0xcb, 0xd6, 0x36, 0x28, 0x9e, 0xd0, 0xb6, 0x83, 0x7d, 0x99, 0x28, 0xc5, 0xf6, 0xa2,
	0x1f, 0x5a, 0x12, 0x90, 0x21, 0xde, 0xf4, 0x6b, 0x12, 0xef, 0x5d, 0xb0, 0x71, 0x45, 0x9f, 0x44,
	0xbd, 0x67, 0xc2, 0xea, 0x8f, 0x9a, 0x4d, 0x6c, 0xc7, 0x4f, 0xa4, 0x37, 0x44, 0xbc, 0xdf, 0xf3,
	0x60, 0xdd, 0x43, 0x7e, 0x40, 0x50, 0xbb, 0x1e, 0x8f, 0x41, 0x9d, 0x68, 0xf5, 0xa5, 0x22, 0xbf,
	0x34, 0x37, 0x0c, 0xe1, 0x6e, 0x23, 0x7a, 0x32, 0x1b, 0xf2, 0xc9, 0x6c, 0xec, 0x53, 0xe2, 0xd6,
	0xbe, 0x94, 0x77, 0xe5, 0xdd, 0x78, 0xca, 0x2c, 0x1a, 0xf8, 0xc7, 0x3f, 0xfa, 0xd6, 0x0d, 0x4a,
	0x26, 0x62, 0x64, 0xd6, 0xaa, 0x24, 0x91, 0x22, 0xed, 0x71, 0x8a, 0x5b, 0x4c, 0x9b, 0xf0, 0x7c,
	0x2a, 0x31, 0x71, 0xd6, 0x76, 0x9f, 0x15, 0x41, 0xe1, 0x88, 0xb5, 0xb4, 0x9f, 0xf3, 0x40, 0x1f,
	0xf7, 0x41, 0xf0, 0xe0, 0xca, 0xd3, 0x62, 0xfc, 0x7b, 0xb8, 0xfc, 0xd9, 0x04, 0x83, 0xe2, 0xd5,
	0x69, 0x5d, 0xb0, 0x96, 0xfd, 0x80, 0xde, 0xce, 0x62, 0xcd, 0x84, 0x96, 0xab, 0x37, 0x86, 0x5e,
	0x3b, 0x6d, 0xf2, 0xe2, 0x1c, 0x3f, 0x6d, 0x0c, 0xbd, 0xc1, 0xb4, 0xa3, 0x0f, 0x08, 0xad, 0x0d,
	0xb4, 0x8c, 0xc7, 0xc3, 0xbd, 0xeb, 0x89, 0x54, 0x5c, 0xd9, 0xb8, 0x19, 0x2e, 0x99, 0xed, 0x29,
	0x58, 0x48, 0x5f, 0x4b, 0xef, 0x65, 0x11, 0xa4, 0x20, 0xe5, 0xed, 0xb1, 0x90, 0x84, 0xfe, 0x3b,
	0xb0, 0x38, 0x72, 0x90, 0xc2, 0xac, 0xc1, 0x69, 0x4c, 0xf9, 0xfe, 0x78, 0x8c, 0xba, 0x81, 0xf4,
	0x61, 0x93, 0xb9, 0x81, 0x14, 0x24, 0x7b, 0x03, 0x99, 0x95, 0x51, 0xb3, 0x5e, 0x9c, 0x57, 0xf2,
	0x2f, 0xcf, 0x2b, 0xf9, 0x7f, 0xcf, 0x2b, 0xf9, 0x9f, 0x2e, 0x2a, 0xb9, 0x97, 0x17, 0x95, 0xdc,
	0x5f, 0x17, 0x95, 0xdc, 0xb7, 0x9f, 0x2a, 0x95, 0x4e, 0x7a, 0xb4, 0x49, 0xbb, 0xae, 0xc3, 0x7d,
	0x1b, 0xb5, 0x76, 0x1a, 0x6d, 0x6a, 0x9f, 0xda, 0x27, 0x88, 0xb8, 0x66, 0x6f, 0xf8, 0x95, 0xce,
	0xeb, 0xbf, 0x51, 0xe4, 0x4f, 0x97, 0x07, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd4, 0xf1, 0x5c,
	0xb0, 0x1e, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// SetPaymentContractAuthorisation defines a method for authorising or deauthorising a payment contract.
	SetPaymentContractAuthorisation(ctx context.Context, in *MsgSetPaymentContractAuthorisation, opts ...grpc.CallOption) (*MsgSetPaymentContractAuthorisationResponse, error)
	// CreatePaymentTemplate defines a method for creating a payment template.
	CreatePaymentTemplate(ctx context.Context, in *MsgCreatePaymentTemplate, opts ...grpc.CallOption) (*MsgCreatePaymentTemplateResponse, error)
	// CreatePaymentContract defines a method for creating a payment contract.
	CreatePaymentContract(ctx context.Context, in *MsgCreatePaymentContract, opts ...grpc.CallOption) (*MsgCreatePaymentContractResponse, error)
	// CreateSubscription defines a method for creating a subscription.
	CreateSubscription(ctx context.Context, in *MsgCreateSubscription, opts ...grpc.CallOption) (*MsgCreateSubscriptionResponse, error)
	// GrantDiscount defines a method for granting a discount to a payer on a specific payment contract.
	GrantDiscount(ctx context.Context, in *MsgGrantDiscount, opts ...grpc.CallOption) (*MsgGrantDiscountResponse, error)
	// RevokeDiscount defines a method for revoking a discount previously granted to a payer.
	RevokeDiscount(ctx context.Context, in *MsgRevokeDiscount, opts ...grpc.CallOption) (*MsgRevokeDiscountResponse, error)
	// EffectPayment defines a method for putting a specific payment contract into effect.
	EffectPayment(ctx context.Context, in *MsgEffectPayment, opts ...grpc.CallOption) (*MsgEffectPaymentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetPaymentContractAuthorisation(ctx context.Context, in *MsgSetPaymentContractAuthorisation, opts ...grpc.CallOption) (*MsgSetPaymentContractAuthorisationResponse, error) {
	out := new(MsgSetPaymentContractAuthorisationResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/SetPaymentContractAuthorisation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePaymentTemplate(ctx context.Context, in *MsgCreatePaymentTemplate, opts ...grpc.CallOption) (*MsgCreatePaymentTemplateResponse, error) {
	out := new(MsgCreatePaymentTemplateResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/CreatePaymentTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePaymentContract(ctx context.Context, in *MsgCreatePaymentContract, opts ...grpc.CallOption) (*MsgCreatePaymentContractResponse, error) {
	out := new(MsgCreatePaymentContractResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/CreatePaymentContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSubscription(ctx context.Context, in *MsgCreateSubscription, opts ...grpc.CallOption) (*MsgCreateSubscriptionResponse, error) {
	out := new(MsgCreateSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/CreateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GrantDiscount(ctx context.Context, in *MsgGrantDiscount, opts ...grpc.CallOption) (*MsgGrantDiscountResponse, error) {
	out := new(MsgGrantDiscountResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/GrantDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevokeDiscount(ctx context.Context, in *MsgRevokeDiscount, opts ...grpc.CallOption) (*MsgRevokeDiscountResponse, error) {
	out := new(MsgRevokeDiscountResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/RevokeDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EffectPayment(ctx context.Context, in *MsgEffectPayment, opts ...grpc.CallOption) (*MsgEffectPaymentResponse, error) {
	out := new(MsgEffectPaymentResponse)
	err := c.cc.Invoke(ctx, "/ixo.payments.v1.Msg/EffectPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SetPaymentContractAuthorisation defines a method for authorising or deauthorising a payment contract.
	SetPaymentContractAuthorisation(context.Context, *MsgSetPaymentContractAuthorisation) (*MsgSetPaymentContractAuthorisationResponse, error)
	// CreatePaymentTemplate defines a method for creating a payment template.
	CreatePaymentTemplate(context.Context, *MsgCreatePaymentTemplate) (*MsgCreatePaymentTemplateResponse, error)
	// CreatePaymentContract defines a method for creating a payment contract.
	CreatePaymentContract(context.Context, *MsgCreatePaymentContract) (*MsgCreatePaymentContractResponse, error)
	// CreateSubscription defines a method for creating a subscription.
	CreateSubscription(context.Context, *MsgCreateSubscription) (*MsgCreateSubscriptionResponse, error)
	// GrantDiscount defines a method for granting a discount to a payer on a specific payment contract.
	GrantDiscount(context.Context, *MsgGrantDiscount) (*MsgGrantDiscountResponse, error)
	// RevokeDiscount defines a method for revoking a discount previously granted to a payer.
	RevokeDiscount(context.Context, *MsgRevokeDiscount) (*MsgRevokeDiscountResponse, error)
	// EffectPayment defines a method for putting a specific payment contract into effect.
	EffectPayment(context.Context, *MsgEffectPayment) (*MsgEffectPaymentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetPaymentContractAuthorisation(ctx context.Context, req *MsgSetPaymentContractAuthorisation) (*MsgSetPaymentContractAuthorisationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPaymentContractAuthorisation not implemented")
}
func (*UnimplementedMsgServer) CreatePaymentTemplate(ctx context.Context, req *MsgCreatePaymentTemplate) (*MsgCreatePaymentTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaymentTemplate not implemented")
}
func (*UnimplementedMsgServer) CreatePaymentContract(ctx context.Context, req *MsgCreatePaymentContract) (*MsgCreatePaymentContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaymentContract not implemented")
}
func (*UnimplementedMsgServer) CreateSubscription(ctx context.Context, req *MsgCreateSubscription) (*MsgCreateSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscription not implemented")
}
func (*UnimplementedMsgServer) GrantDiscount(ctx context.Context, req *MsgGrantDiscount) (*MsgGrantDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantDiscount not implemented")
}
func (*UnimplementedMsgServer) RevokeDiscount(ctx context.Context, req *MsgRevokeDiscount) (*MsgRevokeDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeDiscount not implemented")
}
func (*UnimplementedMsgServer) EffectPayment(ctx context.Context, req *MsgEffectPayment) (*MsgEffectPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EffectPayment not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetPaymentContractAuthorisation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPaymentContractAuthorisation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPaymentContractAuthorisation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/SetPaymentContractAuthorisation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPaymentContractAuthorisation(ctx, req.(*MsgSetPaymentContractAuthorisation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePaymentTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePaymentTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePaymentTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/CreatePaymentTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePaymentTemplate(ctx, req.(*MsgCreatePaymentTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePaymentContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePaymentContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePaymentContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/CreatePaymentContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePaymentContract(ctx, req.(*MsgCreatePaymentContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSubscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/CreateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSubscription(ctx, req.(*MsgCreateSubscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GrantDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGrantDiscount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GrantDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/GrantDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GrantDiscount(ctx, req.(*MsgGrantDiscount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevokeDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevokeDiscount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevokeDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/RevokeDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevokeDiscount(ctx, req.(*MsgRevokeDiscount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EffectPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEffectPayment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EffectPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ixo.payments.v1.Msg/EffectPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EffectPayment(ctx, req.(*MsgEffectPayment))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ixo.payments.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetPaymentContractAuthorisation",
			Handler:    _Msg_SetPaymentContractAuthorisation_Handler,
		},
		{
			MethodName: "CreatePaymentTemplate",
			Handler:    _Msg_CreatePaymentTemplate_Handler,
		},
		{
			MethodName: "CreatePaymentContract",
			Handler:    _Msg_CreatePaymentContract_Handler,
		},
		{
			MethodName: "CreateSubscription",
			Handler:    _Msg_CreateSubscription_Handler,
		},
		{
			MethodName: "GrantDiscount",
			Handler:    _Msg_GrantDiscount_Handler,
		},
		{
			MethodName: "RevokeDiscount",
			Handler:    _Msg_RevokeDiscount_Handler,
		},
		{
			MethodName: "EffectPayment",
			Handler:    _Msg_EffectPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ixo/payments/v1/tx.proto",
}

func (m *MsgSetPaymentContractAuthorisation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPaymentContractAuthorisation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPaymentContractAuthorisation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PayerAddress) > 0 {
		i -= len(m.PayerAddress)
		copy(dAtA[i:], m.PayerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PayerAddress)))
		i--
		dAtA[i] = 0x22
	}
	if m.Authorised {
		i--
		if m.Authorised {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.PayerDid) > 0 {
		i -= len(m.PayerDid)
		copy(dAtA[i:], m.PayerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PayerDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPaymentContractAuthorisationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPaymentContractAuthorisationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPaymentContractAuthorisationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CreatorAddress) > 0 {
		i -= len(m.CreatorAddress)
		copy(dAtA[i:], m.CreatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.PaymentTemplate.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentTemplateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentTemplateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentTemplateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CreatorAddress) > 0 {
		i -= len(m.CreatorAddress)
		copy(dAtA[i:], m.CreatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorAddress)))
		i--
		dAtA[i] = 0x42
	}
	{
		size := m.DiscountId.Size()
		i -= size
		if _, err := m.DiscountId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if m.CanDeauthorise {
		i--
		if m.CanDeauthorise {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Recipients) > 0 {
		for iNdEx := len(m.Recipients) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Recipients[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Payer) > 0 {
		i -= len(m.Payer)
		copy(dAtA[i:], m.Payer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Payer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PaymentTemplateId) > 0 {
		i -= len(m.PaymentTemplateId)
		copy(dAtA[i:], m.PaymentTemplateId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentTemplateId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubscription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CreatorAddress) > 0 {
		i -= len(m.CreatorAddress)
		copy(dAtA[i:], m.CreatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorAddress)))
		i--
		dAtA[i] = 0x32
	}
	if m.Period != nil {
		{
			size, err := m.Period.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	{
		size := m.MaxPeriods.Size()
		i -= size
		if _, err := m.MaxPeriods.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubscriptionId) > 0 {
		i -= len(m.SubscriptionId)
		copy(dAtA[i:], m.SubscriptionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriptionId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubscriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubscriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubscriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGrantDiscount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantDiscount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantDiscount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SenderAddress) > 0 {
		i -= len(m.SenderAddress)
		copy(dAtA[i:], m.SenderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x22
	}
	{
		size := m.DiscountId.Size()
		i -= size
		if _, err := m.DiscountId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGrantDiscountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantDiscountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantDiscountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevokeDiscount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeDiscount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeDiscount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SenderAddress) > 0 {
		i -= len(m.SenderAddress)
		copy(dAtA[i:], m.SenderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Holder) > 0 {
		i -= len(m.Holder)
		copy(dAtA[i:], m.Holder)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Holder)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeDiscountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeDiscountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeDiscountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEffectPayment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEffectPayment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEffectPayment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PartialPaymentAmount) > 0 {
		for iNdEx := len(m.PartialPaymentAmount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PartialPaymentAmount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.SenderAddress) > 0 {
		i -= len(m.SenderAddress)
		copy(dAtA[i:], m.SenderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEffectPaymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEffectPaymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEffectPaymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetPaymentContractAuthorisation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PayerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Authorised {
		n += 2
	}
	l = len(m.PayerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetPaymentContractAuthorisationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePaymentTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.PaymentTemplate.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.CreatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePaymentTemplateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePaymentContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentTemplateId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Payer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Recipients) > 0 {
		for _, e := range m.Recipients {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.CanDeauthorise {
		n += 2
	}
	l = m.DiscountId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.CreatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePaymentContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubscriptionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.MaxPeriods.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Period != nil {
		l = m.Period.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CreatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSubscriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGrantDiscount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.DiscountId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGrantDiscountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevokeDiscount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Holder)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRevokeDiscountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEffectPayment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SenderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.PartialPaymentAmount) > 0 {
		for _, e := range m.PartialPaymentAmount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgEffectPaymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetPaymentContractAuthorisation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PayerDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorised", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Authorised = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PayerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPaymentContractAuthorisationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PaymentTemplate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentTemplateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTemplateId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentTemplateId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipients = append(m.Recipients, DistributionShare{})
			if err := m.Recipients[len(m.Recipients)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanDeauthorise", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanDeauthorise = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DiscountId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubscription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubscription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubscription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriptionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriptionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPeriods", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxPeriods.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Period == nil {
				m.Period = &types.Any{}
			}
			if err := m.Period.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubscriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubscriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubscriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantDiscount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantDiscount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantDiscount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DiscountId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantDiscountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantDiscountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantDiscountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeDiscount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeDiscount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeDiscount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Holder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Holder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeDiscountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeDiscountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeDiscountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEffectPayment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEffectPayment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEffectPayment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PartialPaymentAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PartialPaymentAmount = append(m.PartialPaymentAmount, types1.Coin{})
			if err := m.PartialPaymentAmount[len(m.PartialPaymentAmount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEffectPaymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEffectPaymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEffectPaymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
